"use strict";(self.webpackChunksource_2_wiki=self.webpackChunksource_2_wiki||[]).push([[36352],{8306:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/lookat_options-0cf926ed947d60d354c894d3f4e83dd7.png"},28453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>s});var n=i(96540);const o={},r=n.createContext(o);function a(e){const t=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),n.createElement(r.Provider,{value:t},e.children)}},50477:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>a,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"EngineTools/AnimgraphEditor/AnimgraphEditorNodes/ConstraintsProcedural/lookat","title":"Look At","description":"Procedurally rotate a chain of bones to face a direction.","source":"@site/docs/EngineTools/AnimgraphEditor/AnimgraphEditorNodes/ConstraintsProcedural/lookat.mdx","sourceDirName":"EngineTools/AnimgraphEditor/AnimgraphEditorNodes/ConstraintsProcedural","slug":"/EngineTools/AnimgraphEditor/AnimgraphEditorNodes/ConstraintsProcedural/lookat","permalink":"/EngineTools/AnimgraphEditor/AnimgraphEditorNodes/ConstraintsProcedural/lookat","draft":false,"unlisted":false,"editUrl":"https://github.com/Source2Wiki/Source2Wiki/blob/master/docs/EngineTools/AnimgraphEditor/AnimgraphEditorNodes/ConstraintsProcedural/lookat.mdx?plain=1","tags":[],"version":"current","frontMatter":{"description":"Procedurally rotate a chain of bones to face a direction.","title":"Look At"},"sidebar":"tutorialSidebar","previous":{"title":"Jiggle Bone","permalink":"/EngineTools/AnimgraphEditor/AnimgraphEditorNodes/ConstraintsProcedural/jigglebone"},"next":{"title":"Procedural Hit Reactions","permalink":"/EngineTools/AnimgraphEditor/AnimgraphEditorNodes/ConstraintsProcedural/proceduralhitreacts"}}');var o=i(74848),r=i(28453);const a={description:"Procedurally rotate a chain of bones to face a direction.",title:"Look At"},s=void 0,l={},d=[{value:"Target",id:"target",level:2},{value:"Weight Parameter",id:"weight-parameter",level:2},{value:"LookAt Chain",id:"lookat-chain",level:2},{value:"Aim Attachment",id:"aim-attachment",level:2},{value:"Rotation Limits",id:"rotation-limits",level:2},{value:"Rotate Through Forward",id:"rotate-through-forward",level:3},{value:"Yaw Limit",id:"yaw-limit",level:3},{value:"Pitch Limit",id:"pitch-limit",level:3},{value:"Maintain Up Direction",id:"maintain-up-direction",level:2},{value:"Reset Child",id:"reset-child",level:2},{value:"Lock Blend When Waning",id:"lock-blend-when-waning",level:2},{value:"Hysteresis",id:"hysteresis",level:2},{value:"Use Hysteresis",id:"use-hysteresis",level:3},{value:"Inner Angle",id:"inner-angle",level:3},{value:"Outer Angle",id:"outer-angle",level:3},{value:"Damping",id:"damping",level:2},{value:"Speed Function",id:"speed-function",level:3},{value:"Speed Scale",id:"speed-scale",level:3},{value:"Speed Scale (Falling)",id:"speed-scale-falling",level:3},{value:"Limit Speed",id:"limit-speed",level:3},{value:"Min Speed",id:"min-speed",level:3},{value:"Max Speed",id:"max-speed",level:3}];function h(e){const t={h2:"h2",h3:"h3",img:"img",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"Procedurally rotate a chain of bones to face a certain direction."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"look at in editor",src:i(61854).A+"",title:"Look At Node",width:"619",height:"241"})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"look at options",src:i(8306).A+"",title:"Look At Options",width:"494",height:"374"})}),"\n",(0,o.jsx)(t.h2,{id:"target",children:"Target"}),"\n",(0,o.jsx)(t.p,{children:"What the lookAt node should aim at.  Can be a direction or a location"}),"\n",(0,o.jsx)(t.h2,{id:"weight-parameter",children:"Weight Parameter"}),"\n",(0,o.jsx)("b",{children:"(Optional)"}),"\n",(0,o.jsx)("p",{children:(0,o.jsx)(t.p,{children:"Set a float parameter to control the blend weight of the lookat"})}),"\n",(0,o.jsx)(t.h2,{id:"lookat-chain",children:"LookAt Chain"}),"\n",(0,o.jsx)(t.p,{children:"The chain of bones that will be rotated as part of the lookat.  LookAt Chains are defined in ModelDoc, and referenced by name here."}),"\n",(0,o.jsx)(t.h2,{id:"aim-attachment",children:"Aim Attachment"}),"\n",(0,o.jsxs)(t.p,{children:["The LookAt op needs to know not just what to aim ",(0,o.jsx)("em",{children:"at"}),", but also where to aim ",(0,o.jsx)("em",{children:"from"}),'.  This field lets you pick an attachment that defines what this node considers "forward", and the lookat rotation will be made based on the direction to the target relative to this attachment.']}),"\n",(0,o.jsx)(t.h2,{id:"rotation-limits",children:"Rotation Limits"}),"\n",(0,o.jsx)(t.h3,{id:"rotate-through-forward",children:"Rotate Through Forward"}),"\n",(0,o.jsx)(t.p,{children:"When enabled, the entity will not rotate from -180 to 180 directly but instead rotate through 0 degrees (forward for the entity).  Bad for turrets, good for humans."}),"\n",(0,o.jsx)(t.h3,{id:"yaw-limit",children:"Yaw Limit"}),"\n",(0,o.jsx)(t.p,{children:"The maximum angle that the lookat can turn the aim to the side."}),"\n",(0,o.jsx)(t.h3,{id:"pitch-limit",children:"Pitch Limit"}),"\n",(0,o.jsx)(t.p,{children:"The maximum angle that the lookat can turn the aim up or down."}),"\n",(0,o.jsx)(t.h2,{id:"maintain-up-direction",children:"Maintain Up Direction"}),"\n",(0,o.jsx)(t.p,{children:"Take the direction that was 'up' on the attachement before the lookat node changed the pose, and rotate the modified lookat chain so that direction is still 'up' as much as possible."}),"\n",(0,o.jsx)(t.h2,{id:"reset-child",children:"Reset Child"}),"\n",(0,o.jsx)(t.p,{children:"If this option is checked, it will reset its child node when it gets reset by its parent."}),"\n",(0,o.jsx)(t.h2,{id:"lock-blend-when-waning",children:"Lock Blend When Waning"}),"\n",(0,o.jsx)(t.p,{children:"Don't change the look direction if this node is blending out."}),"\n",(0,o.jsx)(t.h2,{id:"hysteresis",children:"Hysteresis"}),"\n",(0,o.jsx)(t.h3,{id:"use-hysteresis",children:"Use Hysteresis"}),"\n",(0,o.jsx)(t.p,{children:"Turns hysteresis support on and off."}),"\n",(0,o.jsx)(t.p,{children:'Using Hysteresis on the lookat makes it act "sticky".  Once it has turned to look in a direction it will stay there until the target direction moves more than a certain threshold.  Once it does, it will turn to look in the new direction until it is within an inner threshold.'}),"\n",(0,o.jsx)(t.h3,{id:"inner-angle",children:"Inner Angle"}),"\n",(0,o.jsxs)(t.p,{children:["Once the lookat starts turning towards the target direction, it will keep turning towards the target until the target is within this angle.  For best results this should be less than ",(0,o.jsx)("b",{children:"Outer Angle"})]}),"\n",(0,o.jsx)(t.h3,{id:"outer-angle",children:"Outer Angle"}),"\n",(0,o.jsxs)(t.p,{children:["If the lookat is at rest, the target direction must be more than this threshold in order for the lookat to start turning to face the target direction.  To get the best results this should be more than ",(0,o.jsx)("b",{children:"Inner Angle"}),"."]}),"\n",(0,o.jsx)(t.h2,{id:"damping",children:"Damping"}),"\n",(0,o.jsx)(t.p,{children:"Settings for damping the motion of the blended aim over time"}),"\n",(0,o.jsx)(t.h3,{id:"speed-function",children:"Speed Function"}),"\n",(0,o.jsx)(t.p,{children:"Controls how damped speed is adjusted based on how far the current value is from the target value."}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)("b",{children:"No Damping:"})," Damping is not applied. ",(0,o.jsx)("br",{})]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)("b",{children:"Constant:"})," The damping speed does not change with distance from the target value. ",(0,o.jsx)("br",{})]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)("b",{children:"Spring:"})," A critically damped spring is used to accelerate the current value toward the target value.  The farther the current value is from the target, the more the acceleration.  However the spring will not overshoot the target value. ",(0,o.jsx)("br",{})]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)("b",{children:"Asymmetric Spring"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.h3,{id:"speed-scale",children:"Speed Scale"}),"\n",(0,o.jsxs)(t.p,{children:["Scales the speed of the damping, or in the case of the Spring ",(0,o.jsx)("b",{children:"Speed Function"})," it controls the strength of the spring."]}),"\n",(0,o.jsx)(t.h3,{id:"speed-scale-falling",children:"Speed Scale (Falling)"}),"\n",(0,o.jsxs)(t.p,{children:["When using AsymmetricSpring for ",(0,o.jsx)("b",{children:"Speed Function"})," it controls the strength of the spring, only when damping to a lower value."]}),"\n",(0,o.jsx)(t.h3,{id:"limit-speed",children:"Limit Speed"}),"\n",(0,o.jsx)(t.p,{children:"Toggle whether or not to clamp the damping speed"}),"\n",(0,o.jsx)(t.h3,{id:"min-speed",children:"Min Speed"}),"\n",(0,o.jsxs)(t.p,{children:["If ",(0,o.jsx)("b",{children:"Limit Speed "}),"is set, this is the slowest speed that the dampened value can change at."]}),"\n",(0,o.jsx)(t.h3,{id:"max-speed",children:"Max Speed"}),"\n",(0,o.jsxs)(t.p,{children:["If ",(0,o.jsx)("b",{children:"Limit Speed "}),"is set, this is the fastest speed that the dampened value can change at."]})]})}function c(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},61854:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/lookat_node-6089a6b9f03743001517230f70919136.png"}}]);