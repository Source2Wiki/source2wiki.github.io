"use strict";(self.webpackChunksource_2_wiki=self.webpackChunksource_2_wiki||[]).push([[18276],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var i=s(96540);const r={},t=i.createContext(r);function l(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:n},e.children)}},79386:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>a,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"type":"mdx","permalink":"/Entities/worldspawn-dota2","source":"@site/src/pages/Entities/worldspawn-dota2.mdx","description":"\x3c!---","frontMatter":{"hide_table_of_contents":true},"unlisted":false}');var r=s(74848),t=s(28453);const l={hide_table_of_contents:!0},o=void 0,c={},d=[];function h(e){const n={br:"br",code:"code",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Mesh Entity"}),"\n",(0,r.jsx)(n.p,{children:"This is the world entity. Each map can only contain one, and it's automatically created for you."}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:(0,r.jsx)("h2",{children:"Keyvalues"})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Name"})," (",(0,r.jsx)(n.code,{children:"targetname"}),") <",(0,r.jsx)(n.code,{children:"TargetSource"}),">",(0,r.jsx)(n.br,{}),"\n","The name that other entities refer to this entity by."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"SkyBox Texture Name"})," (",(0,r.jsx)(n.code,{children:"skyname"}),") <",(0,r.jsx)(n.code,{children:"String"}),">"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Level Fade In"})," (",(0,r.jsx)(n.code,{children:"startdark"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Level Fade In Color (R G B)"})," (",(0,r.jsx)(n.code,{children:"startcolor"}),") <",(0,r.jsx)(n.code,{children:"Color255"}),">"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Precomputed Visibility"})," (",(0,r.jsx)(n.code,{children:"pvstype"}),") <",(0,r.jsx)(n.code,{children:"Choices"}),">"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Disabled"}),"\n",(0,r.jsx)(n.li,{children:"Test map (open space, no skybox)"}),"\n",(0,r.jsx)(n.li,{children:"Full visibility solve"}),"\n",(0,r.jsx)(n.li,{children:"Partitioned solve (large map volume)"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"New Level Unit"})," (",(0,r.jsx)(n.code,{children:"newunit"}),") <",(0,r.jsx)(n.code,{children:"Choices"}),">",(0,r.jsx)(n.br,{}),"\n","Used to clear out savegame data of previous levels to keep the savegame size as small as possible. Only set it to Yes if the player cannot return to any previous levels."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"No, keep current"}),"\n",(0,r.jsx)(n.li,{children:"Yes, clear previous levels"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Start Fade Pixels"})," (",(0,r.jsx)(n.code,{children:"maxpropscreenwidth"}),") <",(0,r.jsx)(n.code,{children:"Float"}),">",(0,r.jsx)(n.br,{}),"\n","Number of pixels wide at which all props in the level start to fade (<0 = use fademaxdist). This number is ignored if the prop has a specific fade distance specified."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"End Fade Pixels"})," (",(0,r.jsx)(n.code,{children:"minpropscreenwidth"}),") <",(0,r.jsx)(n.code,{children:"Float"}),">",(0,r.jsx)(n.br,{}),"\n","Minimum number of pixels wide at which the prop is visible (0 = don't fade out). This number is ignored if the prop has a specific fade distance specified."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Precomputed Visibility"})," (",(0,r.jsx)(n.code,{children:"pvstype"}),") <",(0,r.jsx)(n.code,{children:"Choices"}),">"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Disabled"}),"\n",(0,r.jsx)(n.li,{children:"Test map (open space, no skybox)"}),"\n",(0,r.jsx)(n.li,{children:"Full visibility solve"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Optimized Heightfield Name"})," (",(0,r.jsx)(n.code,{children:"OptimizedHeightFieldName"}),") <",(0,r.jsx)(n.code,{children:"String"}),">",(0,r.jsx)(n.br,{}),"\n","Optional name of an optimized heightfield to use for ground traces. An example is maps/someheightfield.bin."]}),"\n"]}),"\n"]})]})]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);