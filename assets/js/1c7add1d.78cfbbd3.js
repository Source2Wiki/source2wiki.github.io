"use strict";(self.webpackChunksource_2_wiki=self.webpackChunksource_2_wiki||[]).push([[10368],{19201:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>t,toc:()=>r});const t=JSON.parse('{"id":"EngineTools/AnimgraphEditor/AnimgraphEditorNodes/Blend/2d_blend","title":"2D Blend","description":"2D Blendspace.","source":"@site/docs/EngineTools/AnimgraphEditor/AnimgraphEditorNodes/Blend/2d_blend.mdx","sourceDirName":"EngineTools/AnimgraphEditor/AnimgraphEditorNodes/Blend","slug":"/EngineTools/AnimgraphEditor/AnimgraphEditorNodes/Blend/2d_blend","permalink":"/EngineTools/AnimgraphEditor/AnimgraphEditorNodes/Blend/2d_blend","draft":false,"unlisted":false,"editUrl":"https://github.com/Source2Wiki/Source2Wiki/blob/master/docs/EngineTools/AnimgraphEditor/AnimgraphEditorNodes/Blend/2d_blend.mdx?plain=1","tags":[],"version":"current","frontMatter":{"description":"2D Blendspace.","title":"2D Blend"},"sidebar":"tutorialSidebar","previous":{"title":"Directional Blend","permalink":"/EngineTools/AnimgraphEditor/AnimgraphEditorNodes/Blend/1d_blend_directional"},"next":{"title":"Additive Anim Node","permalink":"/EngineTools/AnimgraphEditor/AnimgraphEditorNodes/Blend/additive"}}');var d=i(74848),s=i(28453);const l={description:"2D Blendspace.",title:"2D Blend"},o=void 0,a={},r=[{value:"Blend Mode",id:"blend-mode",level:2},{value:"Loop",id:"loop",level:2},{value:"Lock Blend on Reset",id:"lock-blend-on-reset",level:2},{value:"Playback Speed",id:"playback-speed",level:2},{value:"AnimEvents and Tags Exclusive To Most Weighted",id:"animevents-and-tags-exclusive-to-most-weighted",level:2},{value:"Damping",id:"damping",level:2},{value:"Speed Function",id:"speed-function",level:3},{value:"Speed Scale",id:"speed-scale",level:3},{value:"Speed Scale (Falling)",id:"speed-scale-falling",level:3},{value:"Limit Speed",id:"limit-speed",level:3},{value:"Min Speed",id:"min-speed",level:3},{value:"Max Speed",id:"max-speed",level:3}];function h(e){const n={h2:"h2",h3:"h3",img:"img",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.p,{children:"Blends between a set of animations based on the values of two variables. It can be either two parameters representing Horizontal/Vertical directions, or Blend Axes directly."}),"\n",(0,d.jsx)(n.p,{children:"2D Blend node can use a list of animations, or can connect to nodes to blend between and the defined 2D coordinates in the blend space."}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.img,{alt:"2dblend nodes",src:i(71894).A+"",title:"Nodes connected to 2D Blend",width:"781",height:"497"}),"\n",(0,d.jsx)(n.img,{alt:"2dblend nodes image",src:i(76340).A+"",title:"Nodes connected to 2D Blend",width:"304",height:"584"})]}),"\n",(0,d.jsx)(n.h2,{id:"blend-mode",children:"Blend Mode"}),"\n",(0,d.jsx)(n.p,{children:"Choose between methods used to calculate the blend weights for the animations based on the current 2D blend value."}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)("b",{children:" General "}),": A context-independent 2D blending technique.  Good for many situations. ",(0,d.jsx)("br",{})]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)("b",{children:" Directional "}),": If the blend values are directions, using this method can produce more accurate results. ",(0,d.jsx)("br",{})]}),"\n"]}),"\n",(0,d.jsx)(n.h2,{id:"loop",children:"Loop"}),"\n",(0,d.jsx)(n.p,{children:"Toggle whether or not the animations should loop or stop at the end."}),"\n",(0,d.jsx)(n.h2,{id:"lock-blend-on-reset",children:"Lock Blend on Reset"}),"\n",(0,d.jsx)(n.p,{children:"When false, the blend is refreshed every frame."}),"\n",(0,d.jsx)(n.p,{children:"When true, the blend is only refresh when the node is reset.  The cycle advances normally, however.  This is so that you can keep the blend value the same for the duration of the playback of an animation, even if the input value changes."}),"\n",(0,d.jsx)(n.h2,{id:"playback-speed",children:"Playback Speed"}),"\n",(0,d.jsx)(n.p,{children:"Adjusts the speed at which the animations play."}),"\n",(0,d.jsx)(n.h2,{id:"animevents-and-tags-exclusive-to-most-weighted",children:"AnimEvents and Tags Exclusive To Most Weighted"}),"\n",(0,d.jsx)(n.p,{children:"When selected, AnimEvents and Tags will only be emitted from the one anim clip who is weighted the most."}),"\n",(0,d.jsx)(n.h2,{id:"damping",children:"Damping"}),"\n",(0,d.jsx)(n.p,{children:"Controls how the output of this node is blended over time."}),"\n",(0,d.jsx)(n.h3,{id:"speed-function",children:"Speed Function"}),"\n",(0,d.jsx)(n.p,{children:"Controls how damped speed is adjusted based on how far the current value is from the target value."}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)("b",{children:"No Damping:"})," Damping is not applied. ",(0,d.jsx)("br",{})]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)("b",{children:"Constant:"})," The damping speed does not change with distance from the target value. ",(0,d.jsx)("br",{})]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)("b",{children:"Spring:"})," A critically damped spring is used to accelerate the current value toward the target value.  The farther the current value is from the target, the more the acceleration.  However the spring will not overshoot the target value. ",(0,d.jsx)("br",{})]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)("b",{children:"Asymmetric Spring"}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.h3,{id:"speed-scale",children:"Speed Scale"}),"\n",(0,d.jsxs)(n.p,{children:["Scales the speed of the damping, or in the case of the Spring ",(0,d.jsx)("b",{children:"Speed Function"})," it controls the strength of the spring."]}),"\n",(0,d.jsx)(n.h3,{id:"speed-scale-falling",children:"Speed Scale (Falling)"}),"\n",(0,d.jsxs)(n.p,{children:["When using AsymmetricSpring for ",(0,d.jsx)("b",{children:"Speed Function"})," it controls the strength of the spring, only when damping to a lower value."]}),"\n",(0,d.jsx)(n.h3,{id:"limit-speed",children:"Limit Speed"}),"\n",(0,d.jsx)(n.p,{children:"Toggle whether or not to clamp the damping speed"}),"\n",(0,d.jsx)(n.h3,{id:"min-speed",children:"Min Speed"}),"\n",(0,d.jsxs)(n.p,{children:["If ",(0,d.jsx)("b",{children:"Limit Speed "}),"is set, this is the slowest speed that the dampened value can change at."]}),"\n",(0,d.jsx)(n.h3,{id:"max-speed",children:"Max Speed"}),"\n",(0,d.jsxs)(n.p,{children:["If ",(0,d.jsx)("b",{children:"Limit Speed "}),"is set, this is the fastest speed that the dampened value can change at."]})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var t=i(96540);const d={},s=t.createContext(d);function l(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:l(e.components),t.createElement(s.Provider,{value:n},e.children)}},71894:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/2dblend_nodes-b519ff3dcae0dfc5522eca07240e4b72.png"},76340:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/2dblend_nodeblend-d4a7329821d1766e65ba26c0fcb813f6.png"}}]);