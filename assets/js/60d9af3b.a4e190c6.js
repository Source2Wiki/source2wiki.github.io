"use strict";(self.webpackChunksource_2_wiki=self.webpackChunksource_2_wiki||[]).push([[48354],{15352:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"type":"mdx","permalink":"/Entities/func_instance-dota2","source":"@site/src/pages/Entities/func_instance-dota2.mdx","description":"\x3c!---","frontMatter":{"hide_table_of_contents":true},"unlisted":false}');var s=t(74848),a=t(28453);const l={hide_table_of_contents:!0},r=void 0,c={},o=[];function h(e){const n={br:"br",code:"code",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Point Entity"}),"\n",(0,s.jsx)(n.p,{children:"An entity for placing an instance of a prefab map file.  You may translate and rotate this entity. You can use the replace keys to do parameter changes on the instance contents.  In a $ at the beginning of a variable name.  Then just use the $variable name inside of the instance contents on any value portion of a key/value pair."}),"\n",(0,s.jsxs)(t,{open:!0,children:[(0,s.jsx)("summary",{children:(0,s.jsx)("h2",{children:"Keyvalues"})}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Fix Up Name"})," (",(0,s.jsx)(n.code,{children:"targetname"}),") <",(0,s.jsx)(n.code,{children:"TargetSource"}),">",(0,s.jsx)(n.br,{}),"\n","The name that all entities will be fixed up with based upon the fix up style."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"VMAP Filename"})," (",(0,s.jsx)(n.code,{children:"file"}),") <",(0,s.jsx)(n.code,{children:"InstanceFile"}),">",(0,s.jsx)(n.br,{}),"\n","This indicates a map file relative to the map's file name"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Entity Name Fix Up"})," (",(0,s.jsx)(n.code,{children:"fixup_style"}),") <",(0,s.jsx)(n.code,{children:"Choices"}),">",(0,s.jsx)(n.br,{}),"\n","Fixup style for instanced entity names.  Uses the 'Fix Up Name' field."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Prefix"}),"\n",(0,s.jsx)(n.li,{children:"Postfix"}),"\n",(0,s.jsx)(n.li,{children:"None"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Replace"})," (",(0,s.jsx)(n.code,{children:"replace01"}),") <",(0,s.jsx)(n.code,{children:"InstanceVariable"}),">",(0,s.jsx)(n.br,{}),"\n","This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Replace"})," (",(0,s.jsx)(n.code,{children:"replace02"}),") <",(0,s.jsx)(n.code,{children:"InstanceVariable"}),">",(0,s.jsx)(n.br,{}),"\n","This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Replace"})," (",(0,s.jsx)(n.code,{children:"replace03"}),") <",(0,s.jsx)(n.code,{children:"InstanceVariable"}),">",(0,s.jsx)(n.br,{}),"\n","This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Replace"})," (",(0,s.jsx)(n.code,{children:"replace04"}),") <",(0,s.jsx)(n.code,{children:"InstanceVariable"}),">",(0,s.jsx)(n.br,{}),"\n","This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Replace"})," (",(0,s.jsx)(n.code,{children:"replace05"}),") <",(0,s.jsx)(n.code,{children:"InstanceVariable"}),">",(0,s.jsx)(n.br,{}),"\n","This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Replace"})," (",(0,s.jsx)(n.code,{children:"replace06"}),") <",(0,s.jsx)(n.code,{children:"InstanceVariable"}),">",(0,s.jsx)(n.br,{}),"\n","This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Replace"})," (",(0,s.jsx)(n.code,{children:"replace07"}),") <",(0,s.jsx)(n.code,{children:"InstanceVariable"}),">",(0,s.jsx)(n.br,{}),"\n","This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Replace"})," (",(0,s.jsx)(n.code,{children:"replace08"}),") <",(0,s.jsx)(n.code,{children:"InstanceVariable"}),">",(0,s.jsx)(n.br,{}),"\n","This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Replace"})," (",(0,s.jsx)(n.code,{children:"replace09"}),") <",(0,s.jsx)(n.code,{children:"InstanceVariable"}),">",(0,s.jsx)(n.br,{}),"\n","This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Replace"})," (",(0,s.jsx)(n.code,{children:"replace10"}),") <",(0,s.jsx)(n.code,{children:"InstanceVariable"}),">",(0,s.jsx)(n.br,{}),"\n","This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"]}),"\n"]}),"\n"]})]})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var i=t(96540);const s={},a=i.createContext(s);function l(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);