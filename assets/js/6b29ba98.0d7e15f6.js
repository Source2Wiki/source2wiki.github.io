"use strict";(self.webpackChunksource_2_wiki=self.webpackChunksource_2_wiki||[]).push([[33261,46235,63132,87343],{18014:(e,t,n)=>{n.d(t,{A:()=>T});var s=n(96540),r=n(34164),i=n(23104),a=n(56347),o=n(205),l=n(57485),c=n(31682),h=n(70679);function d(e){return s.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function u(e){const{values:t,children:n}=e;return(0,s.useMemo)(()=>{const e=t??function(e){return d(e).map(({props:{value:e,label:t,attributes:n,default:s}})=>({value:e,label:t,attributes:n,default:s}))}(n);return function(e){const t=(0,c.XI)(e,(e,t)=>e.value===t.value);if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,n])}function m({value:e,tabValues:t}){return t.some(t=>t.value===e)}function p({queryString:e=!1,groupId:t}){const n=(0,a.W6)(),r=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,l.aZ)(r),(0,s.useCallback)(e=>{if(!r)return;const t=new URLSearchParams(n.location.search);t.set(r,e),n.replace({...n.location,search:t.toString()})},[r,n])]}function x(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,i=u(e),[a,l]=(0,s.useState)(()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=t.find(e=>e.default)??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:i})),[c,d]=p({queryString:n,groupId:r}),[x,f]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,r]=(0,h.Dv)(t);return[n,(0,s.useCallback)(e=>{t&&r.set(e)},[t,r])]}({groupId:r}),j=(()=>{const e=c??x;return m({value:e,tabValues:i})?e:null})();(0,o.A)(()=>{j&&l(j)},[j]);return{selectedValue:a,selectValue:(0,s.useCallback)(e=>{if(!m({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),f(e)},[d,f,i]),tabValues:i}}var f=n(92303);const j="tabList__CuJ",b="tabItem_LNqP";var g=n(74848);function y({className:e,block:t,selectedValue:n,selectValue:s,tabValues:a}){const o=[],{blockElementScrollPositionUntilNextRender:l}=(0,i.a_)(),c=e=>{const t=e.currentTarget,r=o.indexOf(t),i=a[r].value;i!==n&&(l(t),s(i))},h=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=o.indexOf(e.currentTarget)+1;t=o[n]??o[0];break}case"ArrowLeft":{const n=o.indexOf(e.currentTarget)-1;t=o[n]??o[o.length-1];break}}t?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},e),children:a.map(({value:e,label:t,attributes:s})=>(0,g.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{o.push(e)},onKeyDown:h,onClick:c,...s,className:(0,r.A)("tabs__item",b,s?.className,{"tabs__item--active":n===e}),children:t??e},e))})}function v({lazy:e,children:t,selectedValue:n}){const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=i.find(e=>e.props.value===n);return e?(0,s.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:i.map((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==n}))})}function _(e){const t=x(e);return(0,g.jsxs)("div",{className:(0,r.A)("tabs-container",j),children:[(0,g.jsx)(y,{...t,...e}),(0,g.jsx)(v,{...t,...e})]})}function w(e){const t=(0,f.A)();return(0,g.jsx)(_,{...e,children:d(e.children)},String(t))}const E="tabItem_Ymn6";function A({children:e,hidden:t,className:n}){return(0,g.jsx)("div",{role:"tabpanel",className:(0,r.A)(E,n),hidden:t,children:e})}const T=({cs2:e,steamvr:t,dota2:n,hla:s})=>(0,g.jsxs)(w,{queryString:"game",className:"game-tabs",children:[e&&(0,g.jsx)(A,{value:"cs2",label:"Counter-Strike 2",attributes:{className:"cs2"},children:e}),t&&(0,g.jsx)(A,{value:"steamvr",label:"SteamVR Home",attributes:{className:"steamvr"},children:t}),n&&(0,g.jsx)(A,{value:"dota2",label:"Dota 2",attributes:{className:"dota2"},children:n}),s&&(0,g.jsx)(A,{value:"hla",label:"Half-Life: Alyx",attributes:{className:"hla"},children:s})]})},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var s=n(96540);const r={},i=s.createContext(r);function a(e){const t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:t},e.children)}},35601:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"type":"mdx","permalink":"/Entities/info_ladder_dismount-steamvr","source":"@site/src/pages/Entities/info_ladder_dismount-steamvr.mdx","description":"\x3c!---","frontMatter":{"hide_table_of_contents":true},"unlisted":false}');var r=n(74848),i=n(28453);const a={hide_table_of_contents:!0},o=void 0,l={},c=[];function h(e){const t={br:"br",code:"code",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{Details:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"Point Entity"}),"\n",(0,r.jsx)(t.p,{children:"An entity to handle endpoints for multiple ladders that are too close to each other."}),"\n",(0,r.jsxs)(n,{open:!0,children:[(0,r.jsx)("summary",{children:(0,r.jsx)("h2",{children:"Keyvalues"})}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Parent"})," (",(0,r.jsx)(t.code,{children:"parentname"}),") <",(0,r.jsx)(t.code,{children:"TargetDestination"}),">",(0,r.jsx)(t.br,{}),"\n","The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Parent Model Bone/Attachment Name"})," (",(0,r.jsx)(t.code,{children:"parentAttachmentName"}),") <",(0,r.jsx)(t.code,{children:"ParentAttachment"}),">",(0,r.jsx)(t.br,{}),"\n","The name of the bone or attachment to attach to on the entity's parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Model Attachment position offset"})," (",(0,r.jsx)(t.code,{children:"local.origin"}),") <",(0,r.jsx)(t.code,{children:"Vector"}),">",(0,r.jsx)(t.br,{}),"\n","Offset in the local space of the parent model's attachment/bone to use in hierarchy. Not used if you are not using parent attachment."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Model Attachment angular offset"})," (",(0,r.jsx)(t.code,{children:"local.angles"}),") <",(0,r.jsx)(t.code,{children:"Angle"}),">",(0,r.jsx)(t.br,{}),"\n","Angular offset in the local space of the parent model's attachment/bone to use in hierarchy. Not used if you are not using parent attachment."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Model Attachment scale"})," (",(0,r.jsx)(t.code,{children:"local.scales"}),") <",(0,r.jsx)(t.code,{children:"Vector"}),">",(0,r.jsx)(t.br,{}),"\n","Scale in the local space of the parent model's attachment/bone to use in hierarchy. Not used if you are not using parent attachment."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Use Model Attachment Offset"})," (",(0,r.jsx)(t.code,{children:"useLocalOffset"}),") <",(0,r.jsx)(t.code,{children:"Boolean"}),">",(0,r.jsx)(t.br,{}),"\n","Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"LadderName"})," (",(0,r.jsx)(t.code,{children:"target"}),") <",(0,r.jsx)(t.code,{children:"TargetDestination"}),">",(0,r.jsx)(t.br,{}),"\n","If multiple ladders are near multiple endpoints, use this to stop them from interfering with each other."]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(n,{open:!0,children:[(0,r.jsx)("summary",{children:(0,r.jsx)("h2",{children:"Inputs"})}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["SetParent <",(0,r.jsx)(t.code,{children:"TargetDestination"}),">",(0,r.jsx)(t.br,{}),"\n","Changes the entity's parent in the movement hierarchy."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["SetParentAttachment <",(0,r.jsx)(t.code,{children:"String"}),">",(0,r.jsx)(t.br,{}),"\n","Change this entity to attach to a specific attachment point on its parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["SetParentAttachmentMaintainOffset <",(0,r.jsx)(t.code,{children:"String"}),">",(0,r.jsx)(t.br,{}),"\n","Change this entity to attach to a specific attachment point on it's parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment. The entity will maintain it's position relative to the parent at the time it is attached."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["ClearParent <",(0,r.jsx)(t.code,{children:"Void"}),">",(0,r.jsx)(t.br,{}),"\n","Removes this entity from the the movement hierarchy, leaving it free to move independently."]}),"\n"]}),"\n"]})]})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},52063:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"type":"mdx","permalink":"/Entities/info_ladder_dismount-hla","source":"@site/src/pages/Entities/info_ladder_dismount-hla.mdx","description":"\x3c!---","frontMatter":{"hide_table_of_contents":true},"unlisted":false}');var r=n(74848),i=n(28453);const a={hide_table_of_contents:!0},o=void 0,l={},c=[];function h(e){const t={br:"br",code:"code",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{Details:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"Point Entity"}),"\n",(0,r.jsx)(t.p,{children:"An entity to handle endpoints for multiple ladders that are too close to each other."}),"\n",(0,r.jsxs)(n,{open:!0,children:[(0,r.jsx)("summary",{children:(0,r.jsx)("h2",{children:"Keyvalues"})}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Parent"})," (",(0,r.jsx)(t.code,{children:"parentname"}),") <",(0,r.jsx)(t.code,{children:"TargetDestination"}),">",(0,r.jsx)(t.br,{}),"\n","The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Parent Model Bone/Attachment Name"})," (",(0,r.jsx)(t.code,{children:"parentAttachmentName"}),") <",(0,r.jsx)(t.code,{children:"ParentAttachment"}),">",(0,r.jsx)(t.br,{}),"\n","The name of the bone or attachment to attach to on the entity's parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Model Attachment position offset"})," (",(0,r.jsx)(t.code,{children:"local.origin"}),") <",(0,r.jsx)(t.code,{children:"Vector"}),">",(0,r.jsx)(t.br,{}),"\n","Offset in the local space of the parent model's attachment/bone to use in hierarchy. Not used if you are not using parent attachment."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Model Attachment angular offset"})," (",(0,r.jsx)(t.code,{children:"local.angles"}),") <",(0,r.jsx)(t.code,{children:"Angle"}),">",(0,r.jsx)(t.br,{}),"\n","Angular offset in the local space of the parent model's attachment/bone to use in hierarchy. Not used if you are not using parent attachment."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Model Attachment scale"})," (",(0,r.jsx)(t.code,{children:"local.scales"}),") <",(0,r.jsx)(t.code,{children:"Vector"}),">",(0,r.jsx)(t.br,{}),"\n","Scale in the local space of the parent model's attachment/bone to use in hierarchy. Not used if you are not using parent attachment."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Use Model Attachment Offset"})," (",(0,r.jsx)(t.code,{children:"useLocalOffset"}),") <",(0,r.jsx)(t.code,{children:"Boolean"}),">",(0,r.jsx)(t.br,{}),"\n","Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"LadderName"})," (",(0,r.jsx)(t.code,{children:"target"}),") <",(0,r.jsx)(t.code,{children:"TargetDestination"}),">",(0,r.jsx)(t.br,{}),"\n","If multiple ladders are near multiple endpoints, use this to stop them from interfering with each other."]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(n,{open:!0,children:[(0,r.jsx)("summary",{children:(0,r.jsx)("h2",{children:"Inputs"})}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["SetParent <",(0,r.jsx)(t.code,{children:"TargetDestination"}),">",(0,r.jsx)(t.br,{}),"\n","Changes the entity's parent in the movement hierarchy."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["SetParentAttachment <",(0,r.jsx)(t.code,{children:"String"}),">",(0,r.jsx)(t.br,{}),"\n","Change this entity to attach to a specific attachment point on its parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["SetParentAttachmentMaintainOffset <",(0,r.jsx)(t.code,{children:"String"}),">",(0,r.jsx)(t.br,{}),"\n","Change this entity to attach to a specific attachment point on it's parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment. The entity will maintain it's position relative to the parent at the time it is attached."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["ClearParent <",(0,r.jsx)(t.code,{children:"Void"}),">",(0,r.jsx)(t.br,{}),"\n","Removes this entity from the the movement hierarchy, leaving it free to move independently."]}),"\n"]}),"\n"]})]})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},67518:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"type":"mdx","permalink":"/Entities/info_ladder_dismount-dota2","source":"@site/src/pages/Entities/info_ladder_dismount-dota2.mdx","description":"\x3c!---","frontMatter":{"hide_table_of_contents":true},"unlisted":false}');var r=n(74848),i=n(28453);const a={hide_table_of_contents:!0},o=void 0,l={},c=[];function h(e){const t={br:"br",code:"code",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{Details:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"Point Entity"}),"\n",(0,r.jsx)(t.p,{children:"An entity to handle endpoints for multiple ladders that are too close to each other."}),"\n",(0,r.jsxs)(n,{open:!0,children:[(0,r.jsx)("summary",{children:(0,r.jsx)("h2",{children:"Keyvalues"})}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Parent"})," (",(0,r.jsx)(t.code,{children:"parentname"}),") <",(0,r.jsx)(t.code,{children:"TargetDestination"}),">",(0,r.jsx)(t.br,{}),"\n","The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Parent Bone/Attachment Name"})," (",(0,r.jsx)(t.code,{children:"parentAttachmentName"}),") <",(0,r.jsx)(t.code,{children:"ParentAttachment"}),">",(0,r.jsx)(t.br,{}),"\n","The name of the bone or attachment to attach to on the entity's parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment. NOTE: If this is specified the Hammer transform will be disregarded, even if 'Use Local Transform' is NOT specified (in that case local transform will be identity)"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Use Local Transform"})," (",(0,r.jsx)(t.code,{children:"useLocalOffset"}),") <",(0,r.jsx)(t.code,{children:"Boolean"}),">",(0,r.jsx)(t.br,{}),"\n","Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Local Origin"})," (",(0,r.jsx)(t.code,{children:"local.origin"}),") <",(0,r.jsx)(t.code,{children:"Vector"}),">",(0,r.jsx)(t.br,{}),"\n","Offset in the local space of the parent model's attachment/bone to use in hierarchy. Not used if you are not using parent attachment."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Local Angles"})," (",(0,r.jsx)(t.code,{children:"local.angles"}),") <",(0,r.jsx)(t.code,{children:"Angle"}),">",(0,r.jsx)(t.br,{}),"\n","Angular offset in the local space of the parent model's attachment/bone to use in hierarchy. Not used if you are not using parent attachment."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Local Scale"})," (",(0,r.jsx)(t.code,{children:"local.scales"}),") <",(0,r.jsx)(t.code,{children:"Vector"}),">",(0,r.jsx)(t.br,{}),"\n","Scale in the local space of the parent model's attachment/bone to use in hierarchy. Not used if you are not using parent attachment."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"LadderName"})," (",(0,r.jsx)(t.code,{children:"target"}),") <",(0,r.jsx)(t.code,{children:"TargetDestination"}),">",(0,r.jsx)(t.br,{}),"\n","If multiple ladders are near multiple endpoints, use this to stop them from interfering with each other."]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(n,{open:!0,children:[(0,r.jsx)("summary",{children:(0,r.jsx)("h2",{children:"Inputs"})}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["SetParent <",(0,r.jsx)(t.code,{children:"TargetDestination"}),">",(0,r.jsx)(t.br,{}),"\n","Changes the entity's parent in the movement hierarchy."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["SetParentAttachment <",(0,r.jsx)(t.code,{children:"String"}),">",(0,r.jsx)(t.br,{}),"\n","Change this entity to attach to a specific attachment point on its parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["SetParentAttachmentMaintainOffset <",(0,r.jsx)(t.code,{children:"String"}),">",(0,r.jsx)(t.br,{}),"\n","Change this entity to attach to a specific attachment point on it's parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment. The entity will maintain it's position relative to the parent at the time it is attached."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["ClearParent <",(0,r.jsx)(t.code,{children:"Void"}),">",(0,r.jsx)(t.br,{}),"\n","Removes this entity from the the movement hierarchy, leaving it free to move independently."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["FollowEntity <",(0,r.jsx)(t.code,{children:"String"}),">",(0,r.jsx)(t.br,{}),"\n","Bone merges this entity to a parent entity. Call again passing nothing to end the bone merge."]}),"\n"]}),"\n"]})]})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},67782:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>x,frontMatter:()=>h,metadata:()=>s,toc:()=>m});const s=JSON.parse('{"id":"Entities/info_ladder_dismount","title":"info_ladder_dismount","description":"\x3c!---","source":"@site/docs/Entities/info_ladder_dismount.mdx","sourceDirName":"Entities","slug":"/Entities/info_ladder_dismount","permalink":"/Entities/info_ladder_dismount","draft":false,"unlisted":false,"editUrl":"/HowToEdit/entity-page-info","tags":[],"version":"current","frontMatter":{"hide_table_of_contents":true,"custom_edit_url":"/HowToEdit/entity-page-info"},"sidebar":"tutorialSidebar","previous":{"title":"info_intermission","permalink":"/Entities/info_intermission"},"next":{"title":"info_landmark","permalink":"/Entities/info_landmark"}}');var r=n(74848),i=n(28453),a=n(18014),o=n(35601),l=n(67518),c=n(52063);const h={hide_table_of_contents:!0,custom_edit_url:"/HowToEdit/entity-page-info"},d="info_ladder_dismount",u={},m=[];function p(e){const t={h1:"h1",header:"header",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"info_ladder_dismount",children:"info_ladder_dismount"})}),"\n","\n",(0,r.jsx)(a.A,{steamvr:(0,r.jsx)(o.default,{}),dota2:(0,r.jsx)(l.default,{}),hla:(0,r.jsx)(c.default,{})})]})}function x(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);