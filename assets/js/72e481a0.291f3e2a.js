"use strict";(self.webpackChunksource_2_wiki=self.webpackChunksource_2_wiki||[]).push([[99945],{26551:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"type":"mdx","permalink":"/Entities/func_traincontrols-cs2","source":"@site/src/pages/Entities/func_traincontrols-cs2.mdx","description":"\x3c!---","frontMatter":{"hide_table_of_contents":true},"unlisted":false}');var i=n(74848),r=n(28453);const o={hide_table_of_contents:!0},a=void 0,c={},h=[];function l(e){const t={br:"br",code:"code",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{Details:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"Mesh Entity"}),"\n",(0,i.jsx)(t.p,{children:"When used by the player, this entity overrides the player's controls to let them drive a train."}),"\n",(0,i.jsxs)(n,{open:!0,children:[(0,i.jsx)("summary",{children:(0,i.jsx)("h2",{children:"Keyvalues"})}),(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Global Entity Name"})," (",(0,i.jsx)(t.code,{children:"globalname"}),") <",(0,i.jsx)(t.code,{children:"String"}),">",(0,i.jsx)(t.br,{}),"\n","Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map's state copied over their state."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Parent"})," (",(0,i.jsx)(t.code,{children:"parentname"}),") <",(0,i.jsx)(t.code,{children:"TargetDestination"}),">",(0,i.jsx)(t.br,{}),"\n","The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Parent Model Bone/Attachment Name"})," (",(0,i.jsx)(t.code,{children:"parentAttachmentName"}),") <",(0,i.jsx)(t.code,{children:"ParentAttachment"}),">",(0,i.jsx)(t.br,{}),"\n","The name of the bone or attachment to attach to on the entity's parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Model Attachment position offset"})," (",(0,i.jsx)(t.code,{children:"local.origin"}),") <",(0,i.jsx)(t.code,{children:"Vector"}),">",(0,i.jsx)(t.br,{}),"\n","Offset in the local space of the parent model's attachment/bone to use in hierarchy. Not used if you are not using parent attachment."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Model Attachment angular offset"})," (",(0,i.jsx)(t.code,{children:"local.angles"}),") <",(0,i.jsx)(t.code,{children:"Angle"}),">",(0,i.jsx)(t.br,{}),"\n","Angular offset in the local space of the parent model's attachment/bone to use in hierarchy. Not used if you are not using parent attachment."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Model Attachment scale"})," (",(0,i.jsx)(t.code,{children:"local.scales"}),") <",(0,i.jsx)(t.code,{children:"Vector"}),">",(0,i.jsx)(t.br,{}),"\n","Scale in the local space of the parent model's attachment/bone to use in hierarchy. Not used if you are not using parent attachment."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Use Model Attachment Offset"})," (",(0,i.jsx)(t.code,{children:"useLocalOffset"}),") <",(0,i.jsx)(t.code,{children:"Boolean"}),">",(0,i.jsx)(t.br,{}),"\n","Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Train Name"})," (",(0,i.jsx)(t.code,{children:"target"}),") <",(0,i.jsx)(t.code,{children:"TargetDestination"}),">",(0,i.jsx)(t.br,{}),"\n","The target train to control when the player uses these controls."]}),"\n"]}),"\n"]})]}),"\n",(0,i.jsxs)(n,{open:!0,children:[(0,i.jsx)("summary",{children:(0,i.jsx)("h2",{children:"Inputs"})}),(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["SetParent <",(0,i.jsx)(t.code,{children:"TargetDestination"}),">",(0,i.jsx)(t.br,{}),"\n","Changes the entity's parent in the movement hierarchy."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["SetParentAttachment <",(0,i.jsx)(t.code,{children:"String"}),">",(0,i.jsx)(t.br,{}),"\n","Change this entity to attach to a specific attachment point on its parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["SetParentAttachmentMaintainOffset <",(0,i.jsx)(t.code,{children:"String"}),">",(0,i.jsx)(t.br,{}),"\n","Change this entity to attach to a specific attachment point on it's parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment. The entity will maintain it's position relative to the parent at the time it is attached."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["ClearParent <",(0,i.jsx)(t.code,{children:"Void"}),">",(0,i.jsx)(t.br,{}),"\n","Removes this entity from the the movement hierarchy, leaving it free to move independently."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["FollowEntity <",(0,i.jsx)(t.code,{children:"String"}),">",(0,i.jsx)(t.br,{}),"\n","Bone merges this entity to a parent entity. Call again passing nothing to end the bone merge."]}),"\n"]}),"\n"]})]})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(96540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);