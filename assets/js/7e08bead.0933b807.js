"use strict";(self.webpackChunksource_2_wiki=self.webpackChunksource_2_wiki||[]).push([[77819],{28453:(e,t,a)=>{a.d(t,{R:()=>l,x:()=>s});var r=a(96540);const i={},n=r.createContext(i);function l(e){const t=r.useContext(n);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(n.Provider,{value:t},e.children)}},95466:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"EngineTools/AnimgraphEditor/AnimgraphEditorNodes/parameters","title":"Animgraph Editor Parameters","description":"List of Animgraph Editor parameters.","source":"@site/docs/EngineTools/AnimgraphEditor/AnimgraphEditorNodes/parameters.mdx","sourceDirName":"EngineTools/AnimgraphEditor/AnimgraphEditorNodes","slug":"/EngineTools/AnimgraphEditor/AnimgraphEditorNodes/parameters","permalink":"/EngineTools/AnimgraphEditor/AnimgraphEditorNodes/parameters","draft":false,"unlisted":false,"editUrl":"https://github.com/Source2Wiki/Source2Wiki/blob/master/docs/EngineTools/AnimgraphEditor/AnimgraphEditorNodes/parameters.mdx?plain=1","tags":[],"version":"current","frontMatter":{"description":"List of Animgraph Editor parameters.","title":"Animgraph Editor Parameters"},"sidebar":"tutorialSidebar","previous":{"title":"Groups & Subgraphs","permalink":"/EngineTools/AnimgraphEditor/AnimgraphEditorNodes/group"},"next":{"title":"State Machine Node","permalink":"/EngineTools/AnimgraphEditor/AnimgraphEditorNodes/statemachine"}}');var i=a(74848),n=a(28453);const l={description:"List of Animgraph Editor parameters.",title:"Animgraph Editor Parameters"},s=void 0,o={},h=[{value:"Core Parameter Data",id:"core-parameter-data",level:2},{value:"Default Value",id:"default-value",level:3},{value:"Preview Button",id:"preview-button",level:3},{value:"Force Latest Value",id:"force-latest-value",level:3},{value:"Auto Reset",id:"auto-reset",level:3},{value:"Network",id:"network",level:3},{value:"Internal",id:"internal",level:3},{value:"Permissions",id:"permissions",level:3},{value:"Game Writable",id:"game-writable",level:4},{value:"Graph Writable",id:"graph-writable",level:4},{value:"Bool Parameter",id:"bool-parameter",level:2},{value:"Enum Parameter",id:"enum-parameter",level:2},{value:"Values",id:"values",level:3},{value:"Float Parameter",id:"float-parameter",level:2},{value:"Min Value",id:"min-value",level:3},{value:"Max Value",id:"max-value",level:3},{value:"Interpolate",id:"interpolate",level:3},{value:"Int Parameter",id:"int-parameter",level:2},{value:"Min Value",id:"min-value-1",level:3},{value:"Max Value",id:"max-value-1",level:3},{value:"Quaternion Parameter",id:"quaternion-parameter",level:2},{value:"Vector Parameter",id:"vector-parameter",level:2},{value:"Interpolate",id:"interpolate-1",level:3},{value:"Symbol Parameter",id:"symbol-parameter",level:2},{value:"Virtual Parameter",id:"virtual-parameter",level:2},{value:"Expression String",id:"expression-string",level:3},{value:"Parameter Type",id:"parameter-type",level:3}];function d(e){const t={h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"core-parameter-data",children:"Core Parameter Data"}),"\n",(0,i.jsx)(t.h3,{id:"default-value",children:"Default Value"}),"\n",(0,i.jsx)(t.p,{children:"The value the parameter will start with when it is loaded in game."}),"\n",(0,i.jsx)(t.h3,{id:"preview-button",children:"Preview Button"}),"\n",(0,i.jsx)(t.p,{children:"If a gamepad or controller is connected, this lets you bind this parameter to a button when using the in-editor preview."}),"\n",(0,i.jsxs)(t.p,{children:["When the button is pressed the parameter is set to ",(0,i.jsx)("b",{children:"Max Value"}),".  When its released its set to ",(0,i.jsx)("b",{children:"Default Value"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"force-latest-value",children:"Force Latest Value"}),"\n",(0,i.jsx)(t.p,{children:"Parameter will try force it's latest value."}),"\n",(0,i.jsx)(t.h3,{id:"auto-reset",children:"Auto Reset"}),"\n",(0,i.jsxs)(t.p,{children:["When checked, the parameter will get set back to its ",(0,i.jsx)("b",{children:"Default Value"})," at the end of each tick."]}),"\n",(0,i.jsx)(t.h3,{id:"network",children:"Network"}),"\n",(0,i.jsx)(t.p,{children:"Controls whether or not the value of this parameter should get replicated across the network."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)("b",{children:"Auto:"})," The parameter will be networked if a node or component in the graph has requested it to be networked."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)("b",{children:"Always Network:"})," Network the parameter, even if its not used by the graph"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)("b",{children:"Never Network:"})," Do NOT network this parameter, even if a node or component in the graph requests it."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"internal",children:"Internal"}),"\n",(0,i.jsx)(t.p,{children:"To reduce bugs from parameters getting overwriten by multiple sources, parameters can be marked as Internal or External."}),"\n",(0,i.jsx)(t.p,{children:"External parameters can be changed by game code, but cannot be changed by the graph."}),"\n",(0,i.jsx)(t.p,{children:"Internal parameters can be changed by the graph, but not by game code."}),"\n",(0,i.jsx)(t.h3,{id:"permissions",children:"Permissions"}),"\n",(0,i.jsx)(t.h4,{id:"game-writable",children:"Game Writable"}),"\n",(0,i.jsx)(t.p,{children:"When enabled, allows code from outside the AnimGraph (ie: game code) to change the value of this parameter."}),"\n",(0,i.jsx)(t.h4,{id:"graph-writable",children:"Graph Writable"}),"\n",(0,i.jsx)(t.p,{children:"When true, this parameter's value can be changed by the AnimGraph."}),"\n",(0,i.jsx)(t.h2,{id:"bool-parameter",children:"Bool Parameter"}),"\n",(0,i.jsx)(t.p,{children:"A parameter that can be True or False."}),"\n",(0,i.jsx)(t.h2,{id:"enum-parameter",children:"Enum Parameter"}),"\n",(0,i.jsx)(t.p,{children:'A parameter than can only be one of a small set of values.  These values are numbers, but for convenience they are associated with a name.  For example, a "weapon" enum parameter can be 0 (Knife), 1 (Pistol), or 2 (Rifle).'}),"\n",(0,i.jsx)(t.h3,{id:"values",children:"Values"}),"\n",(0,i.jsx)(t.p,{children:"The list of values that this parameter can be, and the friendly names associated with them."}),"\n",(0,i.jsx)(t.h2,{id:"float-parameter",children:"Float Parameter"}),"\n",(0,i.jsx)(t.p,{children:"A parameter than is a number that can have a decimal value."}),"\n",(0,i.jsx)(t.h3,{id:"min-value",children:"Min Value"}),"\n",(0,i.jsx)(t.p,{children:"The smallest value that this parameter is allowed to have.  If gameplay code tried to set it below this, it will be clamped to this value."}),"\n",(0,i.jsx)(t.h3,{id:"max-value",children:"Max Value"}),"\n",(0,i.jsx)(t.p,{children:"The largest value that this parameter is allowed to have.  If gameplay code tried to set it above this, it will be clamped to this value."}),"\n",(0,i.jsx)(t.h3,{id:"interpolate",children:"Interpolate"}),"\n",(0,i.jsxs)(t.p,{children:["If the ",(0,i.jsx)("b",{children:"Network"})," option is set, this setting indicates that the value should be smoothly interpolated on the client."]}),"\n",(0,i.jsx)(t.p,{children:"This is necessary because the server usually ticks much slower than the framerate of the client, which can result in stuttery looking motion if interpolation is not used."}),"\n",(0,i.jsx)(t.h2,{id:"int-parameter",children:"Int Parameter"}),"\n",(0,i.jsx)(t.p,{children:"A parameter with a non-decimal value."}),"\n",(0,i.jsx)(t.h3,{id:"min-value-1",children:"Min Value"}),"\n",(0,i.jsx)(t.p,{children:"The smallest value that this parameter is allowed to have.  If gameplay code tried to set it below this, it will be clamped to this value."}),"\n",(0,i.jsx)(t.h3,{id:"max-value-1",children:"Max Value"}),"\n",(0,i.jsx)(t.p,{children:"The largest value that this parameter is allowed to have.  If gameplay code tried to set it above this, it will be clamped to this value."}),"\n",(0,i.jsx)(t.h2,{id:"quaternion-parameter",children:"Quaternion Parameter"}),"\n",(0,i.jsx)(t.p,{children:"A parameter with 4 non-decimal values."}),"\n",(0,i.jsx)(t.h2,{id:"vector-parameter",children:"Vector Parameter"}),"\n",(0,i.jsx)(t.p,{children:"A parameter with 3 floating-point values."}),"\n",(0,i.jsx)(t.h3,{id:"interpolate-1",children:"Interpolate"}),"\n",(0,i.jsxs)(t.p,{children:["If the ",(0,i.jsx)("b",{children:"Network"})," option is set, this setting indicates that the value should be smoothly interpolated on the client."]}),"\n",(0,i.jsx)(t.h2,{id:"symbol-parameter",children:"Symbol Parameter"}),"\n",(0,i.jsx)(t.p,{children:"A parameter with symbol values from game code."}),"\n",(0,i.jsx)(t.h2,{id:"virtual-parameter",children:"Virtual Parameter"}),"\n",(0,i.jsx)(t.h3,{id:"expression-string",children:"Expression String"}),"\n",(0,i.jsx)(t.h3,{id:"parameter-type",children:"Parameter Type"})]})}function m(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);