"use strict";(self.webpackChunksource_2_wiki=self.webpackChunksource_2_wiki||[]).push([[86466],{20977:(e,i,n)=>{n.d(i,{A:()=>o});const o=n.p+"assets/images/rc2-802f03c4c46d7097f336c45cd9ba833d.png"},28453:(e,i,n)=>{n.d(i,{R:()=>t,x:()=>c});var o=n(96540);const s={},r=o.createContext(s);function t(e){const i=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),o.createElement(r.Provider,{value:i},e.children)}},69051:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>t,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"EngineTools/ResourceCompiler/index","title":"Resource Compiler","description":"Compiles game assets into runtime-ready resources.","source":"@site/docs/EngineTools/ResourceCompiler/index.mdx","sourceDirName":"EngineTools/ResourceCompiler","slug":"/EngineTools/ResourceCompiler/","permalink":"/EngineTools/ResourceCompiler/","draft":false,"unlisted":false,"editUrl":"https://github.com/Source2Wiki/Source2Wiki/blob/master/docs/EngineTools/ResourceCompiler/index.mdx?plain=1","tags":[],"version":"current","frontMatter":{"description":"Compiles game assets into runtime-ready resources.","title":"Resource Compiler","image":"/img/app_icons/particle_editor.png"},"sidebar":"tutorialSidebar","previous":{"title":"Model Editor (SteamVR)","permalink":"/EngineTools/ModelEditor/getting-started"},"next":{"title":"Intro","permalink":"/Scripting/Counter-Strike 2/cs_script/introduction"}}');var s=n(74848),r=n(28453);const t={description:"Compiles game assets into runtime-ready resources.",title:"Resource Compiler",image:"/img/app_icons/particle_editor.png"},c=void 0,l={},a=[{value:"Usage",id:"usage",level:2},{value:"Wildcards and recursive compilation",id:"wildcards-and-recursive-compilation",level:3},{value:"Command-line options",id:"command-line-options",level:2}];function d(e){const i={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",hr:"hr",img:"img",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"resourcecompiler.exe"})," is a ",(0,s.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Command-line_interface",children:"command-line"})," tool used to process and compile game assets.",(0,s.jsx)(i.br,{}),"\n","The generated output usually retains the same extension as the source file, but with a ",(0,s.jsx)(i.code,{children:"_c"})," suffix to indicate it is the compiled version. These compiled assets are copied into the ",(0,s.jsx)(i.code,{children:"game"})," directory for use at runtime."]}),"\n",(0,s.jsx)(i.admonition,{type:"info",children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"resourcecompiler.exe"})," is located in the ",(0,s.jsx)(i.code,{children:"game/bin/win64"})," folder."]})}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(i.p,{children:["To use ",(0,s.jsx)(i.code,{children:"resourcecompiler.exe"}),", run it from a console with the ",(0,s.jsx)(i.code,{children:"-i"})," option followed by the absolute path to the source file(s)."]}),"\n",(0,s.jsx)(i.admonition,{type:"warning",children:(0,s.jsxs)(i.p,{children:["Source asset files must be located inside the ",(0,s.jsx)(i.code,{children:"content"})," directory.  If they are not, compilation will fail."]})}),"\n",(0,s.jsx)(i.p,{children:"Example:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-bash",children:'"C:\\Program Files (x86)\\Steam\\steamapps\\common\\Counter-Strike Global Offensive\\game\\bin\\win64\\resourcecompiler.exe" -i "C:\\Program Files (x86)\\Steam\\steamapps\\common\\Counter-Strike Global Offensive\\content\\csgo_addons\\test\\materials\\dev\\dev_texture_checkers.vmat"\n'})}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"rc1",src:n(96314).A+"",title:"resourcecompiler example",width:"1920",height:"545"})}),"\n",(0,s.jsx)(i.h3,{id:"wildcards-and-recursive-compilation",children:"Wildcards and recursive compilation"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"resourcecompiler.exe"})," supports wildcards. To compile all ",(0,s.jsx)(i.code,{children:".vmat"})," files inside an addon, use:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-bash",children:'-i "C:\\path\\to\\addon\\materials\\*.vmat" -r\n'})}),"\n",(0,s.jsxs)(i.p,{children:["Always include ",(0,s.jsx)(i.code,{children:"-r"})," when using wildcards to ensure recursive directory scanning."]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"rc2",src:n(20977).A+"",title:"resourcecompiler recursive example",width:"1599",height:"814"})}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"command-line-options",children:"Command-line options"}),"\n",(0,s.jsx)(i.p,{children:"Below is the list of documented options:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:"Usage: resourcecompiler <input resource file(s)>\n\nOptions:\n  -i <files>          Source file(s) or resource project file list.\n                      Wildcards are accepted.\n                      The -i option can be omitted if file names are given directly.\n  -filelist <file>    Specify a text file containing a list of files to compile.\n  -r                  If wildcards are specified, recursively searches subdirectories.\n                      (Consider using contentbuilder for large builds.)\n  -nop4               Disables automatic Perforce checkout/add.\n  -game <path>        Path to a gameinfo.gi file (which mod to build for).\n                      If omitted, it is derived from the input file path.\n  -v                  Verbose mode.\n  -f                  Force compile all encountered resources.\n  -fshallow           Force compile top-level resources; children and associates only if needed.\n  -fshallow2          Force compile top-level resources and their children; associates only if needed.\n  -pc                 Compile resources for Windows PC (default).\n  -novpk              Generate loose files instead of a VPK.\n  -vpkincr            Incrementally update a VPK; existing files remain unless overwritten.\n  -pauseiferror       Pause for keypress before quitting if errors occur.\n  -pause              Pause for keypress before quitting.\n  -changelist <name>  Use named changelist for Perforce operations.\n  -skiptype <exts>    Skip recompilation for specified extensions (comma-separated).\n                      Example: -skiptype vmat,vtex\n\n  -crc <file>         Diagnostic: report CRC of the specified file and exit.\n"})}),"\n",(0,s.jsx)(i.admonition,{type:"info",children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"resourcecompiler.exe"})," also supports asset-specific options not documented here.",(0,s.jsx)(i.br,{}),"\n","For example, compiling ",(0,s.jsx)(i.code,{children:".vmap"})," files may require additional arguments."]})}),"\n",(0,s.jsx)(i.hr,{})]})}function p(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},96314:(e,i,n)=>{n.d(i,{A:()=>o});const o=n.p+"assets/images/rc1-824e2675b0d218d2a992fb58b4c885a8.png"}}]);