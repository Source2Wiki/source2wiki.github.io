"use strict";(self.webpackChunksource_2_wiki=self.webpackChunksource_2_wiki||[]).push([[61304],{28453:(e,i,t)=>{t.d(i,{R:()=>r,x:()=>c});var n=t(96540);const s={},o=n.createContext(s);function r(e){const i=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(o.Provider,{value:i},e.children)}},72352:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"Scripting/Counter-Strike 2/cs_script/introduction","title":"Intro to cs_script","description":"cs_script is a JavaScript based scripting system for Counter-Strike maps.","source":"@site/docs/Scripting/Counter-Strike 2/cs_script/1-introduction.mdx","sourceDirName":"Scripting/Counter-Strike 2/cs_script","slug":"/Scripting/Counter-Strike 2/cs_script/introduction","permalink":"/Scripting/Counter-Strike 2/cs_script/introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/Source2Wiki/Source2Wiki/blob/master/docs/Scripting/Counter-Strike 2/cs_script/1-introduction.mdx?plain=1","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Intro to cs_script","description":"cs_script is a JavaScript based scripting system for Counter-Strike maps."},"sidebar":"tutorialSidebar","previous":{"title":"Resource Compiler","permalink":"/EngineTools/ResourceCompiler/"},"next":{"title":"API documentation","permalink":"/Scripting/Counter-Strike 2/cs_script/functionList"}}');var s=t(74848),o=t(28453);const r={title:"Intro to cs_script",description:"cs_script is a JavaScript based scripting system for Counter-Strike maps."},c="Intro",l={},a=[{value:"Setup",id:"setup",level:2},{value:"Execution",id:"execution",level:2},{value:"Tips",id:"tips",level:2},{value:"Tools Mode",id:"tools-mode",level:2}];function d(e){const i={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components},{Tool:t}=i;return t||function(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Tool",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"intro",children:"Intro"})}),"\n",(0,s.jsxs)(i.p,{children:["cs_script is a ",(0,s.jsx)(t,{name:"js"})," based scripting system for Counter-Strike maps."]}),"\n",(0,s.jsx)(i.p,{children:"It is a virtual machine for scripting which exposes various Source2 engine functionality and Counter-Strike specific info such as listening to events, accessing player data, firing I/O events, getting data about gamemodes, etc."}),"\n",(0,s.jsxs)(i.admonition,{type:"info",children:[(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"script_zoo.vmap"})," is a Valve made map to demonstrate basic functionality of the system, it can be found in\n",(0,s.jsx)(i.code,{children:"Counter-Strike Global Offensive\\content\\csgo\\maps\\editor\\zoo\\script_zoo.vmap"})]}),(0,s.jsxs)(i.p,{children:["A significant amount of documentation on this page is taken from ",(0,s.jsx)(i.code,{children:"Counter-Strike Global Offensive\\content\\csgo\\maps\\editor\\zoo\\point_script.d.ts"})]})]}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"Counter-Strike Global Offensive\\content\\csgo\\maps\\editor\\zoo\\point_script.d.ts"})," documents the JavaScript API for cs_script scripts attached to point_script entities.\nThis file is a ",(0,s.jsx)(i.a,{href:"https://www.typescriptlang.org/docs/handbook/2/type-declarations.html#dts-files",children:"TypeScript Declaration file."})]}),"\n",(0,s.jsxs)(i.p,{children:["This file can be used by various editors to ",(0,s.jsx)(i.a,{href:"https://www.typescriptlang.org/docs/handbook/intro-to-js-ts.html",children:"provide tooling while editing JavaScript"}),". Next to this file is a ",(0,s.jsx)(i.code,{children:"tsconfig.json"})," file configured for editing JavaScript targetting the current version used by CS2."]}),"\n",(0,s.jsxs)(i.p,{children:["Place copies of these two files, ",(0,s.jsx)(i.code,{children:"point_script.d.ts"})," and ",(0,s.jsx)(i.code,{children:"tsconfig.json"}),", next to your scripts and some editors will begin providing tooling without further configuration. These two files will be maintained as the cs_script API changes or the JavaScript version in CS2 is updated."]}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:'"cs_script/point_script"'})," is the module provided to scripts loaded for point_script entities."]}),"\n",(0,s.jsx)(i.admonition,{type:"note",children:(0,s.jsxs)(i.p,{children:["The are projects offering full ",(0,s.jsx)(t,{name:"ts"})," wrappers over the current JavaScript API, such as ",(0,s.jsx)(i.a,{href:"https://github.com/Source2ZE/cs_script_boilerplate",children:"cs_script_boilerplate"})," however\nthis page will not focus on that."]})}),"\n",(0,s.jsx)(i.h2,{id:"setup",children:"Setup"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Create a JavaScript file (.js) that imports this module.","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["See ",(0,s.jsx)(i.code,{children:"hello.js"})," for an example."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Create a point_script entity in your map and set its cs_script field to reference your JavaScript file as a vjs asset.","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["See ",(0,s.jsx)(i.code,{children:"Counter-Strike Global Offensive\\content\\csgo\\maps\\editor\\zoo\\script_zoo.vmap"}),'. There is a point_script entity in there named "hello_cs_script" that runs ',(0,s.jsx)(i.code,{children:"hello.js"}),". There are a handful of other examples as well."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"execution",children:"Execution"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"The compiled version of your script (.vjs_c) will be loaded during map load."}),"\n",(0,s.jsx)(i.li,{children:"When the point_script entity is spawned it will execute all code at the top level scope of your script."}),"\n",(0,s.jsxs)(i.li,{children:["Register callbacks on ",(0,s.jsx)(i.code,{children:"Instance"})," to setup code that executes at various times throughout the lifetime of the map.","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["A function passed to ",(0,s.jsx)(i.code,{children:"Instance.OnActivate"})," will be invoked when the point_script entity is activated."]}),"\n",(0,s.jsxs)(i.li,{children:["A function passed to ",(0,s.jsx)(i.code,{children:"Instance.OnPlayerJump"})," will be invoked when any player in the map jumps."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"tips",children:"Tips"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Entity variables are stable. Two variables referring to the same entity will be reference equals (===)."}),"\n",(0,s.jsx)(i.li,{children:"Extra values attached to an entity variable will still be there if the variable is fetched again."}),"\n",(0,s.jsx)(i.li,{children:"A map can have multiple point_script entities. Each script will run with its own Instance, set of globals, and set of entity variables."}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"tools-mode",children:"Tools Mode"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"In tools mode, saving changes to your script will recompile your file, clear all registered callbacks, and re-run the top level scope of your script."}),"\n",(0,s.jsxs)(i.li,{children:["Global variables and instances of entity variables will persist across reloads.","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Beware. This is an avenue for holding references to code from previous iterations of your script. This is only a concern in tools mode."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["See ",(0,s.jsx)(i.code,{children:"Instance.OnScriptReload"})," for a tool to handle edge cases around reloading."]}),"\n"]})]})}function p(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);