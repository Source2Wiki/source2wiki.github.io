"use strict";(self.webpackChunksource_2_wiki=self.webpackChunksource_2_wiki||[]).push([[61304],{28453:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>c});var n=i(96540);const s={},r=n.createContext(s);function o(e){const t=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(r.Provider,{value:t},e.children)}},45720:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/point_script_example-bb14126a0e60521ad87ed1e548078d5a.png"},72352:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"Scripting/Counter-Strike 2/cs_script/introduction","title":"Intro to cs_script","description":"cs_script is a JavaScript based scripting system for Counter-Strike maps.","source":"@site/docs/Scripting/Counter-Strike 2/cs_script/1-introduction.mdx","sourceDirName":"Scripting/Counter-Strike 2/cs_script","slug":"/Scripting/Counter-Strike 2/cs_script/introduction","permalink":"/Scripting/Counter-Strike 2/cs_script/introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/Source2Wiki/Source2Wiki/blob/master/docs/Scripting/Counter-Strike 2/cs_script/1-introduction.mdx?plain=1","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Intro to cs_script","description":"cs_script is a JavaScript based scripting system for Counter-Strike maps."},"sidebar":"tutorialSidebar","previous":{"title":"Resource Compiler","permalink":"/EngineTools/ResourceCompiler/"},"next":{"title":"List of script functions","permalink":"/Scripting/Counter-Strike 2/cs_script/functionList"}}');var s=i(74848),r=i(28453);const o={title:"Intro to cs_script",description:"cs_script is a JavaScript based scripting system for Counter-Strike maps."},c="Intro",a={},p=[{value:"TypeScript Setup",id:"typescript-setup",level:2},{value:"Bugs",id:"bugs",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components},{Tool:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Tool",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"intro",children:"Intro"})}),"\n",(0,s.jsxs)(t.p,{children:["cs_script is a ",(0,s.jsx)(n,{name:"js"})," based scripting system for Counter-Strike maps."]}),"\n",(0,s.jsx)(t.p,{children:"It is a virtual machine for scripting which exposes various Source2 engine functionality and Counter-Strike specific info such as listening to events, accessing player data, firing I/O events, getting data about gamemodes, etc."}),"\n",(0,s.jsx)(t.admonition,{type:"warning",children:(0,s.jsxs)(t.p,{children:["Despite the system being JavaScript based, this guide will use ",(0,s.jsx)(t.a,{href:"https://www.typescriptlang.org/",children:(0,s.jsx)(n,{name:"ts"})})," due to the much better user experience and because\nValve's documentation is also in TypeScript."]})}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"script_zoo.vmap"})," is a Valve made map to demonstrate basic functionality of the system, it can be found in\n",(0,s.jsx)(t.code,{children:"Steam\\steamapps\\common\\Counter-Strike Global Offensive\\content\\csgo\\maps\\editor\\zoo\\script_zoo.vmap"})]})}),"\n",(0,s.jsx)(t.h2,{id:"typescript-setup",children:"TypeScript Setup"}),"\n",(0,s.jsxs)(t.p,{children:["There are a few projects which provide a TypeScript wrapper over the cs_script JavaScript API, we will be using ",(0,s.jsx)(t.a,{href:"https://github.com/Source2ZE/cs_script_boilerplate",children:"Source2ZE cs_script_boilerplate"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"Follow the README of the project from above to setup TypeScript in your addon."}),"\n",(0,s.jsxs)(t.p,{children:["To use a script in your map, add a ",(0,s.jsx)(t.a,{href:"/Entities/point_script",children:"point_script"})," entity, give it a reasonable name, and in the ",(0,s.jsx)(t.code,{children:"cs_script"})," field select your generated .vjs script from the asset browser."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Script Setup Image",src:i(45720).A+"",width:"1106",height:"348"})}),"\n",(0,s.jsx)(t.h2,{id:"bugs",children:"Bugs"}),"\n",(0,s.jsx)(t.admonition,{type:"danger",children:(0,s.jsx)(t.p,{children:"Due to this system being very new it contains many bugs, this section is here to try to save your sanity."})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Sometimes the script will only run the first time you load into a map, disconnecting and reloading or typing ",(0,s.jsx)(t.code,{children:"restart"})," in the console will stop the script from running unless you restart the game."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"RunScriptInput"})," input crashes if activator or caller are null, using a trigger_once (automatically kills itself) to fire the input with a delay will crash since the caller becomes null, same goes for if a player triggers an input then disconnects before the input runs!"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Teleporting a player every frame breaks movement."}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);