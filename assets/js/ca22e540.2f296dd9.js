"use strict";(self.webpackChunksource_2_wiki=self.webpackChunksource_2_wiki||[]).push([[64125],{28453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>a});var i=n(96540);const r={},o=i.createContext(r);function d(e){const t=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(o.Provider,{value:t},e.children)}},41487:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/mover_node-87a3832d6732f2cd4491fb7ee3626fbf.png"},83505:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/mover_options-f7a55a66565e277be6b4059a83dbe240.png"},97462:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>c,frontMatter:()=>d,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"EngineTools/AnimgraphEditor/AnimgraphEditorNodes/System/mover","title":"Mover","description":"Creates root motion procedurally.","source":"@site/docs/EngineTools/AnimgraphEditor/AnimgraphEditorNodes/System/mover.mdx","sourceDirName":"EngineTools/AnimgraphEditor/AnimgraphEditorNodes/System","slug":"/EngineTools/AnimgraphEditor/AnimgraphEditorNodes/System/mover","permalink":"/EngineTools/AnimgraphEditor/AnimgraphEditorNodes/System/mover","draft":false,"unlisted":false,"editUrl":"https://github.com/Source2Wiki/Source2Wiki/blob/master/docs/EngineTools/AnimgraphEditor/AnimgraphEditorNodes/System/mover.mdx?plain=1","tags":[],"version":"current","frontMatter":{"description":"Creates root motion procedurally.","title":"Mover"},"sidebar":"tutorialSidebar","previous":{"title":"Input Stream","permalink":"/EngineTools/AnimgraphEditor/AnimgraphEditorNodes/System/inputstream"},"next":{"title":"Path Helper","permalink":"/EngineTools/AnimgraphEditor/AnimgraphEditorNodes/System/pathhelper"}}');var r=n(74848),o=n(28453);const d={description:"Creates root motion procedurally.",title:"Mover"},a=void 0,s={},l=[{value:"Generate Movement",id:"generate-movement",level:2},{value:"Generate Movement",id:"generate-movement-1",level:3},{value:"Movement Velocity Parameter",id:"movement-velocity-parameter",level:3},{value:"Orient Movement",id:"orient-movement",level:2},{value:"Orient Movement",id:"orient-movement-1",level:3},{value:"Movement Heading Parameter",id:"movement-heading-parameter",level:3},{value:"Limit Turn Speed",id:"limit-turn-speed",level:3},{value:"Max Turn Speed",id:"max-turn-speed",level:3},{value:"Additive",id:"additive",level:2},{value:"Turn to Face",id:"turn-to-face",level:2},{value:"Turn to Face",id:"turn-to-face-1",level:3},{value:"Face Direction",id:"face-direction",level:3},{value:"Turn Limit Only",id:"turn-limit-only",level:3},{value:"Damping",id:"damping",level:2},{value:"Speed Function",id:"speed-function",level:3},{value:"Speed Scale",id:"speed-scale",level:3},{value:"Speed Scale (Falling)",id:"speed-scale-falling",level:3},{value:"Limit Speed",id:"limit-speed",level:3},{value:"Min Speed",id:"min-speed",level:3},{value:"Max Speed",id:"max-speed",level:3}];function h(e){const t={h2:"h2",h3:"h3",img:"img",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"Creates root motion procedurally."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"mover in editor",src:n(41487).A+"",title:"Mover Node",width:"323",height:"240"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"mover options",src:n(83505).A+"",title:"Mover Options",width:"490",height:"353"})}),"\n",(0,r.jsx)(t.h2,{id:"generate-movement",children:"Generate Movement"}),"\n",(0,r.jsx)(t.h3,{id:"generate-movement-1",children:"Generate Movement"}),"\n",(0,r.jsxs)(t.p,{children:['When this option is enabled, this node will create root motion that matches the direction and speed of the "',(0,r.jsx)("b",{children:"Movement Velocity Parameter"}),'" vector parameter.']}),"\n",(0,r.jsx)(t.h3,{id:"movement-velocity-parameter",children:"Movement Velocity Parameter"}),"\n",(0,r.jsx)(t.p,{children:"The parameter that defined the direction and speed that this node should use to generate root motion.  Must be a vector parameter, and the direction is expected to be model-relative."}),"\n",(0,r.jsx)(t.h2,{id:"orient-movement",children:"Orient Movement"}),"\n",(0,r.jsx)(t.h3,{id:"orient-movement-1",children:"Orient Movement"}),"\n",(0,r.jsxs)(t.p,{children:['When this option is enabled, this node will take the root motion generated by its child and rotate it to move the character in the direction specified by the "',(0,r.jsx)("b",{children:"Movement Heading Parameter"}),'".']}),"\n",(0,r.jsx)(t.h3,{id:"movement-heading-parameter",children:"Movement Heading Parameter"}),"\n",(0,r.jsx)(t.p,{children:'The parameter holding the direction that the child\'s root motion will be rotated towards when "Orient Movement" is enabled.  Must be a float parameter, and the angle is expected to be in degrees.'}),"\n",(0,r.jsx)(t.h3,{id:"limit-turn-speed",children:"Limit Turn Speed"}),"\n",(0,r.jsx)(t.p,{children:'If "Orient Movement" is true, this toggles whether or not rate of turn should be clamped.'}),"\n",(0,r.jsx)(t.h3,{id:"max-turn-speed",children:"Max Turn Speed"}),"\n",(0,r.jsx)(t.p,{children:'If the rate of turn is clamped (ie: "Limit Turn Speed" is true), this is the speed (in degrees per second) that the turn rate will be clamped to.'}),"\n",(0,r.jsx)(t.h2,{id:"additive",children:"Additive"}),"\n",(0,r.jsx)(t.p,{children:"If true, the root motion generated by this node will be added to the root motion produced by its children."}),"\n",(0,r.jsx)(t.p,{children:"If false, then the root motion from the children of this node will be ignored, and the root motion generated by this node will replace it."}),"\n",(0,r.jsx)(t.h2,{id:"turn-to-face",children:"Turn to Face"}),"\n",(0,r.jsx)(t.h3,{id:"turn-to-face-1",children:"Turn to Face"}),"\n",(0,r.jsx)(t.p,{children:"Toggle whether or not the character's body should turn to face a direction."}),"\n",(0,r.jsx)(t.h3,{id:"face-direction",children:"Face Direction"}),"\n",(0,r.jsx)(t.p,{children:'If the "Turn to Face" property is true, this is the direction that the character will turn towards.'}),"\n",(0,r.jsx)(t.h3,{id:"turn-limit-only",children:"Turn Limit Only"}),"\n",(0,r.jsxs)(t.p,{children:["Don't try to turn the entity all the way to the target angle, just keep its facing with the ",(0,r.jsx)("b",{children:"Turn to Face Limit"})," of the target angle."]}),"\n",(0,r.jsx)(t.h2,{id:"damping",children:"Damping"}),"\n",(0,r.jsxs)(t.p,{children:["Controls how fast the character will turn when ",(0,r.jsx)("b",{children:"Turn to Face"})," is true."]}),"\n",(0,r.jsx)(t.h3,{id:"speed-function",children:"Speed Function"}),"\n",(0,r.jsx)(t.p,{children:"Controls how damped speed is adjusted based on how far the current value is from the target value."}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)("b",{children:"No Damping:"})," Damping is not applied. ",(0,r.jsx)("br",{})]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)("b",{children:"Constant:"})," The damping speed does not change with distance from the target value. ",(0,r.jsx)("br",{})]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)("b",{children:"Spring:"})," A critically damped spring is used to accelerate the current value toward the target value.  The farther the current value is from the target, the more the acceleration.  However the spring will not overshoot the target value. ",(0,r.jsx)("br",{})]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)("b",{children:"Asymmetric Spring"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"speed-scale",children:"Speed Scale"}),"\n",(0,r.jsxs)(t.p,{children:["Scales the speed of the damping, or in the case of the Spring ",(0,r.jsx)("b",{children:"Speed Function"})," it controls the strength of the spring."]}),"\n",(0,r.jsx)(t.h3,{id:"speed-scale-falling",children:"Speed Scale (Falling)"}),"\n",(0,r.jsxs)(t.p,{children:["When using AsymmetricSpring for ",(0,r.jsx)("b",{children:"Speed Function"})," it controls the strength of the spring, only when damping to a lower value."]}),"\n",(0,r.jsx)(t.h3,{id:"limit-speed",children:"Limit Speed"}),"\n",(0,r.jsx)(t.p,{children:"Toggle whether or not to clamp the damping speed"}),"\n",(0,r.jsx)(t.h3,{id:"min-speed",children:"Min Speed"}),"\n",(0,r.jsxs)(t.p,{children:["If ",(0,r.jsx)("b",{children:"Limit Speed "}),"is set, this is the slowest speed that the dampened value can change at."]}),"\n",(0,r.jsx)(t.h3,{id:"max-speed",children:"Max Speed"}),"\n",(0,r.jsxs)(t.p,{children:["If ",(0,r.jsx)("b",{children:"Limit Speed "}),"is set, this is the fastest speed that the dampened value can change at."]})]})}function c(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);