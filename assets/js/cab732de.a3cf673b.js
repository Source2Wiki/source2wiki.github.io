"use strict";(self.webpackChunksource_2_wiki=self.webpackChunksource_2_wiki||[]).push([[99936],{28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var i=s(96540);const t={},r=i.createContext(t);function a(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:n},e.children)}},48910:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/half-edge-example-355c08a54eb35ed3f5b51868b82106eb.png"},90385:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"FileFormats/vmap/index","title":"VMAP","description":"The file format for uncompiled Source2 maps.","source":"@site/docs/FileFormats/vmap/index.mdx","sourceDirName":"FileFormats/vmap","slug":"/FileFormats/vmap/","permalink":"/FileFormats/vmap/","draft":false,"unlisted":false,"editUrl":"https://github.com/Source2Wiki/Source2Wiki/blob/master/docs/FileFormats/vmap/index.mdx?plain=1","tags":[],"version":"current","frontMatter":{"description":"The file format for uncompiled Source2 maps.","title":"VMAP"},"sidebar":"tutorialSidebar","previous":{"title":"KV3","permalink":"/FileFormats/kv3"},"next":{"title":"example.vmap","permalink":"/FileFormats/vmap/example.vmap"}}');var t=s(74848),r=s(28453);const a={description:"The file format for uncompiled Source2 maps.",title:"VMAP"},l=void 0,o={},d=[{value:"Vmap example",id:"vmap-example",level:2},{value:"Vmap file structure",id:"vmap-file-structure",level:2},{value:"&quot;$prefix_element$&quot;",id:"prefix_element",level:3},{value:"CMapRootElement",id:"cmaprootelement",level:3},{value:"MapNode",id:"mapnode",level:3},{value:"BaseEntity",id:"baseentity",level:3},{value:"Inherits from MapNode",id:"inherits-from-mapnode",level:4},{value:"DmePlugList",id:"dmepluglist",level:3},{value:"DmeConnectionData",id:"dmeconnectiondata",level:3},{value:"EditGameClassProps",id:"editgameclassprops",level:3},{value:"CMapWorld",id:"cmapworld",level:3},{value:"Inherits from BaseEntity -&gt; MapNode",id:"inherits-from-baseentity---mapnode",level:4},{value:"CStoredCamera",id:"cstoredcamera",level:3},{value:"CStoredCameras",id:"cstoredcameras",level:3},{value:"CVisibilityMgr",id:"cvisibilitymgr",level:3},{value:"Inherits from MapNode",id:"inherits-from-mapnode-1",level:4},{value:"CMapSelectionSet",id:"cmapselectionset",level:3},{value:"CObjectSelectionSetDataElement",id:"cobjectselectionsetdataelement",level:3},{value:"CFaceSelectionSetDataElement",id:"cfaceselectionsetdataelement",level:3},{value:"CMapPrefab",id:"cmapprefab",level:3},{value:"Inherits from MapNode",id:"inherits-from-mapnode-2",level:4},{value:"CMapInstance",id:"cmapinstance",level:3},{value:"Inherits from MapNode",id:"inherits-from-mapnode-3",level:4},{value:"CMapGroup",id:"cmapgroup",level:3},{value:"Inherits from MapNode",id:"inherits-from-mapnode-4",level:4},{value:"CMapVariableSet",id:"cmapvariableset",level:3},{value:"CMapVariableChoiceGroup",id:"cmapvariablechoicegroup",level:3},{value:"CMapMesh",id:"cmapmesh",level:3},{value:"Inherits from MapNode",id:"inherits-from-mapnode-5",level:4},{value:"CDmePolygonMesh",id:"cdmepolygonmesh",level:3},{value:"CDmePolygonMeshDataArray",id:"cdmepolygonmeshdataarray",level:3},{value:"CDmePolygonMeshDataStream",id:"cdmepolygonmeshdatastream",level:3},{value:"Hammer meshes",id:"hammer-meshes",level:2},{value:"Explanation of half-edge meshes",id:"explanation-of-half-edge-meshes",level:3},{value:"Topology limitations",id:"topology-limitations",level:3},{value:"Anatomy of a Hammer mesh",id:"anatomy-of-a-hammer-mesh",level:3}];function c(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{Game:i,Tool:a}=n;return i||m("Game",!0),a||m("Tool",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[".vmap is the file format for uncompiled Source2 maps when they are being edited in ",(0,t.jsx)(n.a,{href:"/EngineTools/HammerEditor/",children:"Hammer"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["It is a ",(0,t.jsx)(n.a,{href:"/FileFormats/dmx",children:"DMX"})," file under binary encoding version 4, ",(0,t.jsx)(n.a,{href:"/EngineTools/HammerEditor/",children:"Hammer"})," can export a plain text version if you go to ",(0,t.jsx)(n.code,{children:"File -> Save Copy As Text"})]}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(a,{name:"s2v"})," can decompile compiled maps (.vmap_c usually contained within a VPK) into a .vmap",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(a,{name:"github",suffix:"Datamodel.NET",link:"https://github.com/kristiker/Datamodel.NET"})," can be used to read and write kv2 files including vmaps, using C#."]}),(0,t.jsxs)(n.p,{children:["An implemented version of the vmap format as described here can be found in the source code of ",(0,t.jsx)(a,{name:"github",suffix:"VRF (s2v)",link:"https://github.com/ValveResourceFormat/ValveResourceFormat/blob/master/ValveResourceFormat/IO/ContentFormats/ValveMap.cs"}),", used for vmap_c decompilation."]})]}),"\n",(0,t.jsx)(n.h2,{id:"vmap-example",children:"Vmap example"}),"\n",(0,t.jsxs)(n.p,{children:["The following is a simple vmap in plain text format from ",(0,t.jsx)(i,{name:"cs2"})," consisting of a hammer mesh and an entity."]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["The Root of a vmap DMX file is ",(0,t.jsx)(n.code,{children:"CMapRootElement"}),(0,t.jsx)(n.br,{}),"\n","In the text encoding of DMX, when an Element is only referenced once, it will be directly inserted as a value of the property that references it, when it's referenced multiple times, it will be extracted and put into the Root element, and everything referencing it will reference its UUID."]})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/FileFormats/vmap/example.vmap",children:"Vmap example"})," (external page due to the large size)"]}),"\n",(0,t.jsx)(n.h2,{id:"vmap-file-structure",children:"Vmap file structure"}),"\n",(0,t.jsxs)(n.p,{children:["A list of vmap DMX nodes can be found below, this list is based on a ",(0,t.jsx)(i,{name:"cs2"})," version 40 vmap."]}),"\n",(0,t.jsxs)(n.p,{children:["Annoyingly the ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Naming_convention_(programming)",children:"naming convention"})," of attributes in vmaps is all over the place, some of the cases used include:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"flatcase"}),"\n",(0,t.jsx)(n.li,{children:"camelCase"}),"\n",(0,t.jsx)(n.li,{children:"PascalCase"}),"\n",(0,t.jsx)(n.li,{children:"snake_case"}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"m_"})," member variable notation"]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"todo",children:(0,t.jsx)(n.p,{children:"Would be nice to have info on which nodes exists in what vmap version, and possibly even game specific vmap nodes."})}),"\n",(0,t.jsx)(n.h3,{id:"prefix_element",children:'"$prefix_element$"'}),"\n",(0,t.jsx)(n.p,{children:"The prefix element section is a DataModel feature allowing formats to store metadata, in vmaps it is used to store the map thumbnail and asset references."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"$prefix_element$"\n{\n\t"id" "elementid" "836b03ef-c2a5-41a2-a13e-308a114a46b7"\n\t"asset_preview_thumbnail" "binary" \n\t"\n\t\tFFD8FFE000104A46494600010101006000600000FFDB004300030202030202030303030403030405\n\t\t0805050404050A070706080C0A0C0C0B0A0B0B0D...(shortened for example)\n\t"\n\t"asset_preview_thumbnail_format" "string" "jpg"\n\t"map_asset_references" "string_array" \n\t[\n\t\t"materials/dev/reflectivity_30.vmat"\n\t]\n}\n\n- asset_preview_thumbnail \\<`binary`\\>\\\n\tA binary blow storing the map thumbnail image.\n\n- asset_preview_thumbnail_format \\<`string`\\>\\\n\tStores the format of the asset_preview_thumbnail image. \n\n- map_asset_references \\<`string_array`\\>\\\n\tAn array of every asset used in this map.\n\n### DMElement\n\nNot a vmap node, but the base DataModel element that every other node inherits from, All nodes have these properties.\n\n```json\n"id" "elementid" "53f14a8f-0ac6-4fba-a836-7d85d70bf641"\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["id <",(0,t.jsx)(n.code,{children:"elementid"}),">",(0,t.jsx)(n.br,{}),"\n","A UUID V4 ID used to refer to this node."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"cmaprootelement",children:"CMapRootElement"}),"\n",(0,t.jsx)(n.p,{children:'This is the main element of the vmap, it contains a few map specific properties and helper objects, and the main "world" object. All Elements which are referenced more than once will be put inside of this Root node.'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"CMapRootElement"\n{\n\t"isprefab" "bool" "0"\n\t"editorbuild" "int" "10533"\n\t"editorversion" "int" "400"\n\t"itemFile" "string" ""\n\n\t"defaultcamera" "CStoredCamera"\n\t"3dcameras" "CStoredCameras"\n\t\n\t"world" "CMapWorld" \n\t"visbility" "CVisibilityMgr"\n\t\n\t"mapVariables" "CMapVariableSet"\n\n\t"rootSelectionSet" "CMapSelectionSet"\n\t\n\t"m_ReferencedMeshSnapshots" "element_array" \n\t[\n\t]\n\n\t"m_bIsCordoning" "bool" "0"\n\t"m_bCordonsVisible" "bool" "0"\n\n\t"nodeInstanceData" "element_array" \n\t[\n\t]\n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["isprefab <",(0,t.jsx)(n.code,{children:"bool"}),">",(0,t.jsx)(n.br,{}),"\n","If the map is a prefab or not."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["editorbuild <",(0,t.jsx)(n.code,{children:"int"}),">",(0,t.jsx)(n.br,{}),"\n","The build number that you can view in ",(0,t.jsx)(n.code,{children:"Help -> About"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["editorversion <",(0,t.jsx)(n.code,{children:"int"}),">",(0,t.jsx)(n.br,{}),"\n","Unknown."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["itemFile <",(0,t.jsx)(n.code,{children:"string"}),">",(0,t.jsx)(n.br,{}),"\n","Unknown."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["defaultcamera <",(0,t.jsx)(n.code,{children:"[CStoredCamera](#cstoredcamera)"}),">",(0,t.jsx)(n.br,{}),"\n","The default editor camera."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["3dcameras <",(0,t.jsx)(n.code,{children:"[CStoredCameras](#cstoredcameras)"}),">",(0,t.jsx)(n.br,{}),"\n","A list of other editor cameras."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["world <",(0,t.jsx)(n.code,{children:"CMapWorld"}),">",(0,t.jsx)(n.br,{}),"\n","An Element containing Elements or referenced to Elements which make up the map like entities, meshes, etc.."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["visbility <",(0,t.jsx)(n.code,{children:"CVisibilityMgr"}),">",(0,t.jsx)(n.br,{}),"\n","Yes you read that right, this Element is hilariously misspelled as ",(0,t.jsx)(n.code,{children:"visbility"})," instead of ",(0,t.jsx)(n.code,{children:"visibility"}),". It keeps track of what is hidden in the map, from quick hide, selection sets, etc.."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["mapVariables <",(0,t.jsx)(n.code,{children:"CMapVariableSet"}),">",(0,t.jsx)(n.br,{}),"\n","Map variables, they can be set in the ",(0,t.jsx)(n.code,{children:"Map -> MapProperties -> Map Variables"})," tab."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["rootSelectionSet <",(0,t.jsx)(n.a,{href:"#cmapselectionset",children:"CMapSelectionSet"}),">",(0,t.jsx)(n.br,{}),"\n","A hidden selection set which contains all other selection sets."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["m_ReferencedMeshSnapshots <",(0,t.jsx)(n.code,{children:"element_array"}),">",(0,t.jsx)(n.br,{}),"\n","Mesh snapshots referenced by this map."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["m_bIsCordoning <",(0,t.jsx)(n.code,{children:"bool"}),">",(0,t.jsx)(n.br,{}),"\n","If the cordon tool is active."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["m_bCordonsVisible <",(0,t.jsx)(n.code,{children:"bool"}),">",(0,t.jsx)(n.br,{}),"\n","If the cordon tool is visible."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["nodeInstanceData <",(0,t.jsx)(n.code,{children:"element_array"}),">",(0,t.jsx)(n.br,{}),"\n","Per node instance data for things like hammer preview lighting"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"mapnode",children:"MapNode"}),"\n",(0,t.jsx)(n.p,{children:"This is not a real vmap node, but most nodes have these properties so it seems like a likely base class."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"MapNode"\n{\n\t"id" "elementid" "53f14a8f-0ac6-4fba-a836-7d85d70bf641"\n\t"nodeID" "int" "1"\n\t"referenceID" "uint64" "0x0"\n\t"children" "element_array"\n\n\t"variableTargetKeys" "string_array" \n\t"variableNames" "string_array" \n\n\t"origin" "vector3" "0 0 0"\n\t"angles" "qangle" "0 0 0"\n\t"scales" "vector3" "1 1 1"\n\n\t"transformLocked" "bool" "0"\n\t"force_hidden" "bool" "0"\n\t"editorOnly" "bool" "0"\n\t"customVisGroup" "string" ""\n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["nodeID <",(0,t.jsx)(n.code,{children:"int"}),">",(0,t.jsx)(n.br,{}),"\n","The ID of this node, can be seen in Hammer in the Outliner."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["referenceID <",(0,t.jsx)(n.code,{children:"uint64"}),">",(0,t.jsx)(n.br,{}),"\n","Unknown, but seems to be some sort of pointer however Hammer will load maps just fine with this always being 0."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["children <",(0,t.jsx)(n.code,{children:"element_array"}),">",(0,t.jsx)(n.br,{}),"\n","All the children of this node, they can be other nodes directly (when the node only exists once) or UUID references to other nodes"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["variableTargetKeys <",(0,t.jsx)(n.code,{children:"string_array"}),">",(0,t.jsx)(n.br,{}),"\n","variableNames <",(0,t.jsx)(n.code,{children:"string_array"}),">",(0,t.jsx)(n.br,{}),"\n","Both seem to be related to the map variable system, possibly when a property of a node is using a map variable."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["origin <",(0,t.jsx)(n.code,{children:"vector3"}),">",(0,t.jsx)(n.br,{}),"\n","The origin of the node in Hammer units."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["angles <",(0,t.jsx)(n.code,{children:"qangle"}),">",(0,t.jsx)(n.br,{}),"\n","The angles of the node in euler angles."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["scales <",(0,t.jsx)(n.code,{children:"vector3"}),">",(0,t.jsx)(n.br,{}),"\n","The scales of the node."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["transformLocked <",(0,t.jsx)(n.code,{children:"bool"}),">",(0,t.jsx)(n.br,{}),"\n","If true, stops the origin, angles or scales of this object from being changed in Hammer, the option to toggle this in the UI shows in the Transform group in ",(0,t.jsx)(n.code,{children:"Object Properties"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["force_hidden <",(0,t.jsx)(n.code,{children:"bool"}),">",(0,t.jsx)(n.br,{}),"\n","If true it will force this object to not be visibile to VIS, shown in the Visibility group in ",(0,t.jsx)(n.code,{children:"Object Properties"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["editorOnly <",(0,t.jsx)(n.code,{children:"bool"}),">",(0,t.jsx)(n.br,{}),"\n","If true it will force this object to not be compiled into the map, useful for developer only messages, shown in the Visibility group in ",(0,t.jsx)(n.code,{children:"Object Properties"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["customVisGroup <",(0,t.jsx)(n.code,{children:"string"}),">",(0,t.jsx)(n.br,{}),"\n","Will add a custom Vis group in the ",(0,t.jsx)(n.code,{children:"Auto Vis Groups"})," panel, this object will show under it, useful for organisation. Shown in the Visibility group in ",(0,t.jsx)(n.code,{children:"Object Properties"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"baseentity",children:"BaseEntity"}),"\n",(0,t.jsxs)(n.h4,{id:"inherits-from-mapnode",children:["Inherits from ",(0,t.jsx)(n.a,{href:"#mapnode",children:"MapNode"})]}),"\n",(0,t.jsxs)(n.p,{children:["This is not a real vmap node, but ",(0,t.jsx)(n.a,{href:"#cmapentity",children:"CMapEntity"}),", ",(0,t.jsx)(n.a,{href:"#cmapworld",children:"CMapWorld"})," and ",(0,t.jsx)(n.a,{href:"#cmapinstance",children:"CMapInstance"})," share these properties so this seems like a likely base class."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"relayPlugData" "DmePlugList" ""\n"connectionsData" "element_array" ""\n"entity_properties" "EditGameClassProps" ""\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["relayPlugData <",(0,t.jsx)(n.a,{href:"#dmepluglist",children:"DmePlugList"}),">",(0,t.jsx)(n.br,{}),"\n","Unknown."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["connectionsData <",(0,t.jsx)(n.code,{children:"element_array"}),">",(0,t.jsx)(n.br,{}),"\n","IO Outputs, contains ",(0,t.jsx)(n.a,{href:"#dmeconnectiondata",children:"DmeConnectionData"})," elements."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["entity_properties <",(0,t.jsx)(n.a,{href:"#editgameclassprops",children:"EditGameClassProps"}),">",(0,t.jsx)(n.br,{}),"\n","A string -> string dictionary of entity keyvalues."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"dmepluglist",children:"DmePlugList"}),"\n",(0,t.jsx)(n.p,{children:"Unknown."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"relayPlugData" "DmePlugList"\n{\n\t"id" "elementid" "53f14a8f-0ac6-4fba-a836-7d85d70bf641"\n\t"names" "string_array" \n\t[\n\t]\n\t"dataTypes" "int_array" \n\t[\n\t]\n\t"plugTypes" "int_array" \n\t[\n\t]\n\t"descriptions" "string_array" \n\t[\n\t]\n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["names <",(0,t.jsx)(n.code,{children:"string_array"}),">",(0,t.jsx)(n.br,{}),"\n","Unknown."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["dataTypes <",(0,t.jsx)(n.code,{children:"int_array"}),">",(0,t.jsx)(n.br,{}),"\n","Unknown."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["plugTypes <",(0,t.jsx)(n.code,{children:"int_array"}),">",(0,t.jsx)(n.br,{}),"\n","Unknown."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["descriptions <",(0,t.jsx)(n.code,{children:"string_array"}),">",(0,t.jsx)(n.br,{}),"\n","Unknown."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"dmeconnectiondata",children:"DmeConnectionData"}),"\n",(0,t.jsx)(n.p,{children:"An entity Output."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"DmeConnectionData"\n{\n\t"id" "elementid" "53f14a8f-0ac6-4fba-a836-7d85d70bf641"\n\t"outputName" "string" "OnUser1"\n\t"targetType" "int" "7"\n\t"targetName" "string" "!self"\n\t"inputName" "string" "FireUser1"\n\t"overrideParam" "string" "overrideExample"\n\t"delay" "float" "0"\n\t"timesToFire" "int" "-1"\n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["outputName <",(0,t.jsx)(n.code,{children:"string"}),">",(0,t.jsx)(n.br,{}),"\n","The name of the output."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["targetType <",(0,t.jsx)(n.code,{children:"int"}),">",(0,t.jsx)(n.br,{}),"\n","Unknown. Seems to always be 7?"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["targetName <",(0,t.jsx)(n.code,{children:"string"}),">",(0,t.jsx)(n.br,{}),"\n","The name of the entity being targeted."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["inputName <",(0,t.jsx)(n.code,{children:"string"}),">",(0,t.jsx)(n.br,{}),"\n","The name of the input on the entity being targeted."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["overrideParam <",(0,t.jsx)(n.code,{children:"string"}),">",(0,t.jsx)(n.br,{}),"\n","The value being passed along with the output."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["delay <",(0,t.jsx)(n.code,{children:"float"}),">",(0,t.jsx)(n.br,{}),"\n","The amount of time before the output is fired."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["timesToFire <",(0,t.jsx)(n.code,{children:"int"}),">",(0,t.jsx)(n.br,{}),"\n","How many times to refire the output."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"editgameclassprops",children:"EditGameClassProps"}),"\n",(0,t.jsx)(n.p,{children:"A string -> string dictionary storing entity keyvalues, seems to just be a standard kv2 element, which can act as a string dictionary."}),"\n",(0,t.jsx)(n.h3,{id:"cmapworld",children:"CMapWorld"}),"\n",(0,t.jsxs)(n.h4,{id:"inherits-from-baseentity---mapnode",children:["Inherits from ",(0,t.jsx)(n.a,{href:"#baseentity",children:"BaseEntity"})," -> ",(0,t.jsx)(n.a,{href:"#mapnode",children:"MapNode"})]}),"\n",(0,t.jsxs)(n.p,{children:["This is the main element that contains everything in the vmap, its also the entity you edit when you change properties in ",(0,t.jsx)(n.code,{children:"Map -> Map Properties"}),", it becomes the ",(0,t.jsx)(n.code,{children:"worldspawn"})," entity at runtime."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"world" "CMapWorld"\n{\n\t"id" "elementid" "53f14a8f-0ac6-4fba-a836-7d85d70bf641"\n\n\t"children" "element_array"\n\n\t"variableTargetKeys" "string_array" \n\t"variableNames" "string_array" \n\t"relayPlugData" "DmePlugList"\n\t"connectionsData" "element_array" \n\t"nextDecalID" "int" "0"\n\t"fixupEntityNames" "bool" "1"\n\t"mapUsageType" "string" "standard"\n\t"origin" "vector3" "0 0 0"\n\t"angles" "qangle" "0 0 0"\n\t"scales" "vector3" "1 1 1"\n\t"transformLocked" "bool" "0"\n\t"force_hidden" "bool" "0"\n\t"editorOnly" "bool" "0"\n\t"customVisGroup" "string" ""\n\t"randomSeed" "int" "1641157616"\n\t\n\t"entity_properties" "EditGameClassProps"\n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["children <",(0,t.jsx)(n.code,{children:"element_array"}),">",(0,t.jsx)(n.br,{}),"\n","The children of CMapWorld are everything contained in the map, in the text encoding of DMX if a node is referenced only once, its inserted directly, if it is referenced more than once, it will be put into the Root element, in this case ",(0,t.jsx)(n.a,{href:"#cmaprootelement",children:"CMapRootElement"})," and it will be referenced by its UUID."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["nextDecalID <",(0,t.jsx)(n.code,{children:"int"}),">",(0,t.jsx)(n.br,{}),"\n","Unknown."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["fixupEntityNames <",(0,t.jsx)(n.code,{children:"bool"}),">",(0,t.jsx)(n.br,{}),"\n","Unknown. Prefabs have this option in order to prevent name collisions, why would the main VMAP need this tho?"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["mapUsageType <",(0,t.jsx)(n.code,{children:"string"}),">",(0,t.jsx)(n.br,{}),"\n","The type of the map."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["standard",(0,t.jsx)(n.br,{}),"\n","For normal maps."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["background",(0,t.jsx)(n.br,{}),"\n","For CS2 background UI maps."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["skybox",(0,t.jsx)(n.br,{}),"\n","For 3D skyboxes."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["minigame",(0,t.jsx)(n.br,{}),"\n","Used in Dota 2 for Crownfall Act 4."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["sharedenvironment",(0,t.jsx)(n.br,{}),"\n","Unknown."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["randomSeed <",(0,t.jsx)(n.code,{children:"int"}),">",(0,t.jsx)(n.br,{}),"\n","Unknown. Perhaps used for ",(0,t.jsx)(n.em,{children:"something"})," that needs a random seed, but what, and why can you set it?"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"cstoredcamera",children:"CStoredCamera"}),"\n",(0,t.jsx)(n.p,{children:"An editor camera."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"defaultcamera" "CStoredCamera"\n{\n\t"id" "elementid" "53f14a8f-0ac6-4fba-a836-7d85d70bf641"\n\t"position" "vector3" "-291.7109680176 -261.1103210449 217.3533782959"\n\t"lookat" "vector3" "-291.8317871094 -260.2921142578 216.7912902832"\n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["position <",(0,t.jsx)(n.code,{children:"vector3"}),">",(0,t.jsx)(n.br,{}),"\n","The position of the camera."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["lookat <",(0,t.jsx)(n.code,{children:"vector3"}),">",(0,t.jsx)(n.br,{}),"\n","This is the origin offset by one unit along the look vector."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"cstoredcameras",children:"CStoredCameras"}),"\n",(0,t.jsx)(n.p,{children:"The editor cameras stored in the vmap."}),"\n",(0,t.jsx)(n.admonition,{type:"todo",children:(0,t.jsx)(n.p,{children:"When are multiple editor cameras stored in the vmap?"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"3dcameras" "CStoredCameras"\n{\n\t"id" "elementid" "21382dc1-34f4-4dc1-b017-0f431fddfdd5"\n\t"activecamera" "int" "-1"\n\t"cameras" "element_array" \n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["activecamera <",(0,t.jsx)(n.code,{children:"int"}),">",(0,t.jsx)(n.br,{}),"\n","The current active camera index."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["cameras <",(0,t.jsx)(n.code,{children:"element_array"}),">",(0,t.jsx)(n.br,{}),"\n","An array of ",(0,t.jsx)(n.a,{href:"#cstoredcamera",children:"CStoredCamera"})," elements."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"cvisibilitymgr",children:"CVisibilityMgr"}),"\n",(0,t.jsxs)(n.h4,{id:"inherits-from-mapnode-1",children:["Inherits from ",(0,t.jsx)(n.a,{href:"#mapnode",children:"MapNode"})]}),"\n",(0,t.jsx)(n.p,{children:"Manages hiding nodes."}),"\n",(0,t.jsx)(n.admonition,{type:"todo",children:(0,t.jsx)(n.p,{children:"Why is this a node? can you select this in Hammer somehow? It seems to always be at 0 0 0."})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"visbility" "CVisibilityMgr"\n{\n\t"id" "elementid" "ce0026f6-da81-41e3-9267-3d2bdadba660"\n\t"nodeID" "int" "0"\n\t"referenceID" "uint64" "0x0"\n\t"children" "element_array" \n\t"variableTargetKeys" "string_array" \n\t"variableNames" "string_array" \n\t"nodes" "element_array" \n\t"hiddenFlags" "int_array" `\n\t"origin" "vector3" "0 0 0"\n\t"angles" "qangle" "0 0 0"\n\t"scales" "vector3" "1 1 1"\n\t"transformLocked" "bool" "0"\n\t"force_hidden" "bool" "0"\n\t"editorOnly" "bool" "0"\n\t"customVisGroup" "string" ""\n\t"randomSeed" "int" "634985197"\n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["nodes <",(0,t.jsx)(n.code,{children:"element_array"}),">",(0,t.jsx)(n.br,{}),"\n","Every node in the map which can be hidden."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["hiddenFlags <",(0,t.jsx)(n.code,{children:"int_array"}),">",(0,t.jsx)(n.br,{}),"\n","Per node hide flags, this array indexes into the ",(0,t.jsx)(n.code,{children:"nodes"})," element array."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["0",(0,t.jsx)(n.br,{}),"\n","Visible."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["1",(0,t.jsx)(n.br,{}),"\n","Selection set."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["2",(0,t.jsx)(n.br,{}),"\n","Unknown."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["3",(0,t.jsx)(n.br,{}),"\n","Unknown."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["4",(0,t.jsx)(n.br,{}),"\n","Quick hide."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"cmapselectionset",children:"CMapSelectionSet"}),"\n",(0,t.jsx)(n.p,{children:"A selection set."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"CMapSelectionSet"\n{\n\t"id" "elementid" "2fa0034b-467f-4a4f-aa22-a432a2fee57c"\n\t"children" "element_array" \n\t"selectionSetName" "string" "selectionset"\n\t"selectionSetData" "CObjectSelectionSetDataElement"\n},\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["children <",(0,t.jsx)(n.code,{children:"element_array"}),">",(0,t.jsx)(n.br,{}),"\n","Selection sets can contain other selection sets, this is not selected objects, those are stored in selectionSetData."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["selectionSetName <",(0,t.jsx)(n.code,{children:"string"}),">",(0,t.jsx)(n.br,{}),"\n","The name of the selection set."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["selectionSetData <",(0,t.jsx)(n.a,{href:"#dmelement",children:"DMElement"}),">",(0,t.jsx)(n.br,{}),"\n","The data of the selection set, it seems to be an opaque element but it only takes ",(0,t.jsx)(n.code,{children:"CObjectSelectionSetDataElement"})," and ",(0,t.jsx)(n.code,{children:"CFaceSelectionSetDataElement"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"cobjectselectionsetdataelement",children:"CObjectSelectionSetDataElement"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"selectionSetData" "CObjectSelectionSetDataElement"\n{\n\t"id" "elementid" "ab42b08e-ab9b-4d9f-b2c7-299b165b1f2e"\n\t"name" "string" "objectSelectionSetData"\n\t"selectedObjects" "element_array" \n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["name <",(0,t.jsx)(n.code,{children:"string"}),">",(0,t.jsx)(n.br,{}),"\n","The name of the selection set data element. doesn't seem like the user can set this, its always ",(0,t.jsx)(n.code,{children:"objectSelectionSetData"}),", may be used to tell which data object selectionSetData contains in their DMX implementation?"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["selectedObjects <",(0,t.jsx)(n.code,{children:"element_array"}),">",(0,t.jsx)(n.br,{}),"\n","A list of the objects contained in this selection set."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"cfaceselectionsetdataelement",children:"CFaceSelectionSetDataElement"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"selectionSetData" "CFaceSelectionSetDataElement"\n{\n\t"id" "elementid" "fe928e85-ae50-4034-8016-7ff0cdf77a64"\n\t"name" "string" "faceSelectionSetData"\n\t"meshes" "element_array" \n\t"faces" "int_array" \n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["name <",(0,t.jsx)(n.code,{children:"string"}),">",(0,t.jsx)(n.br,{}),"\n","The name of the selection set data element. doesn't seem like the user can set this, its always ",(0,t.jsx)(n.code,{children:"faceSelectionSetData"}),", may be used to tell which data object selectionSetData contains in their DMX implementation?"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["meshes <",(0,t.jsx)(n.code,{children:"element_array"}),">",(0,t.jsx)(n.br,{}),"\n","A list of the meshes contained in this selection set."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["faces <",(0,t.jsx)(n.code,{children:"int_array"}),">",(0,t.jsx)(n.br,{}),"\n","A list of mesh faces contained in this selection set."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"cmapprefab",children:"CMapPrefab"}),"\n",(0,t.jsxs)(n.h4,{id:"inherits-from-mapnode-2",children:["Inherits from ",(0,t.jsx)(n.a,{href:"#mapnode",children:"MapNode"})]}),"\n",(0,t.jsx)(n.p,{children:"A prefab."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"CMapPrefab"\n{\n\t"id" "elementid" "5e3176dd-3b19-4f28-8318-7ebaa88b9a90"\n\t"nodeID" "int" "6"\n\t"referenceID" "uint64" "0xdadc15530f843d58"\n\t"children" "element_array" \n\t"variableTargetKeys" "string_array" \n\t"variableNames" "string_array" \n\t"relayPlugData" "DmePlugList"\n\t"connectionsData" "element_array" \n\t"target" "element" ""\n\t"variableOverrideNames" "string_array" \n\t"variableOverrideValues" "string_array" \n\t"origin" "vector3" "0 0 0"\n\t"angles" "qangle" "0 0 0"\n\t"scales" "vector3" "1 1 1"\n\t"transformLocked" "bool" "0"\n\t"force_hidden" "bool" "0"\n\t"editorOnly" "bool" "0"\n\t"customVisGroup" "string" ""\n\t"randomSeed" "int" "1910343828"\n\t"tintColor" "color" "255 255 255 255"\n\t"visexclude" "bool" "0"\n\t"targetMapPath" "string" "maps/prefabs/s2wikiprefab.vmap"\n\t"targetName" "string" ""\n\t"fixupEntityNames" "bool" "1"\n\t"useTargetNameAsPrefix" "bool" "0"\n\t"loadIfNested" "bool" "1"\n\t"prefabRuntimeEntity" "bool" "0"\n\t"loadAtRuntime" "bool" "0"\n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["target <",(0,t.jsx)(n.code,{children:"element"}),">",(0,t.jsx)(n.br,{}),"\n","Unknown."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["variableOverrideNames <",(0,t.jsx)(n.code,{children:"string_array"}),">",(0,t.jsx)(n.br,{}),"\n","Unknown."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["variableOverrideValues <",(0,t.jsx)(n.code,{children:"string_array"}),">",(0,t.jsx)(n.br,{}),"\n","Unknown."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["targetMapPath <",(0,t.jsx)(n.code,{children:"string"}),">",(0,t.jsx)(n.br,{}),"\n","The map to load."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["fixupEntityNames <",(0,t.jsx)(n.code,{children:"bool"}),">",(0,t.jsx)(n.br,{}),"\n","If enabled, any entity target names within the prefab will have a prefix applied to ensure they are unique. This prevents any issues with entities in two different prefabs having name collisions."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["useTargetNameAsPrefix <",(0,t.jsx)(n.code,{children:"bool"}),">",(0,t.jsx)(n.br,{}),"\n","If this is enabled and name fixup is enabled, the prefix used for name fixup will be the prefab target name instead of the unique id. If the target name is empty then the prefab the unique id will still be used as the prefix. Note that if two prefabs use the same target name for their prefix it will be possible to have entities inside the prefabs end up with name collisions."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["loadIfNested <",(0,t.jsx)(n.code,{children:"bool"}),">",(0,t.jsx)(n.br,{}),"\n","If enabled the prefab will be loaded when it is the child of another prefab, if disabled, this prefab will not be loaded if it is the child of another prefab."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["prefabRuntimeEntity <",(0,t.jsx)(n.code,{children:"bool"}),">",(0,t.jsx)(n.br,{}),"\n","Unknown."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["loadAtRuntime <",(0,t.jsx)(n.code,{children:"bool"}),">",(0,t.jsx)(n.br,{}),"\n","If enabled the prefab will not be baked into the parent map during map compile, but instead will be dynamically loaded in the game. This requires the target map to be compiled separately. Additionally this requires support for dynamic loading of maps by the game, which may not be supported by all games and game systems. Do not use without checking to see if this is fully supported by the game you are working on."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"cmapinstance",children:"CMapInstance"}),"\n",(0,t.jsxs)(n.h4,{id:"inherits-from-mapnode-3",children:["Inherits from ",(0,t.jsx)(n.a,{href:"#mapnode",children:"MapNode"})]}),"\n",(0,t.jsx)(n.p,{children:"An instance."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"CMapInstance"\n{\n\t"id" "elementid" "b4c5ff57-756d-4fad-b2c4-7c3599acd5d1"\n\t"nodeID" "int" "9"\n\t"referenceID" "uint64" "0xa644a071fe2a1342"\n\t"variableTargetKeys" "string_array" \n\t"variableNames" "string_array" \n\t"relayPlugData" "DmePlugList"\n\t"connectionsData" "element_array" \n\t"target" "element" "d3c5aac9-c6b0-4ca0-a74f-1bad53097d65"\n\t"origin" "vector3" "-328 -80 24"\n\t"angles" "qangle" "0 0 0"\n\t"scales" "vector3" "1 1 1"\n\t"transformLocked" "bool" "0"\n\t"force_hidden" "bool" "0"\n\t"editorOnly" "bool" "0"\n\t"customVisGroup" "string" ""\n\t"randomSeed" "int" "1789577885"\n\t"tintColor" "color" "255 255 255 255"\n\t"visexclude" "bool" "0"\n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["target <",(0,t.jsx)(n.code,{children:"element"}),">\\\nA ",(0,t.jsx)(n.a,{href:"#cmapgroup",children:"CMapGroup"})," element containing all the objects inside of this instance."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["tintColor <",(0,t.jsx)(n.code,{children:"color"}),">\\\nIf this color is set, all objects inside of the instance will be tinted."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["visexclude <",(0,t.jsx)(n.code,{children:"bool"}),">\\\nIf true, everything inside of the instance will be excluded from vis."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"cmapgroup",children:"CMapGroup"}),"\n",(0,t.jsxs)(n.h4,{id:"inherits-from-mapnode-4",children:["Inherits from ",(0,t.jsx)(n.a,{href:"#mapnode",children:"MapNode"})]}),"\n",(0,t.jsx)(n.p,{children:"A group which can contain nodes, it seems to inherit from the MapNode baseclass without any changes."}),"\n",(0,t.jsx)(n.h3,{id:"cmapvariableset",children:"CMapVariableSet"}),"\n",(0,t.jsx)(n.p,{children:"Stores map variables."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"mapVariables" "CMapVariableSet"\n{\n\t"id" "elementid" "80fdfd0c-3ea4-4519-9e66-23fafdc20d60"\n\t"variableNames" "string_array" \n\t"variableValues" "string_array" \n\t"variableTypeNames" "string_array" \n\t"variableTypeParameters" "string_array" \n\t"m_ChoiceGroups" "element_array" \n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["variableNames <",(0,t.jsx)(n.code,{children:"string_array"}),">",(0,t.jsx)(n.br,{}),"\n","The name of the map variable."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["variableValues <",(0,t.jsx)(n.code,{children:"string_array"}),">",(0,t.jsx)(n.br,{}),"\n","The value of the map variable."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["variableTypeNames <",(0,t.jsx)(n.code,{children:"string_array"}),">",(0,t.jsx)(n.br,{}),"\n","The type of the map variable, like ",(0,t.jsx)(n.code,{children:"string"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["variableTypeParameters <",(0,t.jsx)(n.code,{children:"string_array"}),">",(0,t.jsx)(n.br,{}),"\n","The type paremeter of the map variable, not sure what this is."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["m_ChoiceGroups <",(0,t.jsx)(n.code,{children:"element_array"}),">",(0,t.jsx)(n.br,{}),"\n","Not sure what this does either, but takes a ",(0,t.jsx)(n.a,{href:"#cmapvariablechoicegroup",children:"CMapVariableChoiceGroup"})," object."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"cmapvariablechoicegroup",children:"CMapVariableChoiceGroup"}),"\n",(0,t.jsx)(n.p,{children:"A map variable choice group."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"CMapVariableChoiceGroup"\n{\n\t"id" "elementid" "795f358a-afb8-4f98-993b-0fd940de5aae"\n\t"name" "string" "newChoiceGroup"\n\t"m_ChoiceVariables" "string_array" \n\t"m_Choices" "element_array" \n\t"m_ActiveValue" "string" ""\n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["name <",(0,t.jsx)(n.code,{children:"string"}),">",(0,t.jsx)(n.br,{}),"\n","The name of the choice group."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Honestly not even gonna try to pretend like I understand these, if you do, feel free to complete this list."}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["The following mesh related nodes will only be explained in short as they are quite complex, an in-depth explanation can be found in the ",(0,t.jsx)(n.a,{href:"#hammer-meshes",children:"Hammer meshes"})," section of this page."]})}),"\n",(0,t.jsx)(n.h3,{id:"cmapmesh",children:"CMapMesh"}),"\n",(0,t.jsxs)(n.h4,{id:"inherits-from-mapnode-5",children:["Inherits from ",(0,t.jsx)(n.a,{href:"#mapnode",children:"MapNode"})]}),"\n",(0,t.jsx)(n.p,{children:"A Hammer mesh."}),"\n",(0,t.jsx)(n.p,{children:"Inherited properties will be ommited below due to the large size of this node."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"CMapMesh"\n{\n\t"id" "elementid" "581ccd67-3a41-4d2a-b6b0-8cf6fbbe493e"\n\t"meshData" "CDmePolygonMesh"\n\t"disableShadows" "int" "0"\n\t"bakelighting" "bool" "1"\n\t"cubeMapName" "string" ""\n\t"emissiveLightingEnabled" "bool" "1"\n\t"emissiveLightingBoost" "float" "1"\n\t"lightingDummy" "bool" "0"\n\n\t"visexclude" "bool" "0"\n\t"disablemerging" "bool" "0"\n\t"renderwithdynamic" "bool" "0"\n\t"renderToCubemaps" "bool" "1"\n\t"keep_vertices" "bool" "0"\n\t"fademindist" "float" "-1"\n\t"fademaxdist" "float" "0"\n\n\t"disableHeightDisplacement" "bool" "0"\n\t"smoothingAngle" "float" "40"\n\t"tintColor" "color" "255 255 255 255"\n\t"renderAmt" "int" "255"\n\t"physicsType" "string" "default"\n\t"physicsCollisionProperty" "string" ""\n\t"physicsGroup" "string" ""\n\n\t"physicsInteractsAs" "string" ""\n\t"physicsInteractsWith" "string" ""\n\t"physicsInteractsExclude" "string" ""\n\t"physicsSimplificationOverride" "bool" "0"\n\t"physicsSimplificationError" "float" "0"\n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["meshData <",(0,t.jsx)(n.code,{children:"CDmePolygonMesh"}),">",(0,t.jsx)(n.br,{}),"\n","A ",(0,t.jsx)(n.a,{href:"#cdmepolygonmesh",children:"CDmePolygonMesh"})," element storing all the polygon mesh information."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["disableShadows <",(0,t.jsx)(n.code,{children:"bool"}),">",(0,t.jsx)(n.br,{}),"\n","When true causes this mesh to not cast any shadows."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["bakelighting <",(0,t.jsx)(n.code,{children:"bool"}),">",(0,t.jsx)(n.br,{}),"\n","When true will stop lighting from being baked on this mesh."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["cubeMapName <",(0,t.jsx)(n.code,{children:"string"}),">",(0,t.jsx)(n.br,{}),"\n","Used to manually assign a named env_cubemap, env_cubemap_box or env_combined_light_probe_volume to a mesh."]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"This forces the mesh into a slower rendering path and does not support the explicit assignment of lightprobes. Use with caution."})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["emissiveLightingEnabled <",(0,t.jsx)(n.code,{children:"bool"}),">",(0,t.jsx)(n.br,{}),"\n","Allow this mesh to emit lighting. Note that this only works on materials with Self Illum parameters, and is only visible in the GPU Path Tracing Preview and in the final lightmap bake."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["emissiveLightingBoost <",(0,t.jsx)(n.code,{children:"float"}),">",(0,t.jsx)(n.br,{}),"\n","Used to boost emissive lighting from a mesh. Note that boosting emissive on smaller meshes can create more lighting artifacts/noise."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["lightingDummy <",(0,t.jsx)(n.code,{children:"bool"}),">",(0,t.jsx)(n.br,{}),"\n","Causes the mesh to contribute to lighting, but not render in the final map."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["visexclude <",(0,t.jsx)(n.code,{children:"bool"}),">",(0,t.jsx)(n.br,{}),"\n","When true forces this mesh to not contribute to VIS."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["disablemerging <",(0,t.jsx)(n.code,{children:"bool"}),">",(0,t.jsx)(n.br,{}),"\n","When true, disables compile time mesh merging, meaning this mesh wont merge with meshes sharing the same material."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["renderwithdynamic <",(0,t.jsx)(n.code,{children:"bool"}),">",(0,t.jsx)(n.br,{}),"\n","When true causes this mesh to render in the dynamic pass, with other dynamic entities like players."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["keep_vertices <",(0,t.jsx)(n.code,{children:"bool"}),">",(0,t.jsx)(n.br,{}),"\n","Unknown."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["fademindist <",(0,t.jsx)(n.code,{children:"float"}),">",(0,t.jsx)(n.br,{}),"\n","The distance at which this mesh will start to fade."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["fademaxdist <",(0,t.jsx)(n.code,{children:"float"}),">",(0,t.jsx)(n.br,{}),"\n","The distance at which this mesh is entirely invisible."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["disableHeightDisplacement <",(0,t.jsx)(n.code,{children:"bool"}),">",(0,t.jsx)(n.br,{}),"\n","When true it disables displacement."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["smoothingAngle <",(0,t.jsx)(n.code,{children:"float"}),">",(0,t.jsx)(n.br,{}),"\n","The minimum angle for an edge to automatically become smooth."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["tintColor <",(0,t.jsx)(n.code,{children:"Color"}),">",(0,t.jsx)(n.br,{}),"\n","Tints the mesh."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["renderAmt <",(0,t.jsx)(n.code,{children:"float"}),">",(0,t.jsx)(n.br,{}),"\n","The alpha transparency of the mesh."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["physicsType <",(0,t.jsx)(n.code,{children:"string"}),">",(0,t.jsx)(n.br,{}),"\n","The physics type of the mesh."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["none",(0,t.jsx)(n.br,{}),"\n","Not solid."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["default",(0,t.jsx)(n.br,{}),"\n","Seems to be ",(0,t.jsx)(n.code,{children:"mesh"})," by default."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["convex_single",(0,t.jsx)(n.br,{}),"\n","A single convex hull"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["convex_multi",(0,t.jsx)(n.br,{}),"\n","Multiple convex hulls (per piece?)"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["mesh",(0,t.jsx)(n.br,{}),"\n","A triangle mesh."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["physicsCollisionProperty <",(0,t.jsx)(n.code,{children:"string"}),">",(0,t.jsx)(n.br,{}),"\n","If specified, provides the name of an entry in scripts/collision_properties.txt that specifies the collision group and interaction layers to use, rather than those specified in the material."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["physicsGroup <",(0,t.jsx)(n.code,{children:"string"}),">",(0,t.jsx)(n.br,{}),"\n","Directly specifies the name of a collision group to assign to the mesh, replaces any group specified by the material or collision property."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["physicsInteractsAs <",(0,t.jsx)(n.code,{children:"string"}),">",(0,t.jsx)(n.br,{}),"\n","Specifies additional interaction layers to append to the set of Interacts As layers assigned to the mesh."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["physicsInteractsWith <",(0,t.jsx)(n.code,{children:"string"}),">",(0,t.jsx)(n.br,{}),"\n","Specifies additional interaction layers to append to the set of Interacts With layers assigned to the mesh."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["physicsInteractsExclude <",(0,t.jsx)(n.code,{children:"string"}),">",(0,t.jsx)(n.br,{}),"\n","Specifies additional interaction layers to append to the set of Interacts With layers assigned to the mesh."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["physicsSimplificationOverride <",(0,t.jsx)(n.code,{children:"bool"}),">",(0,t.jsx)(n.br,{}),"\n","Unknown. Possibly forces physics simplification on/off?"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["physicsSimplificationError <",(0,t.jsx)(n.code,{children:"float"}),">",(0,t.jsx)(n.br,{}),"\n","The error permitted when simplifying the geometry of this mesh into a physics mesh."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"cdmepolygonmesh",children:"CDmePolygonMesh"}),"\n",(0,t.jsx)(n.p,{children:"This element contains all of the half-edge polygon data of a hammer mesh."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"meshData" "CDmePolygonMesh"\n{\n\t"id" "elementid" "d4460070-41c1-4483-a0b1-b850b32eccc4"\n\t"name" "string" "meshData"\n\t"vertexEdgeIndices" "int_array" \n\t"vertexDataIndices" "int_array" \n\t"edgeVertexIndices" "int_array" \n\t"edgeOppositeIndices" "int_array" \n\t"edgeNextIndices" "int_array" \n\t"edgeFaceIndices" "int_array" \n\t"edgeDataIndices" "int_array" \n\t"edgeVertexDataIndices" "int_array" \n\t"faceEdgeIndices" "int_array" \n\t"faceDataIndices" "int_array" \n\t"materials" "string_array" \n\t"vertexData" "CDmePolygonMeshDataArray"\n\t"faceVertexData" "CDmePolygonMeshDataArray"\n\t"edgeData" "CDmePolygonMeshDataArray"\n\t"faceData" "CDmePolygonMeshDataArray"\n\t"subdivisionData" "CDmePolygonMeshSubdivisionData"\n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["name <",(0,t.jsx)(n.code,{children:"string"}),">",(0,t.jsx)(n.br,{}),"\n","Seems to always be ",(0,t.jsx)(n.code,{children:"meshData"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["vertexEdgeIndices <",(0,t.jsx)(n.code,{children:"int_array"}),">",(0,t.jsx)(n.br,{}),"\n","An index to one of the half-edges starting from this vertex."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["vertexDataIndices <",(0,t.jsx)(n.code,{children:"int_array"}),">",(0,t.jsx)(n.br,{}),"\n","Index to the ",(0,t.jsx)(n.code,{children:"VertexData"})," streams."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["edgeVertexIndices <",(0,t.jsx)(n.code,{children:"int_array"}),">",(0,t.jsx)(n.br,{}),"\n","The destination vertex of this half-edge."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["edgeOppositeIndices <",(0,t.jsx)(n.code,{children:"int_array"}),">",(0,t.jsx)(n.br,{}),"\n","Index to the twin of this half-edge."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["edgeNextIndices <",(0,t.jsx)(n.code,{children:"int_array"}),">",(0,t.jsx)(n.br,{}),"\n","Index to the half-edge that this half-edge points to."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["edgeFaceIndices <",(0,t.jsx)(n.code,{children:"int_array"}),">",(0,t.jsx)(n.br,{}),"\n","Index to the face this half-edge is part of, -1 if the half edge is next to the void (external half-edge)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["edgeDataIndices <",(0,t.jsx)(n.code,{children:"int_array"}),">",(0,t.jsx)(n.br,{}),"\n","Per half-edge index to ",(0,t.jsx)(n.code,{children:"EdgeData"})," streams."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["edgeVertexDataIndices <",(0,t.jsx)(n.code,{children:"int_array"}),">",(0,t.jsx)(n.br,{}),"\n","Per half-edge index to ",(0,t.jsx)(n.code,{children:"FaceVertexData"})," streams."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["faceEdgeIndices <",(0,t.jsx)(n.code,{children:"int_array"}),">",(0,t.jsx)(n.br,{}),"\n","Per face index to one of the ",(0,t.jsx)(n.strong,{children:"inner"})," edges encapsulating this face. This effectively is what encodes faces in the mesh, one entry here is one face."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["faceDataIndices <",(0,t.jsx)(n.code,{children:"int_array"}),">",(0,t.jsx)(n.br,{}),"\n","Per Face index to ",(0,t.jsx)(n.code,{children:"FaceData"})," streams."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["materials <",(0,t.jsx)(n.code,{children:"string_array"}),">",(0,t.jsx)(n.br,{}),"\n","A list of every material used in the mesh, without duplicates, this will be indexed into by ",(0,t.jsx)(n.code,{children:"meshindex"})," in the ",(0,t.jsx)(n.code,{children:"FaceData"})," stream."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["vertexData <",(0,t.jsx)(n.code,{children:"CDmePolygonMeshDataArray"}),">",(0,t.jsx)(n.br,{}),"\n","Stores vertex positions."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["faceVertexData <",(0,t.jsx)(n.code,{children:"CDmePolygonMeshDataArray"}),">",(0,t.jsx)(n.br,{}),"\n","Stores per half-edge information for face vertex uv, normal, tangent, etc."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["edgeData <",(0,t.jsx)(n.code,{children:"CDmePolygonMeshDataArray"}),">",(0,t.jsx)(n.br,{}),"\n","Stores edge data such as soft or hard normals."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["faceData <",(0,t.jsx)(n.code,{children:"CDmePolygonMeshDataArray"}),">",(0,t.jsx)(n.br,{}),"\n","Stores face data such as texture scale, UV offset, material, lightmap bias."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["subdivisionData <",(0,t.jsx)(n.code,{children:"CDmePolygonMeshSubdivisionData"}),">",(0,t.jsx)(n.br,{}),"\n","Data representing the subdivided surface of the mesh."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"cdmepolygonmeshdataarray",children:"CDmePolygonMeshDataArray"}),"\n",(0,t.jsx)(n.p,{children:"An array of CDmePolygonMeshDataStream elements."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"vertexData" "CDmePolygonMeshDataArray"\n{\n\t"id" "elementid" "fe15bacb-f08e-4500-a7dd-99144aca5567"\n\t"size" "int" "4"\n\t"streams" "element_array" \n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["size <",(0,t.jsx)(n.code,{children:"int"}),">",(0,t.jsx)(n.br,{}),"\n","The amount of elements in the arrays."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["streams <",(0,t.jsx)(n.code,{children:"element_array"}),">",(0,t.jsx)(n.br,{}),"\n","An array of ",(0,t.jsx)(n.code,{children:"CDmePolygonMeshDataStream"})," elements."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"cdmepolygonmeshdatastream",children:"CDmePolygonMeshDataStream"}),"\n",(0,t.jsx)(n.p,{children:"A data stream."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"CDmePolygonMeshDataStream"\n{\n\t"id" "elementid" "0766ecc4-d5d4-45b6-bb90-b688e786bc5c"\n\t"name" "string" "position:0"\n\t"standardAttributeName" "string" "position"\n\t"semanticName" "string" "position"\n\t"semanticIndex" "int" "0"\n\t"vertexBufferLocation" "int" "0"\n\t"dataStateFlags" "int" "3"\n\t"subdivisionBinding" "element" ""\n\t"data" "vector3_array" \n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"hammer-meshes",children:"Hammer meshes"}),"\n",(0,t.jsx)(n.p,{children:"Source2 Hammer is also a modeling tool allowing users to create complex 3D meshes, due to this the format for its meshes is quite complex."}),"\n",(0,t.jsx)(n.h3,{id:"explanation-of-half-edge-meshes",children:"Explanation of half-edge meshes"}),"\n",(0,t.jsxs)(n.p,{children:["Hammer meshes are stored in a format known as a ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Doubly_connected_edge_list",children:"half-edge data structure"}),",\nthis format is widely used to represent polygonal meshes by many DCC apps such as Blender due to its efficient manipulation of topology and ability to handle polygons with an arbitrary amount of sides, making it easy to edit the mesh."]}),"\n",(0,t.jsxs)(n.p,{children:["Below is an example of how a simple quad is represented using half edges, the blue half edges are internal edges, and the green ones are external.\n",(0,t.jsx)(n.img,{alt:"half-edge example",src:s(48910).A+"",title:"Half-Edge Example",width:"828",height:"837"})]}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://jerryyin.info/geometry-processing-algorithms/half-edge/",children:"This site"})," offers a great interactive playground showcasing how half-edge meshes work.",(0,t.jsx)(n.br,{}),"\n","An implementation of how to write hammer meshes can be found in the map decompilation code of ",(0,t.jsx)(a,{name:"github",suffix:"VRF (s2v)",link:"https://github.com/ValveResourceFormat/ValveResourceFormat/blob/master/ValveResourceFormat/IO/HammerMeshBuilder.cs"})]}),(0,t.jsx)(n.p,{children:"From this point on it will be assumed that you have at least a basic understanding of half-edge meshes."})]}),"\n",(0,t.jsx)(n.h3,{id:"topology-limitations",children:"Topology limitations"}),"\n",(0,t.jsxs)(n.admonition,{type:"warning",children:[(0,t.jsxs)(n.p,{children:["It is impossible to represent non-manifold meshes such as a ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/M%C3%B6bius_strip",children:"M\xf6bius strip"})," as a hammer mesh!"]}),(0,t.jsxs)(n.p,{children:["Due to the nature of half-edge meshes, it can only represent ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Manifold",children:"manifold"})," geometry, arbitrary 3D ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Triangle_mesh",children:"triangle meshes"}),' used in video game levels can and will often\nviolate this, in which case converting from arbitrary triangle meshes to half-edge meshes needs careful sanitisation of the topology! When using the\n"Convert Models To Hammer Mesh" option, Hammer usually simply ',(0,t.jsx)(n.em,{children:"deletes"})," the offending faces. Due to this it is not recommended to be used for converting complex models to hammer meshes."]})]}),"\n",(0,t.jsx)(n.p,{children:"Below is a list of potential topology issues you might encounter while converting triangle meshes to half-edge meshes, taken out of Hammer's system for doing this."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Face specified an edge which already had two faces attached (this will fail because half-edge only supports two faces being linked by an edge, due to only ever being two twins forming one edge by definition.)."}),"\n",(0,t.jsx)(n.li,{children:"Face specified a vertex which had edges attached, but none that were open."}),"\n",(0,t.jsx)(n.li,{children:"Face specified a vertex that had multiple open edges and did not connect to any existing edge."}),"\n",(0,t.jsx)(n.li,{children:"Face specified two edges that are connected by a vertex but have one or more existing edges separating them."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"anatomy-of-a-hammer-mesh",children:"Anatomy of a Hammer mesh"})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}function m(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);