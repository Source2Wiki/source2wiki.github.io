"use strict";(self.webpackChunksource_2_wiki=self.webpackChunksource_2_wiki||[]).push([[76066],{11517:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>n,metadata:()=>d,toc:()=>o});const d=JSON.parse('{"id":"FileFormats/asset-structure","title":"Asset Structure","description":"This list contains all the asset types used by the game.","source":"@site/docs/FileFormats/asset-structure.md","sourceDirName":"FileFormats","slug":"/FileFormats/asset-structure","permalink":"/FileFormats/asset-structure","draft":false,"unlisted":false,"editUrl":"https://github.com/Source2Wiki/Source2Wiki/blob/master/docs/FileFormats/asset-structure.md?plain=1","tags":[],"version":"current","frontMatter":{"title":"Asset Structure"},"sidebar":"tutorialSidebar","previous":{"title":"File Formats","permalink":"/FileFormats/"},"next":{"title":"DMX","permalink":"/FileFormats/dmx"}}');var r=t(74848),i=t(28453);const n={title:"Asset Structure"},l=void 0,c={},o=[];function a(e){const s={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",section:"section",strong:"strong",sup:"sup",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.sup,{children:(0,r.jsx)(s.a,{href:"#user-content-fn-1",id:"user-content-fnref-1","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})}),"This list contains all the asset types used by the game."]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:".Extension"}),(0,r.jsx)(s.th,{children:"Compiler"}),(0,r.jsx)(s.th,{children:"Info"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"VPK"}),(0,r.jsx)(s.td,{children:"vpk"}),(0,r.jsx)(s.td,{children:"CompileMap (only for maps)"}),(0,r.jsx)(s.td,{children:"Valve Pack. Is used to store content. One VPK file is limited to 2GB."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"KV3"}),(0,r.jsx)(s.td,{children:"kv3"}),(0,r.jsx)(s.td,{children:"CompileKV3"}),(0,r.jsx)(s.td,{children:"KeyValues3. Main file used for almost all asset types. Supports binary encodings, versioning and data annotation."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"VData Asset"}),(0,r.jsx)(s.td,{children:"vdata"}),(0,r.jsx)(s.td,{children:"CompileVData"}),(0,r.jsx)(s.td,{children:"VData asset. Form of Generic Data loaded by game for various stuff like weapons, heroes, abilities, decalgroups, styles, asset tags, precipitation, modifiers, entity subclasses, tagged sounds. Depending on the generic_data_type that comes from schemas."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Animation File"}),(0,r.jsx)(s.td,{children:"vanim"}),(0,r.jsx)(s.td,{children:"CompileAnimation"}),(0,r.jsx)(s.td,{children:"Used by Legacy VMDL. Unused."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Animation Group"}),(0,r.jsx)(s.td,{children:"vagrp"}),(0,r.jsx)(s.td,{children:"CompileAnimGroup"}),(0,r.jsx)(s.td,{children:"Used by Legacy VMDL. Unused."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Sequence Group"}),(0,r.jsx)(s.td,{children:"vseq"}),(0,r.jsx)(s.td,{children:"CompileSequence"}),(0,r.jsx)(s.td,{children:"Used by Legacy VMDL. Unused."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Particle Asset"}),(0,r.jsx)(s.td,{children:"vpcf"}),(0,r.jsx)(s.td,{children:"CompileParticle"}),(0,r.jsx)(s.td,{children:"Particles. Created in the Particle Editor."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Material Asset"}),(0,r.jsx)(s.td,{children:"vmat"}),(0,r.jsx)(s.td,{children:"CompileMaterial"}),(0,r.jsx)(s.td,{children:"Materials. Created in the Material Editor."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Mesh Asset"}),(0,r.jsx)(s.td,{children:"vmesh"}),(0,r.jsx)(s.td,{children:"CompileRenderMesh"}),(0,r.jsx)(s.td,{children:"Used by Legacy VMDL. Unused."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Texture Asset"}),(0,r.jsx)(s.td,{children:"vtex"}),(0,r.jsx)(s.td,{children:"CompileTexture"}),(0,r.jsx)(s.td,{children:"Textures. Created by either the Material Editor, manual .vtex file or anything involving Panorama (VPDI/VDATA)."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Model Asset"}),(0,r.jsx)(s.td,{children:"vmdl"}),(0,r.jsx)(s.td,{children:"CompileModel"}),(0,r.jsx)(s.td,{children:"Model. Created in the ModelDoc Editor. Compiled file embeds multiple blocks in itself."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Physics Collision"}),(0,r.jsx)(s.td,{children:"vphys"}),(0,r.jsx)(s.td,{children:"CompileVPhysXData"}),(0,r.jsx)(s.td,{children:"Legacy Physics Collision file, used for Legacy VMDL and pre-Jun 6 2023 map compile. Unused."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Sound Asset"}),(0,r.jsx)(s.td,{children:"vsnd"}),(0,r.jsx)(s.td,{children:"CompileSound"}),(0,r.jsxs)(s.td,{children:["Sound file. Compiled out of a mp3/wav file. Can embed encoding data from ",(0,r.jsx)(s.code,{children:"encoding.txt"})," and phoneme/morph data from ",(0,r.jsx)(s.code,{children:"soundname.txt"}),"."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Sound Container"}),(0,r.jsx)(s.td,{children:"vsnd"}),(0,r.jsx)(s.td,{children:"CompileSound"}),(0,r.jsxs)(s.td,{children:["Soundcontainer. Shares the .vsnd extension with Sound, but is actually a .vdata file with a data type ",(0,r.jsx)(s.code,{children:"CVoiceContainerBase."})," A special kind of sound with rules/unique properties."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Morphset Asset"}),(0,r.jsx)(s.td,{children:"vmorf"}),(0,r.jsx)(s.td,{children:"CompileMorph"}),(0,r.jsx)(s.td,{children:"Used by Legacy VMDL. Unused."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Resource Manifest"}),(0,r.jsx)(s.td,{children:"vrman"}),(0,r.jsx)(s.td,{children:"CompileResourceManifest"}),(0,r.jsx)(s.td,{children:"Resource Manifest. Tells the game to load specified assets when being read."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"World Asset"}),(0,r.jsx)(s.td,{children:"vwrld"}),(0,r.jsx)(s.td,{children:"CompileWorld"}),(0,r.jsx)(s.td,{children:"World Asset. Part of a compiled map file. Loads defined in it worldnodes, lightmaps and entity lumps."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Worldnode Asset"}),(0,r.jsx)(s.td,{children:"vwnod"}),(0,r.jsx)(s.td,{children:"CompileWorldNode"}),(0,r.jsx)(s.td,{children:"World Node Asset. Part of a compiled map file. Loads defined worldnode models/scene objects."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Worldvis Asset"}),(0,r.jsx)(s.td,{children:"vvis"}),(0,r.jsx)(s.td,{children:"CompileMapVisibility"}),(0,r.jsx)(s.td,{children:"World Visibility Asset. Part of a compiled map file. Loads map visibility data. Visibility data are stored in voxel clusters."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Entitylump Asset"}),(0,r.jsx)(s.td,{children:"vents"}),(0,r.jsx)(s.td,{children:"CompileEntityLump"}),(0,r.jsxs)(s.td,{children:["Entitylump Asset. Part of a compiled map file. Loads all defined map entities. Regular map entities are stored in ",(0,r.jsx)(s.code,{children:"default_ents.vents"})," file, while point_template/world_layer entity lumps are stored in ",(0,r.jsx)(s.code,{children:"hammeridofapointtemplate#entitylumpname.vents_c"}),"."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Surfaceproperties Asset"}),(0,r.jsx)(s.td,{children:"vsurf"}),(0,r.jsx)(s.td,{children:"CompileSurfaceProperties"}),(0,r.jsx)(s.td,{children:"Surfaceproperties Asset. Has all the defined surface properties that Material Editor can use for materials."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Soundevent Script"}),(0,r.jsx)(s.td,{children:"vsndevts"}),(0,r.jsx)(s.td,{children:"CompileSoundEventScript"}),(0,r.jsx)(s.td,{children:"Soundevent Script. Before being played in the game, your sound must be defined here. Then, that new soundevent can be defined anywhere else where it's needed."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Soundstack Script"}),(0,r.jsx)(s.td,{children:"vsndstck"}),(0,r.jsx)(s.td,{children:"CompileSoundStackScript"}),(0,r.jsx)(s.td,{children:"Soundstack Script. Rules,operators and parameters for all the soundevents of the game."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Mixgraph"}),(0,r.jsx)(s.td,{children:"vmix"}),(0,r.jsx)(s.td,{children:"CompileVMix"}),(0,r.jsx)(s.td,{children:"Mixgraph Data. Created in the VMix Tool."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Postprocessing Settings"}),(0,r.jsx)(s.td,{children:"vpost"}),(0,r.jsx)(s.td,{children:"CompilePostProcessing"}),(0,r.jsx)(s.td,{children:"Postprocessing settings. Created in the Postprocessing Editor. Controls postprocessing."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Resource Remap Table"}),(0,r.jsx)(s.td,{children:"vrmap"}),(0,r.jsx)(s.td,{children:"CompileResourceRemapTable"}),(0,r.jsx)(s.td,{children:"Resource Remap Table. Unknown. Unused."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Panorama Style"}),(0,r.jsx)(s.td,{children:"vcss"}),(0,r.jsx)(s.td,{children:"CompilePanorama"}),(0,r.jsxs)(s.td,{children:["Panorama Style. Compiled ",(0,r.jsx)(s.code,{children:".css"})," file, defines how a Panorama UI element will look."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Panorama Layout"}),(0,r.jsx)(s.td,{children:"vxml"}),(0,r.jsx)(s.td,{children:"CompilePanorama"}),(0,r.jsxs)(s.td,{children:["Panorama Layout. Compiled ",(0,r.jsx)(s.code,{children:".xml"})," file, a skeleton of a Panorama UI element."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Panorama Dynamic Images"}),(0,r.jsx)(s.td,{children:"vpdi"}),(0,r.jsx)(s.td,{children:"CompilePanorama"}),(0,r.jsxs)(s.td,{children:["Panorama Dynamic Images. Acts the same purpose as Resource Manifest, but for Panorama images. They will be converted from source image asset to ",(0,r.jsx)(s.code,{children:".vtex_c"})," upon compile."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Javascript"}),(0,r.jsx)(s.td,{children:"vjs"}),(0,r.jsx)(s.td,{children:"CompileJavaScript"}),(0,r.jsxs)(s.td,{children:["Javascript. Created from a ",(0,r.jsx)(s.code,{children:".js"})," file."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Typescript"}),(0,r.jsx)(s.td,{children:"vts"}),(0,r.jsx)(s.td,{children:"CompileTypeScript"}),(0,r.jsxs)(s.td,{children:["Typescript. Created from a ",(0,r.jsx)(s.code,{children:".ts"})," file."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"PulseGraphDef"}),(0,r.jsx)(s.td,{children:"vpulse"}),(0,r.jsx)(s.td,{children:"CompilePulseGraphDef"}),(0,r.jsx)(s.td,{children:"Pulse Graph Definition. Created in the Pulse Editor."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Vector Graphic"}),(0,r.jsx)(s.td,{children:"vsvg"}),(0,r.jsx)(s.td,{children:"CompileVectorGraphic"}),(0,r.jsxs)(s.td,{children:["Vector Graphic. Created from a ",(0,r.jsx)(s.code,{children:".svg"})," file."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Particle Snapshot"}),(0,r.jsx)(s.td,{children:"vsnap"}),(0,r.jsx)(s.td,{children:"CompileSnap"}),(0,r.jsx)(s.td,{children:"Particle Snapshot. Made in the Particle Editor, child asset for the Particle Asset, acts as a reference for the particle."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"ModelDoc Template"}),(0,r.jsx)(s.td,{children:"vmodel_template"}),(0,r.jsx)(s.td,{children:"CSimpleAssetTypeInfo (not compileable)"}),(0,r.jsx)(s.td,{children:"ModelDoc Template."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"ModelDoc Prefab"}),(0,r.jsx)(s.td,{children:"vmdl_prefab"}),(0,r.jsx)(s.td,{children:"CSimpleAssetTypeInfo (not compileable)"}),(0,r.jsxs)(s.td,{children:["ModelDoc Prefab, is essentially a ",(0,r.jsx)(s.code,{children:".vmdl"}),". Used by ",(0,r.jsx)(s.code,{children:".vmdl"})," files to share nodes."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Animgraph Asset"}),(0,r.jsx)(s.td,{children:"vanmgrph"}),(0,r.jsx)(s.td,{children:"CompileAnimgraph"}),(0,r.jsxs)(s.td,{children:["Animgraph1 Animgraph. Requires a ",(0,r.jsx)(s.code,{children:".vmdl"})," to compile. Animgraph 1 Graph, used for animation behavior, states, and etc. Currently being replaced by Animgraph2."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Animgraph Subgraph"}),(0,r.jsx)(s.td,{children:"vsubgrph"}),(0,r.jsx)(s.td,{children:"CSimpleAssetTypeInfo (not compileable)"}),(0,r.jsxs)(s.td,{children:["Animgraph1 Subgraph. Used by ",(0,r.jsx)(s.code,{children:".vanmgrph"})," files to share nodes, tags and parameters, is essentially a Animgraph group in a separate file."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Map Asset"}),(0,r.jsx)(s.td,{children:"vmap"}),(0,r.jsx)(s.td,{children:"CompileMap"}),(0,r.jsx)(s.td,{children:"Map Asset. Compiled version does nothing and only references all the necessary stuff to load the map, while the source version is a Keyvalues2 VMAP file."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Subrect Asset"}),(0,r.jsx)(s.td,{children:"rect"}),(0,r.jsx)(s.td,{children:"CSimpleAssetTypeInfo (not compileable)"}),(0,r.jsx)(s.td,{children:"Subrect Asset. Created in the Subrect Editor, used for hot-spotting in Hammer."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Composite Material Kit"}),(0,r.jsx)(s.td,{children:"vcompmat"}),(0,r.jsx)(s.td,{children:"CompileVCompMat"}),(0,r.jsx)(s.td,{children:"Composite Material Asset. Used by CS2 for weapon skins."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Econ Item"}),(0,r.jsx)(s.td,{children:"econitem"}),(0,r.jsx)(s.td,{children:"CompileCS2EconItem"}),(0,r.jsx)(s.td,{children:"Economy Item. Used by CS2 Item Editor."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Smart Prop"}),(0,r.jsx)(s.td,{children:"vsmart"}),(0,r.jsx)(s.td,{children:"CompileVSmart"}),(0,r.jsx)(s.td,{children:"SmartProp. A prop with a defined set of rules and parameters in the VData Editor. Allows for much more control over a prop."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Response Rules"}),(0,r.jsx)(s.td,{children:"vrr"}),(0,r.jsx)(s.td,{children:"CompileResponseRules"}),(0,r.jsx)(s.td,{children:"Response Rules. Plays voicelines in response to events in the game."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Choreo Scene File Data"}),(0,r.jsx)(s.td,{children:"vcdlist"}),(0,r.jsx)(s.td,{children:"CompileChoreoSceneFileData"}),(0,r.jsxs)(s.td,{children:["Choreo Scene File Data. A combination of ",(0,r.jsx)(s.code,{children:".vcd"})," files for Choreo Scenes. Deprecated."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"VCD File (Choreo)"}),(0,r.jsx)(s.td,{children:"vcd"}),(0,r.jsx)(s.td,{children:"CompileChoreoScene"}),(0,r.jsx)(s.td,{children:"Valve Choreography Data. Stores choreography data for use with Faceposer and the game."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Animgraph2 Skeleton"}),(0,r.jsx)(s.td,{children:"vnmskel"}),(0,r.jsx)(s.td,{children:"CompileNmSkel"}),(0,r.jsx)(s.td,{children:"Animgraph2 Skeleton. Used by Animgraph2 for skeleton(s) and bonemask data."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Animgraph2 Clip"}),(0,r.jsx)(s.td,{children:"vnmclip"}),(0,r.jsx)(s.td,{children:"CompileNmClip"}),(0,r.jsx)(s.td,{children:"Animgraph2 Clip. Animation file used by Animgraph2. Can contain events to respond from graphs."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Animgraph2 Graph"}),(0,r.jsx)(s.td,{children:"vnmgraph"}),(0,r.jsx)(s.td,{children:"CompileNmGraph"}),(0,r.jsxs)(s.td,{children:["Animgraph2 Graph. Animgraph2's graph. Contains all the necessary behavior. Graph variations have a ",(0,r.jsx)(s.code,{children:"vnmgraph.+variationname"})," suffix."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Animgraph2 Variation"}),(0,r.jsx)(s.td,{children:"vnmvar"}),(0,r.jsx)(s.td,{children:"CompileNmGraphVariation"}),(0,r.jsx)(s.td,{children:"Animgraph2 Variation. Deprecated."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"VModuleMetadata"}),(0,r.jsx)(s.td,{children:"vmmd"}),(0,r.jsx)(s.td,{children:"CVMMDAssetTypeInfo (not compileable)"}),(0,r.jsxs)(s.td,{children:["Module Metadata. Contains all of the metadata about the module (like ",(0,r.jsx)(s.code,{children:"server.dll"}),", ",(0,r.jsx)(s.code,{children:"resourcecompiler.dll"}),") like resourcemanifests to load on startup and Pulse bindings."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"CompiledShader"}),(0,r.jsx)(s.td,{children:"vcs"}),(0,r.jsx)(s.td,{children:"CompiledShader (uses vfxcompile)"}),(0,r.jsxs)(s.td,{children:["CompiledShader. Contains all the shader data. Comes in multiple sets depending on the shader type. Stored in ",(0,r.jsx)(s.code,{children:"shaders_platform/api.vpk"}),"."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"FlexSceneFile"}),(0,r.jsx)(s.td,{children:"vfe"}),(0,r.jsx)(s.td,{children:"Not compileable"}),(0,r.jsx)(s.td,{children:"FlexSceneFile. Has expressions/phonemes data used by game/Faceposer."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"ClosedCaptions"}),(0,r.jsx)(s.td,{children:"dat"}),(0,r.jsx)(s.td,{children:"Compiled from txt with captioncompiler"}),(0,r.jsx)(s.td,{children:"Compiled Closed Captions file."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"DAC Game Defs Data"}),(0,r.jsx)(s.td,{children:"vdacdefs"}),(0,r.jsx)(s.td,{children:"CompileDACGameDefsData"}),(0,r.jsx)(s.td,{children:"Dota Underlords Game Definitions file. Compiled version is a KV3 file."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Dota Visual Novels"}),(0,r.jsx)(s.td,{children:"vdvn"}),(0,r.jsx)(s.td,{children:"CompileDotaVisualNovels"}),(0,r.jsx)(s.td,{children:"Visual Novels for various Dota 2 events."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Dota Patch Notes"}),(0,r.jsx)(s.td,{children:"vdpn"}),(0,r.jsx)(s.td,{children:"CompileDotaPatchNotes"}),(0,r.jsx)(s.td,{children:"Patch Notes for Dota 2."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Dota Hero List"}),(0,r.jsx)(s.td,{children:"herolist"}),(0,r.jsx)(s.td,{children:"CompileDotaHeroList"}),(0,r.jsx)(s.td,{children:"Hero List for Dota 2."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Item"}),(0,r.jsx)(s.td,{children:"item"}),(0,r.jsx)(s.td,{children:"CompileDotaItem"}),(0,r.jsx)(s.td,{children:"Item. Piece of items_game.txt."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Tools Asset Info"}),(0,r.jsx)(s.td,{children:"bin"}),(0,r.jsx)(s.td,{children:"Not compileable"}),(0,r.jsx)(s.td,{children:"Information file about all referenced assets used in Tools."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Bitmap Font"}),(0,r.jsx)(s.td,{children:"vfont"}),(0,r.jsx)(s.td,{children:"Not compileable"}),(0,r.jsx)(s.td,{children:"Bitmap font."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Processing Graph"}),(0,r.jsx)(s.td,{children:"vpram"}),(0,r.jsx)(s.td,{children:"?"}),(0,r.jsx)(s.td,{children:"Processing Graph. Precursor to legacy VMDL nodes."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Surface Graph"}),(0,r.jsx)(s.td,{children:"vsgraph"}),(0,r.jsx)(s.td,{children:"?"}),(0,r.jsx)(s.td,{children:"Surface Graph. Unknown."})]})]})]}),"\n","\n",(0,r.jsxs)(s.section,{"data-footnotes":!0,className:"footnotes",children:[(0,r.jsx)(s.h2,{className:"sr-only",id:"footnote-label",children:"Footnotes"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{id:"user-content-fn-1",children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsxs)(s.strong,{children:["Information on some assets taken from ",(0,r.jsx)(s.a,{href:"https://github.com/ValveResourceFormat/ValveResourceFormat",children:"ValveResourceFormat"})]})," ",(0,r.jsx)(s.a,{href:"#user-content-fnref-1","data-footnote-backref":"","aria-label":"Back to reference 1",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>n,x:()=>l});var d=t(96540);const r={},i=d.createContext(r);function n(e){const s=d.useContext(i);return d.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),d.createElement(i.Provider,{value:s},e.children)}}}]);