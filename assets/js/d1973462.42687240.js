"use strict";(self.webpackChunksource_2_wiki=self.webpackChunksource_2_wiki||[]).push([[80967],{14936:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>t,default:()=>x,frontMatter:()=>d,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"type":"mdx","permalink":"/Entities/npc_dota_neutral_spawner-dota2","source":"@site/src/pages/Entities/npc_dota_neutral_spawner-dota2.mdx","description":"\x3c!---","frontMatter":{"hide_table_of_contents":true},"unlisted":false}');var r=s(74848),l=s(28453);const d={hide_table_of_contents:!0},t=void 0,c={},o=[];function h(n){const e={br:"br",code:"code",li:"li",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...n.components},{Details:s}=e;return s||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.p,{children:"Point Entity"}),"\n",(0,r.jsx)(e.p,{children:"Spawns neutral units."}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:(0,r.jsx)("h2",{children:"Keyvalues"})}),(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Entity Scripts"})," (",(0,r.jsx)(e.code,{children:"vscripts"}),") <",(0,r.jsx)(e.code,{children:"ScriptList"}),">",(0,r.jsx)(e.br,{}),"\n","Name(s) of script files that are executed after all entities have spawned."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Name"})," (",(0,r.jsx)(e.code,{children:"targetname"}),") <",(0,r.jsx)(e.code,{children:"TargetSource"}),">",(0,r.jsx)(e.br,{}),"\n","The name that other entities refer to this entity by."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Camp Type"})," (",(0,r.jsx)(e.code,{children:"NeutralType"}),") <",(0,r.jsx)(e.code,{children:"Choices"}),">"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Easy"}),"\n",(0,r.jsx)(e.li,{children:"Moderate"}),"\n",(0,r.jsx)(e.li,{children:"Hard"}),"\n",(0,r.jsx)(e.li,{children:"Ancient"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Pull Type"})," (",(0,r.jsx)(e.code,{children:"PullType"}),") <",(0,r.jsx)(e.code,{children:"Choices"}),">"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Normal"}),"\n",(0,r.jsx)(e.li,{children:"Fast"}),"\n",(0,r.jsx)(e.li,{children:"Slow"}),"\n",(0,r.jsx)(e.li,{children:"Sorta Fast"}),"\n",(0,r.jsx)(e.li,{children:"Small Lane Camp"}),"\n",(0,r.jsx)(e.li,{children:"Just Enough"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Aggro Type"})," (",(0,r.jsx)(e.code,{children:"AggroType"}),") <",(0,r.jsx)(e.code,{children:"Choices"}),">"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Never"}),"\n",(0,r.jsx)(e.li,{children:"Always"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Force Spawn Type"})," (",(0,r.jsx)(e.code,{children:"ForcedSubType"}),") <",(0,r.jsx)(e.code,{children:"Choices"}),">"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Random (Normal Gamerules)"}),"\n",(0,r.jsx)(e.li,{children:"Kobolds (E), Ogres (M), Centaurs (H), Drakes (A)"}),"\n",(0,r.jsx)(e.li,{children:"Gnolls (E), Wolves (M), Troll Warlord (H), Rock Golems (A)"}),"\n",(0,r.jsx)(e.li,{children:"Troll Priest (E), Mud Golems (M), Ursa (H), Lizards (A)"}),"\n",(0,r.jsx)(e.li,{children:"Trolls & Kobold (E), Satyrs (M), Satyrs (H), Frostbitten Golems (A)"}),"\n",(0,r.jsx)(e.li,{children:"Ghosts (E), Centaurs (M), Wildkin (H), Prowlers (A)"}),"\n",(0,r.jsx)(e.li,{children:"Harpies (E), Warpine (H)"}),"\n",(0,r.jsx)(e.li,{children:"Tadpoles (E), Froglets (M), Grown Frog (H), Ancient Frogs (A)"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Max Upgrade Count"})," (",(0,r.jsx)(e.code,{children:"MaxUpgradeCount"}),") <",(0,r.jsx)(e.code,{children:"Integer"}),">",(0,r.jsx)(e.br,{}),"\n","Amount of times a camp can upgrade if it is upgradable"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Min Spawn Type"})," (",(0,r.jsx)(e.code,{children:"MinSpawnType"}),") <",(0,r.jsx)(e.code,{children:"Choices"}),">"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Kobolds (E), Ogres (M), Centaurs (H), Drakes (A) - (Normal Gamerules)"}),"\n",(0,r.jsx)(e.li,{children:"Gnolls (E), Wolves (M), Troll Warlord (H), Rock Golems (A)"}),"\n",(0,r.jsx)(e.li,{children:"Troll Priest (E), Mud Golems (M), Ursa (H), Lizards (A)"}),"\n",(0,r.jsx)(e.li,{children:"Trolls & Kobold (E), Satyrs (M), Satyrs (H), Frostbitten Golems (A)"}),"\n",(0,r.jsx)(e.li,{children:"Ghosts (E), Centaurs (M), Wildkin (H), Prowlers (A)"}),"\n",(0,r.jsx)(e.li,{children:"Harpies (E), Warpine (H)"}),"\n",(0,r.jsx)(e.li,{children:"Tadpoles (E), Froglets (M), Grown Frog (H), Ancient Frogs (A)"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Max Spawn Type"})," (",(0,r.jsx)(e.code,{children:"MaxSpawnType"}),") <",(0,r.jsx)(e.code,{children:"Choices"}),">"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Kobolds (E), Ogres (M), Centaurs (H), Drakes (A)"}),"\n",(0,r.jsx)(e.li,{children:"Gnolls (E), Wolves (M), Troll Warlord (H), Rock Golems (A)"}),"\n",(0,r.jsx)(e.li,{children:"Troll Priest (E), Mud Golems (M), Ursa (H), Lizards (A)"}),"\n",(0,r.jsx)(e.li,{children:"Trolls & Kobold (E), Satyrs (M), Satyrs (H), Frostbitten Golems (A)"}),"\n",(0,r.jsx)(e.li,{children:"Ghosts (E), Centaurs (M), Wildkin (H), Prowlers (A)"}),"\n",(0,r.jsx)(e.li,{children:"Harpies (E), Warpine (H)"}),"\n",(0,r.jsx)(e.li,{children:"Tadpoles (E), Froglets (M), Grown Frog (H), Ancient Frogs (A)"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Spawn Limit"})," (",(0,r.jsx)(e.code,{children:"BatchLimit"}),") <",(0,r.jsx)(e.code,{children:"Integer"}),">",(0,r.jsx)(e.br,{}),"\n","The max number of times this spawner is allowed to spawn its creeps. If 0, will spawn infinitely."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Volume Name"})," (",(0,r.jsx)(e.code,{children:"VolumeName"}),") <",(0,r.jsx)(e.code,{children:"TargetDestination"}),">",(0,r.jsx)(e.br,{}),"\n","Name of the volume used to determine whether to spawn."]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:(0,r.jsx)("h2",{children:"Inputs"})}),(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["RunScriptFile <",(0,r.jsx)(e.code,{children:"String"}),">",(0,r.jsx)(e.br,{}),"\n","Load and execute a script file"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["RunScriptCode <",(0,r.jsx)(e.code,{children:"String"}),">",(0,r.jsx)(e.br,{}),"\n","Execute a fragment of script code"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["CallScriptFunction <",(0,r.jsx)(e.code,{children:"String"}),">",(0,r.jsx)(e.br,{}),"\n","Call a script function"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["CallPrivateScriptFunction <",(0,r.jsx)(e.code,{children:"String"}),">",(0,r.jsx)(e.br,{}),"\n","Calls a script function from this entity's private script scope."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["CallGlobalScriptFunction <",(0,r.jsx)(e.code,{children:"String"}),">",(0,r.jsx)(e.br,{}),"\n","Calls a script function in the global script scope."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["Kill <",(0,r.jsx)(e.code,{children:"Void"}),">",(0,r.jsx)(e.br,{}),"\n","Removes this entity from the world."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["KillHierarchy <",(0,r.jsx)(e.code,{children:"Void"}),">",(0,r.jsx)(e.br,{}),"\n","Removes this entity and all its children from the world."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["KillConstrained <",(0,r.jsx)(e.code,{children:"Void"}),">",(0,r.jsx)(e.br,{}),"\n","Removes this entity, all its children, and anything constrained to it, from the world."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["AddOutput <",(0,r.jsx)(e.code,{children:"String"}),">",(0,r.jsx)(e.br,{}),"\n","Adds an entity I/O connection to this entity. Parameter format: outputname>targetname>inputname>parameter>delay>max times to fire (-1 == infinite). Very dangerous, use with care."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["FireUser1 <",(0,r.jsx)(e.code,{children:"Void"}),">",(0,r.jsx)(e.br,{}),"\n","Causes this entity's OnUser1 output to be fired."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["FireUser2 <",(0,r.jsx)(e.code,{children:"Void"}),">",(0,r.jsx)(e.br,{}),"\n","Causes this entity's OnUser2 output to be fired."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["FireUser3 <",(0,r.jsx)(e.code,{children:"Void"}),">",(0,r.jsx)(e.br,{}),"\n","Causes this entity's OnUser3 output to be fired."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["FireUser4 <",(0,r.jsx)(e.code,{children:"Void"}),">",(0,r.jsx)(e.br,{}),"\n","Causes this entity's OnUser4 output to be fired."]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:(0,r.jsx)("h2",{children:"Outputs"})}),(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["OnUser1 <",(0,r.jsx)(e.code,{children:"Void"}),">",(0,r.jsx)(e.br,{}),"\n","Fired in response to FireUser1 input."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["OnUser2 <",(0,r.jsx)(e.code,{children:"Void"}),">",(0,r.jsx)(e.br,{}),"\n","Fired in response to FireUser2 input."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["OnUser3 <",(0,r.jsx)(e.code,{children:"Void"}),">",(0,r.jsx)(e.br,{}),"\n","Fired in response to FireUser3 input."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["OnUser4 <",(0,r.jsx)(e.code,{children:"Void"}),">",(0,r.jsx)(e.br,{}),"\n","Fired in response to FireUser4 input."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["OnKilled <",(0,r.jsx)(e.code,{children:"Void"}),">",(0,r.jsx)(e.br,{}),"\n","Fired when the entity is killed and removed from the game. Parameter is the inflictor."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["OnSpawnerExhausted <",(0,r.jsx)(e.code,{children:"Void"}),">",(0,r.jsx)(e.br,{}),"\n","Fired when a spawner with a batch limit has run out of batches."]}),"\n"]}),"\n"]})]})]})}function x(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(h,{...n})}):h(n)}},28453:(n,e,s)=>{s.d(e,{R:()=>d,x:()=>t});var i=s(96540);const r={},l=i.createContext(r);function d(n){const e=i.useContext(l);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function t(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:d(n.components),i.createElement(l.Provider,{value:e},n.children)}}}]);