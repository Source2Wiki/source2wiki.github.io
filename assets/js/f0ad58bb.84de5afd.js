"use strict";(self.webpackChunksource_2_wiki=self.webpackChunksource_2_wiki||[]).push([[17169],{28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>l});var r=n(96540);const s={},d=r.createContext(s);function i(e){const t=r.useContext(d);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(d.Provider,{value:t},e.children)}},87908:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>o,frontMatter:()=>i,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"Scripting/Counter-Strike 2/cs_script/functionList","title":"API documentation","description":"This page is a list of all functions, interfaces, types, and enums offered by the cs_script API in Counter-Strike 2.","source":"@site/docs/Scripting/Counter-Strike 2/cs_script/2-functionList.mdx","sourceDirName":"Scripting/Counter-Strike 2/cs_script","slug":"/Scripting/Counter-Strike 2/cs_script/functionList","permalink":"/Scripting/Counter-Strike 2/cs_script/functionList","draft":false,"unlisted":false,"editUrl":"https://github.com/Source2Wiki/Source2Wiki/blob/master/docs/Scripting/Counter-Strike 2/cs_script/2-functionList.mdx?plain=1","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"API documentation","description":"This page is a list of all functions, interfaces, types, and enums offered by the cs_script API in Counter-Strike 2."},"sidebar":"tutorialSidebar","previous":{"title":"Intro to cs_script","permalink":"/Scripting/Counter-Strike 2/cs_script/introduction"},"next":{"title":"External Tools","permalink":"/ExternalTools/"}}');var s=n(74848),d=n(28453);const i={title:"API documentation",description:"This page is a list of all functions, interfaces, types, and enums offered by the cs_script API in Counter-Strike 2."},l="API documentation",c={},h=[{value:"Functions",id:"functions",level:2},{value:"Instance",id:"instance",level:3},{value:"Entity",id:"entity",level:3},{value:"BaseModelEntity",id:"basemodelentity",level:3},{value:"CSWeaponBase",id:"csweaponbase",level:3},{value:"CSWeaponData",id:"csweapondata",level:3},{value:"CSPlayerController",id:"csplayercontroller",level:3},{value:"CSObserverPawn",id:"csobserverpawn",level:3},{value:"CSPlayerPawn",id:"csplayerpawn",level:3},{value:"PointTemplate",id:"pointtemplate",level:3},{value:"Types",id:"types",level:2},{value:"Vector",id:"vector",level:3},{value:"QAngle",id:"qangle",level:3},{value:"Color",id:"color",level:3},{value:"EntIOValue",id:"entiovalue",level:3},{value:"EntIOContext",id:"entiocontext",level:3},{value:"Interfaces",id:"interfaces",level:2},{value:"TraceConfig",id:"traceconfig",level:3},{value:"TraceResult",id:"traceresult",level:3},{value:"GameEventDefs",id:"gameeventdefs",level:3},{value:"enums",id:"enums",level:2},{value:"CSWeaponType",id:"csweapontype",level:3},{value:"CSGearSlot",id:"csgearslot",level:3},{value:"TraceInteracts",id:"traceinteracts",level:3}];function a(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components},{Game:n,Tool:r}=t;return n||x("Game",!0),r||x("Tool",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"api-documentation",children:"API documentation"})}),"\n",(0,s.jsxs)(t.p,{children:["This page is a list of all functions, interfaces, types, and enums offered by the cs_script API in ",(0,s.jsx)(n,{name:"cs2"})]}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsxs)(t.p,{children:["Valve has released a ",(0,s.jsx)(r,{name:"ts"})," file defining the current API along side the zoo map, it can be found at ",(0,s.jsx)(t.code,{children:"Steam\\steamapps\\common\\Counter-Strike Global Offensive\\content\\csgo\\maps\\editor\\zoo\\scripts\\types\\point_script.d.ts"})]})}),"\n",(0,s.jsx)(t.h2,{id:"functions",children:"Functions"}),"\n",(0,s.jsx)(t.h3,{id:"instance",children:"Instance"}),"\n",(0,s.jsx)(t.p,{children:"The top level API provided to scripts attached to a point_script entity."}),"\n",(0,s.jsx)(t.p,{children:'Access these functions by importing Instance from "cs_script/point_script".'}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Function"}),(0,s.jsx)(t.th,{children:"Signature"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Msg"}),(0,s.jsx)(t.td,{children:"Msg(text: string): void;"}),(0,s.jsx)(t.td,{children:"Log a message to the console."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"DebugScreenText"}),(0,s.jsxs)(t.td,{children:["DebugScreenText(text: string, x: number, y: number, duration: number, color: ",(0,s.jsx)(t.a,{href:"#color",children:"Color"}),"): void;"]}),(0,s.jsx)(t.td,{children:"Print some text to the game window."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"DebugSphere"}),(0,s.jsxs)(t.td,{children:["DebugSphere(center: ",(0,s.jsx)(t.a,{href:"#vector",children:"Vector"}),", radius: number, duration: number, color: ",(0,s.jsx)(t.a,{href:"#color",children:"Color"}),"): void;"]}),(0,s.jsx)(t.td,{children:"Draw a wire spehere in the world."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"OnBeforeReload"}),(0,s.jsx)(t.td,{children:"OnBeforeReload(callback: () => any): void;"}),(0,s.jsx)(t.td,{children:"Called in Tools mode before the script is reloaded due to changes. A returned value will be passed to the OnReload callback."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"OnReload"}),(0,s.jsx)(t.td,{children:"OnReload(callback: (memory: any) => void): void;"}),(0,s.jsx)(t.td,{children:"Called in Tools mode after the script reloaded due to changes while."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"OnActivate"}),(0,s.jsx)(t.td,{children:"OnActivate(callback: () => void): void;"}),(0,s.jsx)(t.td,{children:"Called when the point_script entity is activated"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"OnGameEvent<E extends keyof GameEventDefs>"}),(0,s.jsx)(t.td,{children:"OnGameEvent<E extends keyof GameEventDefs>(eventName: E, callback: (args: GameEventDefs[E]) => void): void;"}),(0,s.jsx)(t.td,{children:"Called when known game events are fired. See GameEventDefs for list of known game events."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"OnScriptInput"}),(0,s.jsxs)(t.td,{children:["OnScriptInput(name: string, callback: (context: ",(0,s.jsx)(t.a,{href:"#entiocontext",children:"EntIOContext"}),") => void): void;"]}),(0,s.jsx)(t.td,{children:"Called input RunScriptInput is triggered on the point_script entity with a value that matches."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"SetThink"}),(0,s.jsx)(t.td,{children:"SetThink(callback: () => void): void;"}),(0,s.jsx)(t.td,{children:"Called per-think"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"SetNextThink"}),(0,s.jsx)(t.td,{children:"SetNextThink(time: number): void;"}),(0,s.jsx)(t.td,{children:"Set when the think callback should next be called"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"EntFireAtName"}),(0,s.jsxs)(t.td,{children:["EntFireAtName(name: string, input: string, value?: ",(0,s.jsx)(t.a,{href:"#entiovalue",children:"EntIOValue"}),", delay?: number): void;"]}),(0,s.jsx)(t.td,{children:"Fire the input on all targets matching the specified name."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"EntFireAtTarget"}),(0,s.jsxs)(t.td,{children:["EntFireAtTarget(target: Entity, input: string, value?: ",(0,s.jsx)(t.a,{href:"#entiovalue",children:"EntIOValue"}),", delay?: number): void;"]}),(0,s.jsx)(t.td,{children:"Fire the input on the specified target."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"ConnectOutput"}),(0,s.jsxs)(t.td,{children:["ConnectOutput(target: Entity, output: string, callback: (arg: ",(0,s.jsx)(t.a,{href:"#entiovalue",children:"EntIOValue"}),", context: ",(0,s.jsx)(t.a,{href:"#entiocontext",children:"EntIOContext"}),") => any): number | undefined;"]}),(0,s.jsxs)(t.td,{children:["Connect the output of an entity to a callback. The return value is a connection id that can be used in ",(0,s.jsx)(t.code,{children:"DisconnectOutput"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"DisconnectOutput"}),(0,s.jsx)(t.td,{children:"DisconnectOutput(connectionId: number): void;"}),(0,s.jsx)(t.td,{children:"Find entities by name."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"FindEntityByName"}),(0,s.jsx)(t.td,{children:"FindEntityByName(name: string): Entity | undefined;"}),(0,s.jsx)(t.td,{children:"Find the first entity matching the specified name."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"FindEntitiesByName"}),(0,s.jsx)(t.td,{children:"FindEntitiesByName(name: string): Entity[];"}),(0,s.jsx)(t.td,{children:"Find entities matching the specified name."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"FindEntityByClass"}),(0,s.jsx)(t.td,{children:"FindEntityByClass(className: string): Entity | undefined;"}),(0,s.jsx)(t.td,{children:"Find the first entity of the specified class name."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"FindEntitiesByClass"}),(0,s.jsx)(t.td,{children:"FindEntitiesByClass(className: string): Entity[];"}),(0,s.jsx)(t.td,{children:"Find entities of the specified class name."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetPlayerController"}),(0,s.jsx)(t.td,{children:"GetPlayerController(slot: number): CSPlayerController | undefined;"}),(0,s.jsx)(t.td,{children:"Get the player controller in the given slot."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetTraceHit"}),(0,s.jsxs)(t.td,{children:["GetTraceHit(start: ",(0,s.jsx)(t.a,{href:"#vector",children:"Vector"}),", end: ",(0,s.jsx)(t.a,{href:"#vector",children:"Vector"}),", config?: ",(0,s.jsx)(t.a,{href:"#traceconfig",children:"TraceConfig"}),"): ",(0,s.jsx)(t.a,{href:"#traceresult",children:"TraceResult"}),";"]}),(0,s.jsx)(t.td,{children:"Trace along a line and detect collisions"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetGameTime"}),(0,s.jsx)(t.td,{children:"GetGameTime(): number;"}),(0,s.jsx)(t.td,{children:"Get the game time in seconds."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"IsWarmupPeriod"}),(0,s.jsx)(t.td,{children:"IsWarmupPeriod(): boolean;"}),(0,s.jsx)(t.td,{children:"Get if the game is currently in a Warmup period."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetGameType"}),(0,s.jsx)(t.td,{children:"GetGameType(): number;"}),(0,s.jsx)(t.td,{children:"Get the current Game Type."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetGameMode"}),(0,s.jsx)(t.td,{children:"GetGameMode(): number;"}),(0,s.jsx)(t.td,{children:"Get the current Game Mode."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetMapName"}),(0,s.jsx)(t.td,{children:"GetMapName(): string;"}),(0,s.jsx)(t.td,{children:"Get the name of the current map."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetRoundsPlayed"}),(0,s.jsx)(t.td,{children:"GetRoundsPlayed(): number;"}),(0,s.jsx)(t.td,{children:"Get the number of rounds played in the current game."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"ClientCommand"}),(0,s.jsx)(t.td,{children:"ClientCommand(slot: number, command: string): void;"}),(0,s.jsx)(t.td,{children:"Issue the specified command to the specified client."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"ServerCommand"}),(0,s.jsx)(t.td,{children:"ServerCommand(command: string): void;"}),(0,s.jsx)(t.td,{children:"Issue a command."})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"entity",children:"Entity"}),"\n",(0,s.jsx)(t.p,{children:"API for all entities."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Function"}),(0,s.jsx)(t.th,{children:"Signature"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"IsValid"}),(0,s.jsx)(t.td,{children:"IsValid(): boolean;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetAbsOrigin"}),(0,s.jsxs)(t.td,{children:["GetAbsOrigin(): ",(0,s.jsx)(t.a,{href:"#vector",children:"Vector"}),";"]}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetLocalOrigin"}),(0,s.jsxs)(t.td,{children:["GetLocalOrigin(): ",(0,s.jsx)(t.a,{href:"#vector",children:"Vector"}),";"]}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetAbsAngles"}),(0,s.jsxs)(t.td,{children:["GetAbsAngles(): ",(0,s.jsx)(t.a,{href:"#qangle",children:"QAngle"}),";"]}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetLocalAngles"}),(0,s.jsxs)(t.td,{children:["GetLocalAngles(): ",(0,s.jsx)(t.a,{href:"#qangle",children:"QAngle"}),";"]}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetAbsVelocity"}),(0,s.jsxs)(t.td,{children:["GetAbsVelocity(): ",(0,s.jsx)(t.a,{href:"#vector",children:"Vector"}),";"]}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetLocalVelocity"}),(0,s.jsxs)(t.td,{children:["GetLocalVelocity(): ",(0,s.jsx)(t.a,{href:"#vector",children:"Vector"}),";"]}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetEyeAngles"}),(0,s.jsxs)(t.td,{children:["GetEyeAngles(): ",(0,s.jsx)(t.a,{href:"#qangle",children:"QAngle"}),";"]}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetEyePosition"}),(0,s.jsxs)(t.td,{children:["GetEyePosition(): ",(0,s.jsx)(t.a,{href:"#vector",children:"Vector"}),";"]}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Teleport"}),(0,s.jsxs)(t.td,{children:["Teleport(newPosition: ",(0,s.jsx)(t.a,{href:"#vector",children:"Vector"})," | null, newAngles: ",(0,s.jsx)(t.a,{href:"#qangle",children:"QAngle"})," | null, newVelocity: ",(0,s.jsx)(t.a,{href:"#vector",children:"Vector"})," | null): void;"]}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetClassName"}),(0,s.jsx)(t.td,{children:"GetClassName(): string;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetEntityName"}),(0,s.jsx)(t.td,{children:"GetEntityName(): string;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"SetEntityName"}),(0,s.jsx)(t.td,{children:"SetEntityName(name: string): void;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetTeamNumber"}),(0,s.jsx)(t.td,{children:"GetTeamNumber(): number;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetHealth"}),(0,s.jsx)(t.td,{children:"GetHealth(): number;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"SetHealth"}),(0,s.jsx)(t.td,{children:"SetHealth(health: number): void;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetMaxHealth"}),(0,s.jsx)(t.td,{children:"GetMaxHealth(): number;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"SetMaxHealth"}),(0,s.jsx)(t.td,{children:"SetMaxHealth(health: number): void;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Kill"}),(0,s.jsx)(t.td,{children:"Kill(): void;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Remove"}),(0,s.jsx)(t.td,{children:"Remove(): void;"}),(0,s.jsx)(t.td,{})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"basemodelentity",children:"BaseModelEntity"}),"\n",(0,s.jsxs)(t.p,{children:["extends ",(0,s.jsx)(t.a,{href:"#entity",children:"Entity"})]}),"\n",(0,s.jsx)(t.p,{children:"API for all entities which have a model."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Function"}),(0,s.jsx)(t.th,{children:"Signature"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"SetModel"}),(0,s.jsx)(t.td,{children:"SetModel(modelName: string): void;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"SetModelScale"}),(0,s.jsx)(t.td,{children:"SetModelScale(scale: number): void;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"SetColor"}),(0,s.jsxs)(t.td,{children:["SetColor(color: ",(0,s.jsx)(t.a,{href:"#color",children:"Color"}),"): void;"]}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Glow"}),(0,s.jsxs)(t.td,{children:["Glow(color?: ",(0,s.jsx)(t.a,{href:"#color",children:"Color"}),"): void;"]}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Unglow"}),(0,s.jsx)(t.td,{children:"Unglow(): void;"}),(0,s.jsx)(t.td,{})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"csweaponbase",children:"CSWeaponBase"}),"\n",(0,s.jsxs)(t.p,{children:["extends ",(0,s.jsx)(t.a,{href:"#basemodelentity",children:"BaseModelEntity"})]}),"\n",(0,s.jsx)(t.p,{children:"API for all Counter-Strike weapons."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Function"}),(0,s.jsx)(t.th,{children:"Signature"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetData"}),(0,s.jsx)(t.td,{children:"GetData(): CSWeaponData;"}),(0,s.jsx)(t.td,{})]})})]}),"\n",(0,s.jsx)(t.h3,{id:"csweapondata",children:"CSWeaponData"}),"\n",(0,s.jsx)(t.p,{children:"API for Counter-Strike weapon data."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Function"}),(0,s.jsx)(t.th,{children:"Signature"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetName"}),(0,s.jsx)(t.td,{children:"GetName(): string;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetType"}),(0,s.jsxs)(t.td,{children:["GetType(): ",(0,s.jsx)(t.a,{href:"#csweapontype",children:"CSWeaponType"}),";"]}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetPrice"}),(0,s.jsx)(t.td,{children:"GetPrice(): number;"}),(0,s.jsx)(t.td,{})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"csplayercontroller",children:"CSPlayerController"}),"\n",(0,s.jsxs)(t.p,{children:["extends ",(0,s.jsx)(t.a,{href:"#entity",children:"Entity"})]}),"\n",(0,s.jsx)(t.p,{children:"API for player controllers."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Function"}),(0,s.jsx)(t.th,{children:"Signature"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetPlayerSlot"}),(0,s.jsx)(t.td,{children:"GetPlayerSlot(): number;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetPlayerPawn"}),(0,s.jsx)(t.td,{children:"GetPlayerPawn(): CSPlayerPawn | undefined;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetObserverPawn"}),(0,s.jsx)(t.td,{children:"GetObserverPawn(): CSObserverPawn | undefined;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetScore"}),(0,s.jsx)(t.td,{children:"GetScore(): number;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"AddScore"}),(0,s.jsx)(t.td,{children:"AddScore(points: number): void;"}),(0,s.jsx)(t.td,{children:"Add to the player's score. Negative values are allowed but the score will not go below zero."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetWeaponDataForLoadoutSlot"}),(0,s.jsx)(t.td,{children:"GetWeaponDataForLoadoutSlot(slot: number, team?: number): CSWeaponData | undefined;"}),(0,s.jsx)(t.td,{children:"Leave team as the default to use the player's current team."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"IsObserving"}),(0,s.jsx)(t.td,{children:"IsObserving(): boolean;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"IsBot"}),(0,s.jsx)(t.td,{children:"IsBot(): boolean;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"JoinTeam"}),(0,s.jsx)(t.td,{children:"JoinTeam(team: number): void;"}),(0,s.jsx)(t.td,{})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"csobserverpawn",children:"CSObserverPawn"}),"\n",(0,s.jsxs)(t.p,{children:["extends ",(0,s.jsx)(t.a,{href:"#basemodelentity",children:"BaseModelEntity"})]}),"\n",(0,s.jsx)(t.p,{children:"API for spectators."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Function"}),(0,s.jsx)(t.th,{children:"Signature"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetPlayerController"}),(0,s.jsx)(t.td,{children:"GetPlayerController(): CSPlayerController | undefined;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetObserverMode"}),(0,s.jsx)(t.td,{children:"GetObserverMode(): number;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"SetObserverMode"}),(0,s.jsx)(t.td,{children:"SetObserverMode(nMode: number): void;"}),(0,s.jsx)(t.td,{})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"csplayerpawn",children:"CSPlayerPawn"}),"\n",(0,s.jsxs)(t.p,{children:["extends ",(0,s.jsx)(t.a,{href:"#basemodelentity",children:"BaseModelEntity"})]}),"\n",(0,s.jsx)(t.p,{children:"API for player pawns (the actual player in the world that the controller controls)."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Function"}),(0,s.jsx)(t.th,{children:"Signature"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetPlayerController"}),(0,s.jsx)(t.td,{children:"GetPlayerController(): CSPlayerController | undefined;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"FindWeapon"}),(0,s.jsx)(t.td,{children:"FindWeapon(name: string): CSWeaponBase | undefined;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"FindWeaponBySlot"}),(0,s.jsxs)(t.td,{children:["FindWeaponBySlot(slot: ",(0,s.jsx)(t.a,{href:"#csgearslot",children:"CSGearSlot"}),"): CSWeaponBase | undefined;"]}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetActiveWeapon"}),(0,s.jsx)(t.td,{children:"GetActiveWeapon(): CSWeaponBase | undefined;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"DestroyWeapon"}),(0,s.jsx)(t.td,{children:"DestroyWeapon(target: CSWeaponBase | undefined): void;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"DestroyWeapons"}),(0,s.jsx)(t.td,{children:"DestroyWeapons(): void;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"SwitchToWeapon"}),(0,s.jsx)(t.td,{children:"SwitchToWeapon(target: CSWeaponBase | undefined): void;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GiveNamedItem"}),(0,s.jsx)(t.td,{children:"GiveNamedItem(name: string, autoDeploy?: boolean): void;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetArmor"}),(0,s.jsx)(t.td,{children:"GetArmor(): number;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"SetArmor"}),(0,s.jsx)(t.td,{children:"SetArmor(value: number): void;"}),(0,s.jsx)(t.td,{})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"pointtemplate",children:"PointTemplate"}),"\n",(0,s.jsxs)(t.p,{children:["extends ",(0,s.jsx)(t.a,{href:"#entity",children:"Entity"})]}),"\n",(0,s.jsxs)(t.p,{children:["API for ",(0,s.jsx)(t.a,{href:"/Entities/point_template",children:"point_template"})," entities."]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Function"}),(0,s.jsx)(t.th,{children:"Signature"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"ForceSpawn"}),(0,s.jsxs)(t.td,{children:["ForceSpawn(origin?: ",(0,s.jsx)(t.a,{href:"#vector",children:"Vector"}),", angle?: ",(0,s.jsx)(t.a,{href:"#qangle",children:"QAngle"}),"): ",(0,s.jsx)(t.a,{href:"#entity",children:"Entity"}),"[] | undefined;"]}),(0,s.jsx)(t.td,{})]})})]}),"\n",(0,s.jsx)(t.h2,{id:"types",children:"Types"}),"\n",(0,s.jsx)(t.h3,{id:"vector",children:"Vector"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"type Vector = { x: number, y: number, z: number };\n"})}),"\n",(0,s.jsx)(t.h3,{id:"qangle",children:"QAngle"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"type QAngle = { pitch: number, yaw: number, roll: number };\n"})}),"\n",(0,s.jsx)(t.h3,{id:"color",children:"Color"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"type Color = { r: number, g: number, b: number, a?: number };\n"})}),"\n",(0,s.jsx)(t.h3,{id:"entiovalue",children:"EntIOValue"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"type EntIOValue = boolean | number | string | Vector | Color | undefined;\n"})}),"\n",(0,s.jsx)(t.h3,{id:"entiocontext",children:"EntIOContext"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"type EntIOContext = { caller?: Entity, activator?: Entity  };\n"})}),"\n",(0,s.jsx)(t.h2,{id:"interfaces",children:"Interfaces"}),"\n",(0,s.jsx)(t.h3,{id:"traceconfig",children:"TraceConfig"}),"\n",(0,s.jsx)(t.p,{children:"The data required to perform a trace."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Property Name"}),(0,s.jsx)(t.th,{children:"Declaration"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"ignoreEnt"}),(0,s.jsxs)(t.td,{children:["ignoreEnt?: ",(0,s.jsx)(t.a,{href:"#entity",children:"Entity"})]}),(0,s.jsx)(t.td,{children:"Set to ignore collisions with an entity, typically the source of a trace"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"interacts"}),(0,s.jsxs)(t.td,{children:["interacts?: ",(0,s.jsx)(t.a,{href:"#traceinteracts",children:"TraceInteracts"})]}),(0,s.jsx)(t.td,{children:"Defaults to trace against any solid"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"sphereRadius"}),(0,s.jsx)(t.td,{children:"sphereRadius?: number"}),(0,s.jsx)(t.td,{children:"Set to trace a sphere with specified radius"})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"traceresult",children:"TraceResult"}),"\n",(0,s.jsx)(t.p,{children:"The resulting data from a trace."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Property Name"}),(0,s.jsx)(t.th,{children:"Declaration"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"fraction"}),(0,s.jsx)(t.td,{children:"fraction: number;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"end"}),(0,s.jsx)(t.td,{children:"end: Vector;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"didHit"}),(0,s.jsx)(t.td,{children:"didHit: boolean;"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"hitEnt"}),(0,s.jsx)(t.td,{children:"hitEnt?: Entity"}),(0,s.jsx)(t.td,{children:"null;"})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"gameeventdefs",children:"GameEventDefs"}),"\n",(0,s.jsx)(t.p,{children:"Interface defining game events, this interface seems incomplete as using other events outside of this also works."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Property Name"}),(0,s.jsx)(t.th,{children:"Declaration"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"player_activate"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"player_activate: { userid: number };"})}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"player_connect"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"player_connect: { userid: number, name: string, bot: boolean };"})}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"player_disconnect"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"player_disconnect: { userid: number, reason: number };"})}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"player_death"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"player_death: { userid: number, attacker: number };"})}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"round_start"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"round_start: { round_number: number };"})}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"round_end"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"round_end: { winner: number };"})}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"bomb_planted"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"bomb_planted: { userid: number };"})}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"bomb_defused"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"bomb_defused: { userid: number };"})}),(0,s.jsx)(t.td,{})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"enums",children:"enums"}),"\n",(0,s.jsx)(t.h3,{id:"csweapontype",children:"CSWeaponType"}),"\n",(0,s.jsx)(t.p,{children:"Counter-Strike weapon types."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"KNIFE = 0"}),"\n",(0,s.jsx)(t.li,{children:"PISTOL = 1"}),"\n",(0,s.jsx)(t.li,{children:"SUBMACHINEGUN = 2"}),"\n",(0,s.jsx)(t.li,{children:"RIFLE = 3"}),"\n",(0,s.jsx)(t.li,{children:"SHOTGUN = 4"}),"\n",(0,s.jsx)(t.li,{children:"SNIPER_RIFLE = 5"}),"\n",(0,s.jsx)(t.li,{children:"MACHINEGUN = 6"}),"\n",(0,s.jsx)(t.li,{children:"C4 = 7"}),"\n",(0,s.jsx)(t.li,{children:"TASER = 8"}),"\n",(0,s.jsx)(t.li,{children:"GRENADE = 9"}),"\n",(0,s.jsx)(t.li,{children:"EQUIPMENT = 10"}),"\n",(0,s.jsx)(t.li,{children:"STACKABLEITEM = 11"}),"\n",(0,s.jsx)(t.li,{children:"UNKNOWN = 12"}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"csgearslot",children:"CSGearSlot"}),"\n",(0,s.jsx)(t.p,{children:"Counter-Strike gear types."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"INVALID = -1"}),"\n",(0,s.jsx)(t.li,{children:"RIFLE = 0"}),"\n",(0,s.jsx)(t.li,{children:"PISTOL = 1"}),"\n",(0,s.jsx)(t.li,{children:"KNIFE = 2"}),"\n",(0,s.jsx)(t.li,{children:"GRENADES = 3"}),"\n",(0,s.jsx)(t.li,{children:"C4 = 4"}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"traceinteracts",children:"TraceInteracts"}),"\n",(0,s.jsx)(t.p,{children:"What traces will interact with"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"SOLID = 0"}),"\n",(0,s.jsx)(t.li,{children:"WORLD = 1"}),"\n"]})]})}function o(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}function x(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);