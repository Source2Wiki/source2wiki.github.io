"use strict";(self.webpackChunksource_2_wiki=self.webpackChunksource_2_wiki||[]).push([[10794,37381,50706,74150,90915],{13525:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>j,contentTitle:()=>x,default:()=>m,frontMatter:()=>h,metadata:()=>i,toc:()=>p});const i=JSON.parse('{"id":"Entities/prop_static","title":"prop_static","description":"\x3c!---","source":"@site/docs/Entities/prop_static.mdx","sourceDirName":"Entities","slug":"/Entities/prop_static","permalink":"/Entities/prop_static","draft":false,"unlisted":false,"editUrl":"/HowToEdit/entity-page-info","tags":[],"version":"current","frontMatter":{"hide_table_of_contents":true,"custom_edit_url":"/HowToEdit/entity-page-info"},"sidebar":"tutorialSidebar","previous":{"title":"prop_russell_headset","permalink":"/Entities/prop_russell_headset"},"next":{"title":"prop_vehicle_apc","permalink":"/Entities/prop_vehicle_apc"}}');var r=s(74848),l=s(28453),t=s(18014),o=s(17496),c=s(20763),d=s(73129),a=s(63723);const h={hide_table_of_contents:!0,custom_edit_url:"/HowToEdit/entity-page-info"},x="prop_static",j={},p=[];function u(e){const n={h1:"h1",header:"header",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"prop_static",children:"prop_static"})}),"\n","\n",(0,r.jsx)(t.A,{cs2:(0,r.jsx)(o.default,{}),steamvr:(0,r.jsx)(c.default,{}),dota2:(0,r.jsx)(d.default,{}),hla:(0,r.jsx)(a.default,{})})]})}function m(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},17496:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"type":"mdx","permalink":"/Entities/prop_static-cs2","source":"@site/src/pages/Entities/prop_static-cs2.mdx","description":"\x3c!---","frontMatter":{"hide_table_of_contents":true},"unlisted":false}');var r=s(74848),l=s(28453);const t={hide_table_of_contents:!0},o=void 0,c={},d=[];function a(e){const n={br:"br",code:"code",li:"li",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Point Entity"}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:(0,r.jsx)("h2",{children:"Keyvalues"})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Model"})," (",(0,r.jsx)(n.code,{children:"model"}),") <",(0,r.jsx)(n.code,{children:"Resource"}),">"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Tint Color"})," (",(0,r.jsx)(n.code,{children:"rendercolor"}),") <",(0,r.jsx)(n.code,{children:"Color255"}),">"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Material Group"})," (",(0,r.jsx)(n.code,{children:"skin"}),") <",(0,r.jsx)(n.code,{children:"MaterialGroup"}),">",(0,r.jsx)(n.br,{}),"\n","Some props have multiple matieral variations called Material Groups, here you can see what material groups are available for selection."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Collision Type"})," (",(0,r.jsx)(n.code,{children:"solid"}),") <",(0,r.jsx)(n.code,{children:"Choices"}),">"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Not Solid"}),"\n",(0,r.jsx)(n.li,{children:"Use VPhysics"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Lighting Type"})," (",(0,r.jsx)(n.code,{children:"bakelighting"}),") <",(0,r.jsx)(n.code,{children:"Choices"}),">",(0,r.jsx)(n.br,{}),"\n","Selects whether to use lightmapping or lightprobes for this mesh. Note: Selecting light probes will disable mesh merging/batching, creating extra draw calls. To merge lightprobed meshes, enable the Bake to World parameter."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Default"}),"\n",(0,r.jsx)(n.li,{children:"Lightmapped"}),"\n",(0,r.jsx)(n.li,{children:"Lightprobed"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Shadow Type"})," (",(0,r.jsx)(n.code,{children:"disableshadows"}),") <",(0,r.jsx)(n.code,{children:"Choices"}),">",(0,r.jsx)(n.br,{}),"\n","Selects the type of shadows that should be cast from this prop_static."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Baked & Dynamic"}),"\n",(0,r.jsx)(n.li,{children:"Only Baked"}),"\n",(0,r.jsx)(n.li,{children:"Only Dynamic"}),"\n",(0,r.jsx)(n.li,{children:"None"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Emissive"})," (",(0,r.jsx)(n.code,{children:"emissive"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","Allow this prop to emit lighting. Note that this only works on materials with Self Illum parameters, and is only visible in the GPU Path Tracing Preview and in the final lightmap bake."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Emissive Boost"})," (",(0,r.jsx)(n.code,{children:"emissive_lighting_boost"}),") <",(0,r.jsx)(n.code,{children:"Float"}),">",(0,r.jsx)(n.br,{}),"\n","Used to boost emissive lighting from a mesh. Note that boosting emissive on smaller meshes can create more lighting artifacts/noise."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Lightmap Scale Bias"})," (",(0,r.jsx)(n.code,{children:"lightmapscalebias"}),") <",(0,r.jsx)(n.code,{children:"Choices"}),">",(0,r.jsx)(n.br,{}),"\n","Used to scale the resolution of the lightmap for this mesh."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Scale down by 8"}),"\n",(0,r.jsx)(n.li,{children:"Scale down by 4"}),"\n",(0,r.jsx)(n.li,{children:"Scale down by 2"}),"\n",(0,r.jsx)(n.li,{children:"Default (no scale)"}),"\n",(0,r.jsx)(n.li,{children:"Scale up by 2"}),"\n",(0,r.jsx)(n.li,{children:"Scale up by 4"}),"\n",(0,r.jsx)(n.li,{children:"Scale up by 8"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Explicit Light Probe/Cubemap Volume"})," (",(0,r.jsx)(n.code,{children:"lightingorigin"}),") <",(0,r.jsx)(n.code,{children:"TargetDestination"}),">",(0,r.jsx)(n.br,{}),"\n","Used to manually assign a named env_cubemap, env_cubemap_box or env_combined_light_probe_volume to a mesh. Note: this disables mesh merging and forces it into a slower rendering path, use with caution."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Bake As Double-Sided"})," (",(0,r.jsx)(n.code,{children:"bakelightdoublesided"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","Bakes the mesh as if it were double-sided geometry in the lightmapper. Useful on geometry with 'Render Backfaces' enabled via it's material (such as foliage). When the lightmapper sees many and/or large backfaces it will invalidate lightmap samples as an optimization, which can lead to lightmap errors/reduced quality in some circumstances."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Vis Occluder"})," (",(0,r.jsx)(n.code,{children:"visoccluder"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","If true this geometry is used as an occluder for precomputed visibility. As a rule this geometry should be as simplistic as possible"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Material Override"})," (",(0,r.jsx)(n.code,{children:"materialoverride"}),") <",(0,r.jsx)(n.code,{children:"Material"}),">",(0,r.jsx)(n.br,{}),"\n","This will override all materials on a selected mesh with a specific material"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Render LOD"})," (",(0,r.jsx)(n.code,{children:"lodlevel"}),") <",(0,r.jsx)(n.code,{children:"LodLevel"}),">",(0,r.jsx)(n.br,{}),"\n","Auto for standard LOD behaviour, or select an explicit LOD to use. Note that LODs take up more room in the lightmap and do not merge, potentially making them less performant if used on many objects (Set to Auto)."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Force Bake To World"})," (",(0,r.jsx)(n.code,{children:"baketoworld"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","If true mesh will be baked/merged into the world geometry of the map so that the model is not referenced at runtime. Use this if you want light probed static meshes to merge"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Disable Mesh Merging"})," (",(0,r.jsx)(n.code,{children:"disablemerging"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","If true this will not be merged with other geometry during map compile (reduces rendering efficiency)."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Render to Cubemaps"})," (",(0,r.jsx)(n.code,{children:"rendertocubemaps"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","If true, this geometry renders into baked cube maps"]}),"\n"]}),"\n"]})]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},18014:(e,n,s)=>{s.d(n,{A:()=>B});var i=s(96540),r=s(34164),l=s(23104),t=s(56347),o=s(205),c=s(57485),d=s(31682),a=s(70679);function h(e){return i.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function x(e){const{values:n,children:s}=e;return(0,i.useMemo)(()=>{const e=n??function(e){return h(e).map(({props:{value:e,label:n,attributes:s,default:i}})=>({value:e,label:n,attributes:s,default:i}))}(s);return function(e){const n=(0,d.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,s])}function j({value:e,tabValues:n}){return n.some(n=>n.value===e)}function p({queryString:e=!1,groupId:n}){const s=(0,t.W6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,c.aZ)(r),(0,i.useCallback)(e=>{if(!r)return;const n=new URLSearchParams(s.location.search);n.set(r,e),s.replace({...s.location,search:n.toString()})},[r,s])]}function u(e){const{defaultValue:n,queryString:s=!1,groupId:r}=e,l=x(e),[t,c]=(0,i.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!j({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const s=n.find(e=>e.default)??n[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:l})),[d,h]=p({queryString:s,groupId:r}),[u,m]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[s,r]=(0,a.Dv)(n);return[s,(0,i.useCallback)(e=>{n&&r.set(e)},[n,r])]}({groupId:r}),g=(()=>{const e=d??u;return j({value:e,tabValues:l})?e:null})();(0,o.A)(()=>{g&&c(g)},[g]);return{selectedValue:t,selectValue:(0,i.useCallback)(e=>{if(!j({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);c(e),h(e),m(e)},[h,m,l]),tabValues:l}}var m=s(92303);const g="tabList__CuJ",b="tabItem_LNqP";var f=s(74848);function y({className:e,block:n,selectedValue:s,selectValue:i,tabValues:t}){const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,l.a_)(),d=e=>{const n=e.currentTarget,r=o.indexOf(n),l=t[r].value;l!==s&&(c(n),i(l))},a=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const s=o.indexOf(e.currentTarget)+1;n=o[s]??o[0];break}case"ArrowLeft":{const s=o.indexOf(e.currentTarget)-1;n=o[s]??o[o.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},e),children:t.map(({value:e,label:n,attributes:i})=>(0,f.jsx)("li",{role:"tab",tabIndex:s===e?0:-1,"aria-selected":s===e,ref:e=>{o.push(e)},onKeyDown:a,onClick:d,...i,className:(0,r.A)("tabs__item",b,i?.className,{"tabs__item--active":s===e}),children:n??e},e))})}function w({lazy:e,children:n,selectedValue:s}){const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=l.find(e=>e.props.value===s);return e?(0,i.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:l.map((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==s}))})}function v(e){const n=u(e);return(0,f.jsxs)("div",{className:(0,r.A)("tabs-container",g),children:[(0,f.jsx)(y,{...n,...e}),(0,f.jsx)(w,{...n,...e})]})}function S(e){const n=(0,m.A)();return(0,f.jsx)(v,{...e,children:h(e.children)},String(n))}const _="tabItem_Ymn6";function k({children:e,hidden:n,className:s}){return(0,f.jsx)("div",{role:"tabpanel",className:(0,r.A)(_,s),hidden:n,children:e})}var D=s(26408);const B=e=>{const n={};if(Object.entries(e).forEach(([e,s])=>{s&&(i.isValidElement(s)||"object"==typeof s)&&(n[e]=s)}),!n||"object"!=typeof n)return console.warn("GameTabs: No valid game content found in props"),(0,f.jsx)("div",{children:"No game content available"});const s=Object.entries(n);return 0===s.length?(0,f.jsx)("div",{children:"No games configured"}):(0,f.jsx)(S,{queryString:"game",className:"game-tabs",children:s.map(([e,n])=>{const s=D.k[e];return s&&n?(0,f.jsx)(k,{value:e,label:s.PrettyName,attributes:{className:e},children:n},e):null})})}},20763:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"type":"mdx","permalink":"/Entities/prop_static-steamvr","source":"@site/src/pages/Entities/prop_static-steamvr.mdx","description":"\x3c!---","frontMatter":{"hide_table_of_contents":true},"unlisted":false}');var r=s(74848),l=s(28453);const t={hide_table_of_contents:!0},o=void 0,c={},d=[];function a(e){const n={br:"br",code:"code",em:"em",li:"li",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Point Entity"}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:(0,r.jsx)("h2",{children:"Keyvalues"})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"World Model"})," (",(0,r.jsx)(n.code,{children:"model"}),") <",(0,r.jsx)(n.code,{children:"Resource"}),">"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Collisions"})," (",(0,r.jsx)(n.code,{children:"solid"}),") <",(0,r.jsx)(n.code,{children:"Choices"}),">"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Not Solid"}),"\n",(0,r.jsx)(n.li,{children:"Use axis-aligned box"}),"\n",(0,r.jsx)(n.li,{children:"Use oriented Box"}),"\n",(0,r.jsx)(n.li,{children:"Use VPhysics"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Disable Shadows"})," (",(0,r.jsx)(n.code,{children:"disableshadows"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Screen Space Fade"})," (",(0,r.jsx)(n.code,{children:"screenspacefade"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","The method by which the fading distance should be determined. If 'No', the fade distances is the distance from the player's view to the object, in inches. If 'Yes', the fade distance is the size of the object onscreen, in pixels."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Skin"})," (",(0,r.jsx)(n.code,{children:"skin"}),") <",(0,r.jsx)(n.code,{children:"MaterialGroup"}),">",(0,r.jsx)(n.br,{}),"\n","Some models have multiple versions of their textures, called skins."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"LOD Level"})," (",(0,r.jsx)(n.code,{children:"lodlevel"}),") <",(0,r.jsx)(n.code,{children:"LodLevel"}),">",(0,r.jsx)(n.br,{}),"\n","LOD level to be displayed in game. Set to Auto for standard automatic selection, or set to a specific level to always use that level."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Start Fade Dist/Pixels"})," (",(0,r.jsx)(n.code,{children:"fademindist"}),") <",(0,r.jsx)(n.code,{children:"Float"}),">",(0,r.jsx)(n.br,{}),"\n","Distance at which the prop starts to fade (<0 = use fademaxdist). If 'Screen Space Fade' is selected, this represents the number of pixels wide covered by the prop when it starts to fade."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"End Fade Dist/Pixels"})," (",(0,r.jsx)(n.code,{children:"fademaxdist"}),") <",(0,r.jsx)(n.code,{children:"Float"}),">",(0,r.jsx)(n.br,{}),"\n","Maximum distance at which the prop is visible (0 = don't fade out). If 'Screen Space Fade' is selected, this represents the ",(0,r.jsx)(n.em,{children:"minimum"})," number of pixels wide covered by the prop when it fades."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Fade Scale"})," (",(0,r.jsx)(n.code,{children:"fadescale"}),") <",(0,r.jsx)(n.code,{children:"Float"}),">",(0,r.jsx)(n.br,{}),"\n","If you specify a fade in the worldspawn, or if the engine is running under dx7 [hl2/ep1/portal] or dx8 [ep2/tf], then the engine will forcibly fade out props even if fademindist/fademaxdist isn't specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances,and greater than 1 cause it to fade out at closer distances."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Detail Geometry"})," (",(0,r.jsx)(n.code,{children:"detailgeometry"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","If true this geometry is not important for precomputed lighting"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Vis Occluder"})," (",(0,r.jsx)(n.code,{children:"visoccluder"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","If true this geometry is used as an occluder for precomputed visibility"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Bake To World"})," (",(0,r.jsx)(n.code,{children:"baketoworld"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","If true this geometry will be baked into the world geometry of the map so that the model is not referenced at runtime."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Alpha"})," (",(0,r.jsx)(n.code,{children:"renderamt"}),") <",(0,r.jsx)(n.code,{children:"Integer"}),">",(0,r.jsx)(n.br,{}),"\n","Alpha of the fade, where 0 = fully transparent and 255 = fully opaque."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Color (R G B)"})," (",(0,r.jsx)(n.code,{children:"rendercolor"}),") <",(0,r.jsx)(n.code,{children:"Color255"}),">"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Lighting Origin"})," (",(0,r.jsx)(n.code,{children:"lightingorigin"}),") <",(0,r.jsx)(n.code,{children:"TargetDestination"}),">",(0,r.jsx)(n.br,{}),"\n","Select a an entity to specify a location to sample lighting from, instead of using this entity's bounding box center."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Light Group"})," (",(0,r.jsx)(n.code,{children:"lightgroup"}),") <",(0,r.jsx)(n.code,{children:"String"}),">",(0,r.jsx)(n.br,{}),"\n","Will only be lit by lights affecting this group."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Render to Cubemaps"})," (",(0,r.jsx)(n.code,{children:"rendertocubemaps"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","If true, this geometry renders into baked cube maps"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Precompute Light Probes"})," (",(0,r.jsx)(n.code,{children:"precomputelightprobes"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","Pre-compute environment map and light probe volume used on this object."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Material"})," (",(0,r.jsx)(n.code,{children:"materialoverride"}),") <",(0,r.jsx)(n.code,{children:"Material"}),">"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Disable in low quality mode"})," (",(0,r.jsx)(n.code,{children:"disableinlowquality"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","Do not render this prop when using the lowest quality video settings, it is an non-essential detail."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Lightmap Scale Bias"})," (",(0,r.jsx)(n.code,{children:"lightmapscalebias"}),") <",(0,r.jsx)(n.code,{children:"Choices"}),">",(0,r.jsx)(n.br,{}),"\n","Use to scale the resolution of the lightmap for this object."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Scale down by 256"}),"\n",(0,r.jsx)(n.li,{children:"Scale down by 128"}),"\n",(0,r.jsx)(n.li,{children:"Scale down by 64"}),"\n",(0,r.jsx)(n.li,{children:"Scale down by 32"}),"\n",(0,r.jsx)(n.li,{children:"Scale down by 16"}),"\n",(0,r.jsx)(n.li,{children:"Scale down by 8"}),"\n",(0,r.jsx)(n.li,{children:"Scale down by 4"}),"\n",(0,r.jsx)(n.li,{children:"Scale down by 2"}),"\n",(0,r.jsx)(n.li,{children:"Default (no scale)"}),"\n",(0,r.jsx)(n.li,{children:"Scale up by 2"}),"\n",(0,r.jsx)(n.li,{children:"Scale up by 4"}),"\n",(0,r.jsx)(n.li,{children:"Scale up by 8"}),"\n",(0,r.jsx)(n.li,{children:"Scale up by 16"}),"\n",(0,r.jsx)(n.li,{children:"Scale up by 32"}),"\n",(0,r.jsx)(n.li,{children:"Scale up by 64"}),"\n",(0,r.jsx)(n.li,{children:"Scale up by 128"}),"\n",(0,r.jsx)(n.li,{children:"Scale up by 256"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Bake Lighting"})," (",(0,r.jsx)(n.code,{children:"bakelighting"}),") <",(0,r.jsx)(n.code,{children:"Choices"}),">"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Default"}),"\n",(0,r.jsx)(n.li,{children:"No"}),"\n",(0,r.jsx)(n.li,{children:"Yes"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Render with Dynamic Objects"})," (",(0,r.jsx)(n.code,{children:"renderwithdynamic"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","Render this object with other dynamic objects"]}),"\n"]}),"\n"]})]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>o});var i=s(96540);const r={},l=i.createContext(r);function t(e){const n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(l.Provider,{value:n},e.children)}},63723:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"type":"mdx","permalink":"/Entities/prop_static-hla","source":"@site/src/pages/Entities/prop_static-hla.mdx","description":"\x3c!---","frontMatter":{"hide_table_of_contents":true},"unlisted":false}');var r=s(74848),l=s(28453);const t={hide_table_of_contents:!0},o=void 0,c={},d=[];function a(e){const n={br:"br",code:"code",em:"em",li:"li",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Point Entity"}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:(0,r.jsx)("h2",{children:"Keyvalues"})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"World Model"})," (",(0,r.jsx)(n.code,{children:"model"}),") <",(0,r.jsx)(n.code,{children:"Resource"}),">"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Collisions"})," (",(0,r.jsx)(n.code,{children:"solid"}),") <",(0,r.jsx)(n.code,{children:"Choices"}),">"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Not Solid"}),"\n",(0,r.jsx)(n.li,{children:"Use axis-aligned box"}),"\n",(0,r.jsx)(n.li,{children:"Use oriented Box"}),"\n",(0,r.jsx)(n.li,{children:"Use VPhysics"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Disable Shadows"})," (",(0,r.jsx)(n.code,{children:"disableshadows"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Screen Space Fade"})," (",(0,r.jsx)(n.code,{children:"screenspacefade"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","The method by which the fading distance should be determined. If 'No', the fade distances is the distance from the player's view to the object, in inches. If 'Yes', the fade distance is the size of the object onscreen, in pixels."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Skin"})," (",(0,r.jsx)(n.code,{children:"skin"}),") <",(0,r.jsx)(n.code,{children:"MaterialGroup"}),">",(0,r.jsx)(n.br,{}),"\n","Some models have multiple versions of their textures, called skins."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"LOD Level"})," (",(0,r.jsx)(n.code,{children:"lodlevel"}),") <",(0,r.jsx)(n.code,{children:"LodLevel"}),">",(0,r.jsx)(n.br,{}),"\n","LOD level to be displayed in game. Set to Auto for standard automatic selection, or set to a specific level to always use that level."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Start Fade Dist/Pixels"})," (",(0,r.jsx)(n.code,{children:"fademindist"}),") <",(0,r.jsx)(n.code,{children:"Float"}),">",(0,r.jsx)(n.br,{}),"\n","Distance at which the prop starts to fade (<0 = use fademaxdist). If 'Screen Space Fade' is selected, this represents the number of pixels wide covered by the prop when it starts to fade."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"End Fade Dist/Pixels"})," (",(0,r.jsx)(n.code,{children:"fademaxdist"}),") <",(0,r.jsx)(n.code,{children:"Float"}),">",(0,r.jsx)(n.br,{}),"\n","Maximum distance at which the prop is visible (0 = don't fade out). If 'Screen Space Fade' is selected, this represents the ",(0,r.jsx)(n.em,{children:"minimum"})," number of pixels wide covered by the prop when it fades."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Fade Scale"})," (",(0,r.jsx)(n.code,{children:"fadescale"}),") <",(0,r.jsx)(n.code,{children:"Float"}),">",(0,r.jsx)(n.br,{}),"\n","If you specify a fade in the worldspawn, or if the engine is running under dx7 [hl2/ep1/portal] or dx8 [ep2/tf], then the engine will forcibly fade out props even if fademindist/fademaxdist isn't specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances,and greater than 1 cause it to fade out at closer distances."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Detail Geometry"})," (",(0,r.jsx)(n.code,{children:"detailgeometry"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","If true this geometry is not important for precomputed lighting"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Vis Occluder"})," (",(0,r.jsx)(n.code,{children:"visoccluder"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","If true this geometry is used as an occluder for precomputed visibility"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Bake To World"})," (",(0,r.jsx)(n.code,{children:"baketoworld"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","If true this geometry will be baked into the world geometry of the map so that the model is not referenced at runtime."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Alpha"})," (",(0,r.jsx)(n.code,{children:"renderamt"}),") <",(0,r.jsx)(n.code,{children:"Integer"}),">",(0,r.jsx)(n.br,{}),"\n","Alpha of the fade, where 0 = fully transparent and 255 = fully opaque."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Color (R G B)"})," (",(0,r.jsx)(n.code,{children:"rendercolor"}),") <",(0,r.jsx)(n.code,{children:"Color255"}),">"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Lighting Origin"})," (",(0,r.jsx)(n.code,{children:"lightingorigin"}),") <",(0,r.jsx)(n.code,{children:"TargetDestination"}),">",(0,r.jsx)(n.br,{}),"\n","Select a an entity to specify a location to sample lighting from, instead of using this entity's bounding box center."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Light Group"})," (",(0,r.jsx)(n.code,{children:"lightgroup"}),") <",(0,r.jsx)(n.code,{children:"String"}),">",(0,r.jsx)(n.br,{}),"\n","Will only be lit by lights affecting this group."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Render to Cubemaps"})," (",(0,r.jsx)(n.code,{children:"rendertocubemaps"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","If true, this geometry renders into baked cube maps"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Precompute Light Probes"})," (",(0,r.jsx)(n.code,{children:"precomputelightprobes"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","Pre-compute environment map and light probe volume used on this object."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Material"})," (",(0,r.jsx)(n.code,{children:"materialoverride"}),") <",(0,r.jsx)(n.code,{children:"Material"}),">"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Disable in low quality mode"})," (",(0,r.jsx)(n.code,{children:"disableinlowquality"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","Do not render this prop when using the lowest quality video settings, it is an non-essential detail."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Lightmap Scale Bias"})," (",(0,r.jsx)(n.code,{children:"lightmapscalebias"}),") <",(0,r.jsx)(n.code,{children:"Choices"}),">",(0,r.jsx)(n.br,{}),"\n","Use to scale the resolution of the lightmap for this object."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Scale down by 256"}),"\n",(0,r.jsx)(n.li,{children:"Scale down by 128"}),"\n",(0,r.jsx)(n.li,{children:"Scale down by 64"}),"\n",(0,r.jsx)(n.li,{children:"Scale down by 32"}),"\n",(0,r.jsx)(n.li,{children:"Scale down by 16"}),"\n",(0,r.jsx)(n.li,{children:"Scale down by 8"}),"\n",(0,r.jsx)(n.li,{children:"Scale down by 4"}),"\n",(0,r.jsx)(n.li,{children:"Scale down by 2"}),"\n",(0,r.jsx)(n.li,{children:"Default (no scale)"}),"\n",(0,r.jsx)(n.li,{children:"Scale up by 2"}),"\n",(0,r.jsx)(n.li,{children:"Scale up by 4"}),"\n",(0,r.jsx)(n.li,{children:"Scale up by 8"}),"\n",(0,r.jsx)(n.li,{children:"Scale up by 16"}),"\n",(0,r.jsx)(n.li,{children:"Scale up by 32"}),"\n",(0,r.jsx)(n.li,{children:"Scale up by 64"}),"\n",(0,r.jsx)(n.li,{children:"Scale up by 128"}),"\n",(0,r.jsx)(n.li,{children:"Scale up by 256"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Bake Lighting"})," (",(0,r.jsx)(n.code,{children:"bakelighting"}),") <",(0,r.jsx)(n.code,{children:"Choices"}),">"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Default"}),"\n",(0,r.jsx)(n.li,{children:"No"}),"\n",(0,r.jsx)(n.li,{children:"Yes"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Render with Dynamic Objects"})," (",(0,r.jsx)(n.code,{children:"renderwithdynamic"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","Render this object with other dynamic objects"]}),"\n"]}),"\n"]})]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},73129:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"type":"mdx","permalink":"/Entities/prop_static-dota2","source":"@site/src/pages/Entities/prop_static-dota2.mdx","description":"\x3c!---","frontMatter":{"hide_table_of_contents":true},"unlisted":false}');var r=s(74848),l=s(28453);const t={hide_table_of_contents:!0},o=void 0,c={},d=[];function a(e){const n={br:"br",code:"code",li:"li",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Point Entity"}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:(0,r.jsx)("h2",{children:"Keyvalues"})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Model"})," (",(0,r.jsx)(n.code,{children:"model"}),") <",(0,r.jsx)(n.code,{children:"Resource"}),">"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Tint Color"})," (",(0,r.jsx)(n.code,{children:"rendercolor"}),") <",(0,r.jsx)(n.code,{children:"Color255"}),">"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Material Group"})," (",(0,r.jsx)(n.code,{children:"skin"}),") <",(0,r.jsx)(n.code,{children:"MaterialGroup"}),">",(0,r.jsx)(n.br,{}),"\n","Some props have multiple matieral variations called Material Groups, here you can see what material groups are available for selection."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Collision Type"})," (",(0,r.jsx)(n.code,{children:"solid"}),") <",(0,r.jsx)(n.code,{children:"Choices"}),">"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Not Solid"}),"\n",(0,r.jsx)(n.li,{children:"Use VPhysics"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Override Collision Property"})," (",(0,r.jsx)(n.code,{children:"collision_override"}),") <",(0,r.jsx)(n.code,{children:"CollisionProperty"}),">",(0,r.jsx)(n.br,{}),"\n","If a value is selected, it will be applied as the collision property to all of the phsyics shapes generated by this instance of the model, overriding any values specified in the model."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Lighting Type"})," (",(0,r.jsx)(n.code,{children:"bakelighting"}),") <",(0,r.jsx)(n.code,{children:"Choices"}),">",(0,r.jsx)(n.br,{}),"\n","Selects whether to use lightmapping or lightprobes for this mesh. Note: Selecting light probes will disable mesh merging/batching, creating extra draw calls. To merge lightprobed meshes, enable the Bake to World parameter."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Default"}),"\n",(0,r.jsx)(n.li,{children:"Lightmapped"}),"\n",(0,r.jsx)(n.li,{children:"Lightprobed"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Shadow Type"})," (",(0,r.jsx)(n.code,{children:"disableshadows"}),") <",(0,r.jsx)(n.code,{children:"Choices"}),">",(0,r.jsx)(n.br,{}),"\n","Selects the type of shadows that should be cast from this prop_static."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Baked & Dynamic"}),"\n",(0,r.jsx)(n.li,{children:"Only Baked"}),"\n",(0,r.jsx)(n.li,{children:"Only Dynamic"}),"\n",(0,r.jsx)(n.li,{children:"None"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Emissive"})," (",(0,r.jsx)(n.code,{children:"emissive"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","Allow this prop to emit lighting. Note that this only works on materials with Self Illum parameters, and is only visible in the GPU Path Tracing Preview and in the final lightmap bake."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Emissive Boost"})," (",(0,r.jsx)(n.code,{children:"emissive_lighting_boost"}),") <",(0,r.jsx)(n.code,{children:"Float"}),">",(0,r.jsx)(n.br,{}),"\n","Used to boost emissive lighting from a mesh. Note that boosting emissive on smaller meshes can create more lighting artifacts/noise."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Lightmap Scale Bias"})," (",(0,r.jsx)(n.code,{children:"lightmapscalebias"}),") <",(0,r.jsx)(n.code,{children:"Choices"}),">",(0,r.jsx)(n.br,{}),"\n","Used to scale the resolution of the lightmap for this mesh."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Scale down by 8"}),"\n",(0,r.jsx)(n.li,{children:"Scale down by 4"}),"\n",(0,r.jsx)(n.li,{children:"Scale down by 2"}),"\n",(0,r.jsx)(n.li,{children:"Default (no scale)"}),"\n",(0,r.jsx)(n.li,{children:"Scale up by 2"}),"\n",(0,r.jsx)(n.li,{children:"Scale up by 4"}),"\n",(0,r.jsx)(n.li,{children:"Scale up by 8"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Bake As Double-Sided"})," (",(0,r.jsx)(n.code,{children:"bakelightdoublesided"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","Bakes the mesh as if it were double-sided geometry in the lightmapper. Useful on geometry with 'Render Backfaces' enabled via it's material (such as foliage). When the lightmapper sees many and/or large backfaces it will invalidate lightmap samples as an optimization, which can lead to lightmap errors/reduced quality in some circumstances."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Vis Occluder"})," (",(0,r.jsx)(n.code,{children:"visoccluder"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","If true this geometry is used as an occluder for precomputed visibility. As a rule this geometry should be as simplistic as possible"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Material Override"})," (",(0,r.jsx)(n.code,{children:"materialoverride"}),") <",(0,r.jsx)(n.code,{children:"Material"}),">",(0,r.jsx)(n.br,{}),"\n","This will override all materials on a selected mesh with a specific material"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Render LOD"})," (",(0,r.jsx)(n.code,{children:"lodlevel"}),") <",(0,r.jsx)(n.code,{children:"LodLevel"}),">",(0,r.jsx)(n.br,{}),"\n","Auto for standard LOD behaviour, or select an explicit LOD to use. Note that LODs take up more room in the lightmap and do not merge, potentially making them less performant if used on many objects (Set to Auto)."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Start Fade Dist"})," (",(0,r.jsx)(n.code,{children:"fademindist"}),") <",(0,r.jsx)(n.code,{children:"Float"}),">",(0,r.jsx)(n.br,{}),"\n","Distance at which the prop starts to fade (-1 = use fademaxdist)."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"End Fade Dist"})," (",(0,r.jsx)(n.code,{children:"fademaxdist"}),") <",(0,r.jsx)(n.code,{children:"Float"}),">",(0,r.jsx)(n.br,{}),"\n","Maximum distance at which the prop is visible (0 = don't fade out)."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Force Bake To World"})," (",(0,r.jsx)(n.code,{children:"baketoworld"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","If true mesh will be baked/merged into the world geometry of the map so that the model is not referenced at runtime. Use this if you want light probed static meshes to merge"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Disable Mesh Merging"})," (",(0,r.jsx)(n.code,{children:"disablemerging"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","If true this will not be merged with other geometry during map compile (reduces rendering efficiency)."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Alpha"})," (",(0,r.jsx)(n.code,{children:"renderamt"}),") <",(0,r.jsx)(n.code,{children:"Integer"}),">",(0,r.jsx)(n.br,{}),"\n","Alpha of the fade, where 0 = fully transparent and 255 = fully opaque."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Render to Cubemaps"})," (",(0,r.jsx)(n.code,{children:"rendertocubemaps"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","If true, this geometry renders into baked cube maps"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Render with Dynamic Objects"})," (",(0,r.jsx)(n.code,{children:"renderwithdynamic"}),") <",(0,r.jsx)(n.code,{children:"Boolean"}),">",(0,r.jsx)(n.br,{}),"\n","Render this object with other dynamic objects"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Grass Exclusion Radius"})," (",(0,r.jsx)(n.code,{children:"grass_exclusion_radius"}),") <",(0,r.jsx)(n.code,{children:"Float"}),">",(0,r.jsx)(n.br,{}),"\n","Don't grow grass within this radius."]}),"\n"]}),"\n"]})]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);